{"version":3,"sources":["webpack:///standard-period-selector-es5.min.js","webpack:///webpack/bootstrap 4856df7191f01da09230","webpack:///./src/index.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/standard-period-selector.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_typeof","Symbol","iterator","obj","constructor","prototype","StandardPeriodSelector","env","factory","document","win","Error","window","undefined","_window","windowExists","FC","FusionCharts","register","registerComponent","webpackPolyfill","deprecate","paths","children","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","dep","this","self","ratio","toolbox","getComponent","HorizontalToolbar","ComponentGroup","SymbolStore","all","calculatedPeriods","startDataset","startActiveWindow","endActiveWindow","standardCalculatedPeriods","standardContexualPeriods","startPointUnit","startPointMultiplier","noCalcButtons","minimumBucket","buttonGroup","toolbar","categoryClicked","btns","contextualObj","calculatedObj","tdButtons","name","abbreviation","parent","milliseconds","description","multiplier","config","anchorPositions","contextual","calculated","tertiaryTimePeriods","_babTimer","propsChangeListener","start","end","updatePending","setTimeout","onActiveRangeChange","value","btn","hide","targetBlock","j","activeWindow","timePeriods","interval","endDataset","hideAllCalcBtns","single","Math","floor","push","multipliers","show","redraw","boundElement","bBox","x1","x2","y2","activeBtn","selectLine","saveSelectLine","clickedId","graphics","paper","path","stroke","stroke-width","toFront","svgElems","node","getBBox","x","width","y","height","attr","found","lastClickedBtnObj","contextStart","contextEnd","showApplicableCalculatedButtons","heighlightActiveRange","timeArr","len","possibleFactors","timeName","timeObj","customMultipliers","btnCalc","btnObj","_this","model","globalReactiveModel","_loop","keyAbb","keyName","fn","lock","prop","unlock","shortKey","chart","smartLabel","chartContainer","container","extData","style","attachEventHandlers","click","tooltext","addSymbol","buttons","endStamp","dateStart","dateEnd","relativeTDButton","Date","setMonth","setDate","setHours","setMinutes","setSeconds","getMonth","getDate","getDay","valueOf","Infinity","abs","contextualConfig","_this2","generateCtxBtnList","_loop2","allButton","fromDateLabel","group","setConfig","fill","borderThickness","Label","addComponent","require","keySelect","notFound","canvasConfig","markerManager","reactiveModel","spaceManagerInstance","chartInstance","extDataUser","timeRules","apiInstance","getComponentStore","getCanvasByIndex","composition","impl","getDataAggregator","getAggregationTimeRules","processMultipliers","disabled","default-select","anchor-align","posWrtCanvas","layout","alignment","orientation","millisecond","second","minute","hour","day","month","year","label-config","text","font-family","font-size","all-config","labelFill","symbolStrokeWidth","strokeWidth","hoverFill","radius","margin","right","btnTextStyle","fontFamily","fontSize","line-height","letter-spacing","calculated-config","contextual-config-first","left","contextual-config","assign","measurement","flag","toolbars","createToolbar","onPropsChange","onPropChange","absEnd","logicalSpace","ln","availableWidth","arguments","_pWidth","availableHeight","_pHeight","getLogicalSpace","padding","parentGroup","add","ref","priority","type","position","dimensions","getParentComponentGroup","_ref","getWidth","getHeight","mes","createCalculatedButtons","createContextualButtons","draw"],"mappings":"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","file":"standard-period-selector-es5.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar StandardPeriodSelector = __webpack_require__(2);\n\t\n\t;(function (env, factory) {\n\t  if (( false ? 'undefined' : _typeof(module)) === 'object' && module.exports) {\n\t    module.exports = env.document ? factory(env) : function (win) {\n\t      if (!win.document) {\n\t        throw new Error('Window with document not present');\n\t      }\n\t      return factory(win, true);\n\t    };\n\t  } else {\n\t    env.StandardPeriodSelector = factory(env, true);\n\t  }\n\t})(typeof window !== 'undefined' ? window : undefined, function (_window, windowExists) {\n\t  var FC = _window.FusionCharts;\n\t  FC.register('extension', ['private', 'standard-period-selector', function () {\n\t    FC.registerComponent('extensions', 'standard-period-selector', StandardPeriodSelector({ FusionCharts: FC }));\n\t  }]);\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)(module)))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\n\t\tif(!module.webpackPolyfill) {\n\t\t\tmodule.deprecate = function() {};\n\t\t\tmodule.paths = [];\n\t\t\t// module.parent = undefined by default\n\t\t\tmodule.children = [];\n\t\t\tmodule.webpackPolyfill = 1;\n\t\t}\n\t\treturn module;\n\t}\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t/**\n\t * Class definition of StandardPeriodSelector\n\t */\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tmodule.exports = function (dep) {\n\t  var StandardPeriodSelector = function () {\n\t    /**\n\t     *In time series charts, it is required to have some\n\t     *optional UI buttons / options to select the visible\n\t     *canvas range to a standard time period like\n\t     *1 month, 1 year, 5 years, 3 months,  YTD etc.\n\t     *Also, from the same UI it should have an option\n\t     *to select the full date-time range.\n\t     *\n\t     *The configuration object for the extension is as follows:\n\t     *The extension provides an optional tool (UI buttons)\n\t     *for the user to select various popular standard time periods\n\t     *like 1 week, 1 month, 3 month, 1 year, 5 year, YTD, QTD,\n\t     *MTD, DTT, All etc.\n\t     *\n\t     *@example\n\t     *datasource: {\n\t     *  extension: {\n\t     *     'standard-period-selector': {\n\t     *       'disabled': 'false',\n\t     *       'default-select': 'ALL',\n\t     *       'posWrtCanvas': 'top',\n\t     *       'anchor-align': 'left',\n\t     *       'layout': 'inline',\n\t     *       'alignment': 'left',\n\t     *       'orientation': 'horizontal',\n\t     *     }\n\t     *   }\n\t     *}\n\t     *\n\t     *\n\t     */\n\t\n\t    function StandardPeriodSelector() {\n\t      _classCallCheck(this, StandardPeriodSelector);\n\t\n\t      /**\n\t       * @private\n\t       */\n\t      var self = this;\n\t      self.ratio = 8;\n\t      self.toolbox = FusionCharts.getComponent('api', 'toolbox');\n\t      self.HorizontalToolbar = self.toolbox.HorizontalToolbar;\n\t      self.ComponentGroup = self.toolbox.ComponentGroup;\n\t      self.SymbolStore = self.toolbox.SymbolStore;\n\t      self.all = 1;\n\t      self.calculatedPeriods = [];\n\t      self.startDataset = 0;\n\t      // self.endDataset = self.globalReactiveModel.model['x-axis-absolute-range-end'];\n\t      self.startActiveWindow = 0;\n\t      self.endActiveWindow = 1;\n\t      self.standardCalculatedPeriods = [];\n\t      self.standardContexualPeriods = [];\n\t      self.startPointUnit = 0;\n\t      self.startPointMultiplier = 0;\n\t      self.noCalcButtons = 0;\n\t      self.minimumBucket = 1;\n\t      self.buttonGroup = {};\n\t      self.toolbar = {};\n\t      self.categoryClicked;\n\t      self.btns = {\n\t        contextualObj: {},\n\t        calculatedObj: {}\n\t      };\n\t\n\t      self.tdButtons = [{\n\t        'name': 'YTD',\n\t        'abbreviation': 'YTD',\n\t        'parent': 'year',\n\t        'milliseconds': 31104000000,\n\t        'description': 'Year to Date'\n\t      }, {\n\t        'name': 'QTD',\n\t        'abbreviation': 'QTD',\n\t        'parent': 'month',\n\t        'multiplier': 3,\n\t        'milliseconds': 7776000000,\n\t        'description': 'Quarter to Date'\n\t      }, {\n\t        'name': 'MTD',\n\t        'abbreviation': 'MTD',\n\t        'parent': 'month',\n\t        'milliseconds': 2592000000,\n\t        'description': 'Month to Date'\n\t      }, {\n\t        'name': 'WTD',\n\t        'abbreviation': 'WTD',\n\t        'parent': 'day',\n\t        'multiplier': 7,\n\t        'milliseconds': 604800000,\n\t        'description': 'Week to Date'\n\t      }, {\n\t        'name': 'Y',\n\t        'abbreviation': 'Y',\n\t        'parent': 'day',\n\t        'milliseconds': 86400000,\n\t        'description': 'Yesterday'\n\t      }, {\n\t        'name': 'T',\n\t        'abbreviation': 'T',\n\t        'parent': 'day',\n\t        'milliseconds': 86400000,\n\t        'description': 'Today'\n\t      }];\n\t      self.config = {\n\t        anchorPositions: 'right',\n\t        all: '1',\n\t        contextual: '1',\n\t        calculated: '1',\n\t        tertiaryTimePeriods: {}\n\t      };\n\t\n\t      self._babTimer = 0;\n\t\n\t      self.propsChangeListener = function (start, end) {\n\t        self.startActiveWindow = start[1];\n\t        self.endActiveWindow = end[1];\n\t\n\t        if (self._babTimer) {\n\t          if (!self.updatePending) {\n\t            self.updatePending = true;\n\t            setTimeout(function () {\n\t              self.updatePending = false;\n\t              self.onActiveRangeChange();\n\t            }, self._babTimer);\n\t          }\n\t        } else {\n\t          self._babTimer = 200;\n\t          self.onActiveRangeChange();\n\t        }\n\t      };\n\t    }\n\t\n\t    // --test case made--\n\t\n\t\n\t    _createClass(StandardPeriodSelector, [{\n\t      key: 'hideAllCalcBtns',\n\t      value: function hideAllCalcBtns() {\n\t        var self = this,\n\t            calculatedObj = self.btns.calculatedObj,\n\t            i;\n\t        for (i in calculatedObj) {\n\t          calculatedObj[i].btn.hide();\n\t        }\n\t      }\n\t    }, {\n\t      key: 'showApplicableCalculatedButtons',\n\t      value: function showApplicableCalculatedButtons() {\n\t        var self = this,\n\t            targetBlock,\n\t            i = 0,\n\t            j = 0,\n\t            activeWindow = self.endActiveWindow - self.startActiveWindow,\n\t            key,\n\t            anchorPositions = self.anchorPositions,\n\t            calculatedObj = self.btns.calculatedObj,\n\t            timePeriods = self.timePeriods,\n\t            interval = 0,\n\t            name,\n\t            abbreviation,\n\t            standardCalculatedPeriods = [],\n\t            minimumBucket = self.minimumBucket;\n\t\n\t        if (anchorPositions === 'right') {\n\t          targetBlock = self.endActiveWindow - self.startDataset;\n\t        } else if (anchorPositions === 'left') {\n\t          targetBlock = self.endDataset - self.startActiveWindow;\n\t        }\n\t\n\t        self.hideAllCalcBtns();\n\t        for (i = 0; i < timePeriods.length; i++) {\n\t          interval = timePeriods[i].interval;\n\t          name = timePeriods[i].name;\n\t          abbreviation = timePeriods[i].abbreviation.single;\n\t          // checking whether the unit is applicable for the current target block\n\t          if (targetBlock / interval >= 1) {\n\t            // checking whether the unit is of the higher order and only multiplier 1 is applicable\n\t            if (Math.floor(activeWindow / interval) < 1) {\n\t              standardCalculatedPeriods.push({\n\t                'name': name,\n\t                'abbreviation': abbreviation,\n\t                'multipliers': [1]\n\t              });\n\t            } else {\n\t              // if the unit is of the order of the target block and calculating the multipliers\n\t              standardCalculatedPeriods.push({\n\t                'name': name,\n\t                'abbreviation': abbreviation,\n\t                'multipliers': []\n\t              });\n\t              // calculating and populating the applicable multpliers of each unit\n\t              for (j = 0; j < timePeriods[i].multipliers.length; j++) {\n\t                if (activeWindow / self.ratio < timePeriods[i].multipliers[j] * interval && timePeriods[i].multipliers[j] * interval > minimumBucket) {\n\t                  standardCalculatedPeriods[standardCalculatedPeriods.length - 1].multipliers.push(timePeriods[i].multipliers[j]);\n\t                }\n\t              }\n\t            }\n\t          }\n\t        }\n\t\n\t        for (i = 0; i < standardCalculatedPeriods.length; i++) {\n\t          for (j = 0; j < standardCalculatedPeriods[i].multipliers.length; j++) {\n\t            key = standardCalculatedPeriods[i].multipliers[j] + standardCalculatedPeriods[i].name;\n\t            calculatedObj[key].btn && calculatedObj[key].btn.show();\n\t          }\n\t        }\n\t        self.standardCalculatedPeriods = standardCalculatedPeriods;\n\t        self.toolbar && self.toolbar.redraw();\n\t      }\n\t\n\t      // ******** React on active property change ****\n\t\n\t    }, {\n\t      key: 'heighlightActiveRange',\n\t      value: function heighlightActiveRange() {\n\t        // first check w.r.t contextual btns then others\n\t        var self = this,\n\t            selectLine = self.saveSelectLine,\n\t            boundElement,\n\t            clickedId = self.clickedId,\n\t            bBox,\n\t            x1,\n\t            x2,\n\t            y2,\n\t            activeBtn,\n\t            contextualObj = self.btns.contextualObj,\n\t            calculatedObj = self.btns.calculatedObj;\n\t\n\t        // if the heighliter is not createcd create it\n\t        if (!selectLine) {\n\t          selectLine = self.saveSelectLine || (self.saveSelectLine = self.graphics.paper.path({\n\t            'stroke': '#c95a5a',\n\t            'stroke-width': '2px'\n\t          }).toFront());\n\t        }\n\t\n\t        activeBtn = contextualObj[clickedId] || calculatedObj[clickedId] || self.btns[clickedId];\n\t\n\t        if (activeBtn) {\n\t          boundElement = activeBtn.btn.svgElems.node;\n\t          bBox = boundElement.getBBox();\n\t          x1 = bBox.x;\n\t          x2 = x1 + bBox.width;\n\t          y2 = bBox.y + bBox.height;\n\t          selectLine.show().attr({\n\t            path: ['M', x1 - 0.5, y2 - 0.5, 'L', x2 + 0.5, y2 - 0.5]\n\t          });\n\t        } else {\n\t          selectLine.hide();\n\t        }\n\t      }\n\t\n\t      // --test case made--\n\t\n\t    }, {\n\t      key: 'onActiveRangeChange',\n\t      value: function onActiveRangeChange() {\n\t        var self = this,\n\t            x,\n\t            found,\n\t            categoryClicked = self.categoryClicked,\n\t            clickedId = self.clickedId,\n\t            startDataset = self.startDataset,\n\t            endDataset = self.endDataset,\n\t            startActiveWindow = self.startActiveWindow,\n\t            endActiveWindow = self.endActiveWindow,\n\t            contextualObj = self.btns.contextualObj,\n\t            calculatedObj = self.btns.calculatedObj,\n\t            lastClickedBtnObj;\n\t\n\t        if (categoryClicked === 'ALL') {\n\t          if (!(startDataset === startActiveWindow && endDataset === endActiveWindow)) {\n\t            delete self.clickedId;\n\t            delete self.categoryClicked;\n\t          }\n\t        } else if (categoryClicked === 'contextual') {\n\t          lastClickedBtnObj = contextualObj[clickedId];\n\t          if (lastClickedBtnObj && !(startActiveWindow === lastClickedBtnObj.contextStart && endActiveWindow === lastClickedBtnObj.contextEnd)) {\n\t            delete self.clickedId;\n\t            delete self.categoryClicked;\n\t          }\n\t        } else if (categoryClicked === 'calculated') {\n\t          lastClickedBtnObj = calculatedObj[clickedId];\n\t          if (lastClickedBtnObj && !(endActiveWindow - startActiveWindow === lastClickedBtnObj.interval)) {\n\t            delete self.clickedId;\n\t            delete self.categoryClicked;\n\t          }\n\t        } else {\n\t          // nothing is selected\n\t          if (startDataset === startActiveWindow && endDataset === endActiveWindow) {\n\t            self.clickedId = 'ALL';\n\t            self.categoryClicked = 'ALL';\n\t          } else {\n\t            for (x in contextualObj) {\n\t              lastClickedBtnObj = contextualObj[x];\n\t              if (startActiveWindow === lastClickedBtnObj.contextStart && endActiveWindow === lastClickedBtnObj.contextEnd) {\n\t                self.clickedId = x;\n\t                self.categoryClicked = 'contextual';\n\t                found = true;\n\t              }\n\t            }\n\t            if (!found) {\n\t              for (x in calculatedObj) {\n\t                lastClickedBtnObj = calculatedObj[x];\n\t                if (endActiveWindow - startActiveWindow === lastClickedBtnObj.interval) {\n\t                  self.clickedId = x;\n\t                  self.categoryClicked = 'calculated';\n\t                }\n\t              }\n\t            }\n\t          }\n\t        }\n\t\n\t        self.showApplicableCalculatedButtons();\n\t        self.heighlightActiveRange();\n\t      }\n\t\n\t      // *********** Drzaw the btns initialy ***** //\n\t\n\t      // --test case made--\n\t      // adds multipliers to the timerules object\n\t\n\t    }, {\n\t      key: 'processMultipliers',\n\t      value: function processMultipliers(timeArr) {\n\t        var self = this;\n\t        for (var i = 0; i < timeArr.length; i++) {\n\t          var len = timeArr[i].possibleFactors.length,\n\t              timeName = timeArr[i] && timeArr[i].name,\n\t              timeObj = timeArr && timeArr[i],\n\t              customMultipliers = self && self.customMultipliers || {};\n\t          timeObj.multipliers = [];\n\t          if (customMultipliers[timeName]) {\n\t            timeObj.multipliers = customMultipliers[timeName];\n\t          } else if (len === 1) {\n\t            timeObj.multipliers.push(timeObj.possibleFactors[0]);\n\t          } else if (len === 2) {\n\t            timeObj.multipliers.push(timeObj.possibleFactors[0]);\n\t            timeObj.multipliers.push(timeObj.possibleFactors[len - 1]);\n\t          } else {\n\t            timeObj.multipliers.push(timeObj.possibleFactors[0]);\n\t            timeObj.multipliers.push(Math.floor(timeObj.possibleFactors[len - 1] / 2));\n\t            timeObj.multipliers.push(timeObj.possibleFactors[len - 1]);\n\t          }\n\t        }\n\t        return timeArr;\n\t      }\n\t    }, {\n\t      key: 'createCalculatedButtons',\n\t      value: function createCalculatedButtons(buttonGroup) {\n\t        var _this = this;\n\t\n\t        var self = this,\n\t            btnCalc,\n\t            calculatedObj = self.btns.calculatedObj,\n\t            btnObj,\n\t            anchorPositions = self.anchorPositions,\n\t            minimumBucket = this.minimumBucket,\n\t            model = self.globalReactiveModel.model;\n\t        for (var i = self.timePeriods.length - 1; i >= 0; i--) {\n\t          var _loop = function _loop(j) {\n\t            var keyAbb = self.timePeriods[i].multipliers[j] + self.timePeriods[i].abbreviation.single,\n\t                keyName = self.timePeriods[i].multipliers[j] + self.timePeriods[i].name;\n\t            var interval = self.timePeriods[i].multipliers[j] * self.timePeriods[i].interval;\n\t            if (interval > minimumBucket) {\n\t              btnObj = calculatedObj[keyName] = {\n\t                interval: interval,\n\t                fn: function fn() {\n\t                  self.clickedId = keyName;\n\t                  self.categoryClicked = 'calculated';\n\t                  self.heighlightActiveRange();\n\t                  if (anchorPositions === 'right') {\n\t                    if (model['x-axis-absolute-range-start'] > self.endActiveWindow - interval) {\n\t                      // model['x-axis-visible-range-start'] = model['x-axis-absolute-range-start'];\n\t                      // model['x-axis-visible-range-end'] = model['x-axis-visible-range-start'] + interval;\n\t                      // interval = model['x-axis-visible-range-start'] + interval;\n\t                      self.globalReactiveModel.lock().prop('x-axis-visible-range-end', model['x-axis-visible-range-start'] + interval).prop('x-axis-visible-range-start', self.startDataset).unlock();\n\t                    } else {\n\t                      model['x-axis-visible-range-start'] = self.endActiveWindow - interval;\n\t                    }\n\t                  } else {\n\t                    if (model['x-axis-absolute-range-end'] < self.startActiveWindow + interval) {\n\t                      // model['x-axis-visible-range-end'] = model['x-axis-absolute-range-end'];\n\t                      // model['x-axis-visible-range-start'] = model['x-axis-absolute-range-end'] - interval;\n\t                      // interval = model['x-axis-absolute-range-end'] - interval;\n\t                      self.globalReactiveModel.lock().prop('x-axis-visible-range-end', self.endDataset).prop('x-axis-visible-range-start', model['x-axis-absolute-range-end'] - interval).unlock();\n\t                    } else {\n\t                      model['x-axis-visible-range-end'] = self.startActiveWindow + interval;\n\t                    }\n\t                  }\n\t                },\n\t                shortKey: keyAbb\n\t              };\n\t\n\t              btnCalc = new _this.toolbox.Symbol(keyAbb, true, {\n\t                paper: _this.graphics.paper,\n\t                chart: _this.chart,\n\t                smartLabel: _this.smartLabel,\n\t                chartContainer: _this.graphics.container\n\t              }, self.extData.style['calculated-config']).attachEventHandlers({\n\t                'click': btnObj.fn,\n\t                tooltext: self.timePeriods[i].multipliers[j] + ' ' + self.timePeriods[i].description\n\t              });\n\t              btnObj.btn = btnCalc;\n\t              buttonGroup.addSymbol(btnCalc);\n\t            }\n\t          };\n\t\n\t          for (var j = self.timePeriods[i].multipliers.length - 1; j >= 0; j--) {\n\t            _loop(j);\n\t          }\n\t        }\n\t      }\n\t\n\t      // --test case made--\n\t\n\t    }, {\n\t      key: 'generateCtxBtnList',\n\t      value: function generateCtxBtnList() {\n\t        // generating an array with applicable TD buttons\n\t        var self = this,\n\t            buttons = self.standardContexualPeriods,\n\t            i = 0,\n\t            endStamp = self.globalReactiveModel.model['x-axis-absolute-range-end'] || 9999999,\n\t            dateStart = endStamp - 2,\n\t            dateEnd = endStamp,\n\t            relativeTDButton = {},\n\t            tdButtons = self.tdButtons,\n\t            minimumBucket = self.minimumBucket || 1,\n\t            startActiveWindow = self.startActiveWindow,\n\t            endActiveWindow = self.endActiveWindow;\n\t\n\t        for (; i < tdButtons.length; i++) {\n\t          dateStart = new Date(endStamp);\n\t          if (tdButtons[i].name === 'YTD') {\n\t            dateStart.setMonth(0);\n\t            dateStart.setDate(1);\n\t            dateStart.setHours(0);\n\t            dateStart.setMinutes(0);\n\t            dateStart.setSeconds(0);\n\t          } else if (tdButtons[i].name === 'MTD') {\n\t            dateStart.setDate(1);\n\t            dateStart.setHours(0);\n\t            dateStart.setMinutes(0);\n\t            dateStart.setSeconds(0);\n\t          } else if (tdButtons[i].name === 'QTD') {\n\t            dateStart.setMonth(11 - dateStart.getMonth() % 4);\n\t            dateStart.setDate(0);\n\t            dateStart.setHours(0);\n\t            dateStart.setMinutes(0);\n\t            dateStart.setSeconds(0);\n\t          } else if (tdButtons[i].name === 'WTD') {\n\t            dateStart.setDate(dateStart.getDate() - dateStart.getDay());\n\t            dateStart.setHours(0);\n\t            dateStart.setMinutes(0);\n\t            dateStart.setSeconds(0);\n\t          } else if (tdButtons[i].name === 'Y') {\n\t            dateStart.setHours(0);\n\t            dateStart.setMinutes(0);\n\t            dateStart.setSeconds(0);\n\t            dateStart -= 86400000;\n\t          } else if (tdButtons[i].name === 'T') {\n\t            dateStart.setHours(0);\n\t            dateStart.setMinutes(0);\n\t            dateStart.setSeconds(0);\n\t            if (endStamp === +dateStart) {\n\t              dateStart = +dateStart - 86400000;\n\t            }\n\t          }\n\t\n\t          if (dateEnd < dateStart && dateEnd - dateStart < minimumBucket) {\n\t            continue;\n\t          } else {\n\t            tdButtons[i].dateStart = dateStart.valueOf();\n\t            tdButtons[i].dateEnd = dateEnd.valueOf();\n\t            buttons.push(tdButtons[i]);\n\t          }\n\t        }\n\t        relativeTDButton.milliseconds = Infinity;\n\t        for (i = 0; i < tdButtons.length; i++) {\n\t          if (Math.abs(tdButtons[i].milliseconds - (endActiveWindow - startActiveWindow)) < relativeTDButton.milliseconds) {\n\t            relativeTDButton.milliseconds = tdButtons[i].milliseconds;\n\t            relativeTDButton.name = tdButtons[i].abbreviation;\n\t          }\n\t        }\n\t      }\n\t    }, {\n\t      key: 'createContextualButtons',\n\t      value: function createContextualButtons(buttonGroup) {\n\t        var _this2 = this;\n\t\n\t        var self = this,\n\t            contextualConfig,\n\t            contextualObj = self.btns.contextualObj,\n\t            btnObj,\n\t            keyName;\n\t        self.generateCtxBtnList();\n\t\n\t        var _loop2 = function _loop2(i) {\n\t          contextualConfig = i === 0 ? self.extData.style['contextual-config-first'] : self.extData.style['contextual-config'];\n\t          keyName = _this2.standardContexualPeriods[i].abbreviation;\n\t          btnObj = contextualObj[keyName] = {\n\t            contextStart: self.standardContexualPeriods[i].dateStart,\n\t            contextEnd: self.standardContexualPeriods[i].dateEnd,\n\t            fn: function fn() {\n\t              self.categoryClicked = 'contextual';\n\t              self.clickedId = self.standardContexualPeriods[i].abbreviation;\n\t              self.heighlightActiveRange();\n\t              self.globalReactiveModel.lock().prop('x-axis-visible-range-end', self.standardContexualPeriods[i].dateEnd).prop('x-axis-visible-range-start', self.standardContexualPeriods[i].dateStart).unlock();\n\t            }\n\t          };\n\t\n\t          btnObj.btn = new _this2.toolbox.Symbol(_this2.standardContexualPeriods[i].abbreviation, true, {\n\t            paper: _this2.graphics.paper,\n\t            chart: _this2.chart,\n\t            smartLabel: _this2.smartLabel,\n\t            chartContainer: _this2.graphics.container\n\t          }, contextualConfig).attachEventHandlers({\n\t            'click': btnObj.fn,\n\t            tooltext: _this2.standardContexualPeriods[i].description\n\t          });\n\t\n\t          if (self.standardContexualPeriods[i].dateEnd - self.standardContexualPeriods[i].dateStart >= self.minimumBucket) {\n\t            buttonGroup.addSymbol(btnObj.btn);\n\t          }\n\t        };\n\t\n\t        for (var i = 0; i < this.standardContexualPeriods.length; i++) {\n\t          _loop2(i);\n\t        }\n\t      }\n\t\n\t      // creates toolbar\n\t\n\t    }, {\n\t      key: 'createToolbar',\n\t      value: function createToolbar() {\n\t        var self = this,\n\t            buttonGroup,\n\t            toolbar,\n\t            allButton,\n\t            fromDateLabel,\n\t            group;\n\t\n\t        // initiating the toolbar\n\t        toolbar = new self.HorizontalToolbar({\n\t          paper: self.graphics.paper,\n\t          chart: self.chart,\n\t          smartLabel: self.smartLabel,\n\t          chartContainer: self.graphics.container\n\t        });\n\t        toolbar.setConfig({\n\t          fill: '#fff',\n\t          borderThickness: 0\n\t        });\n\t\n\t        // making group for the extension label\n\t        group = new self.toolbox.ComponentGroup({\n\t          paper: self.graphics.paper,\n\t          chart: self.chart,\n\t          smartLabel: self.smartLabel,\n\t          chartContainer: self.graphics.container\n\t        });\n\t\n\t        // making buttonGroup for the buttons\n\t        buttonGroup = new self.toolbox.ComponentGroup({\n\t          paper: self.graphics.paper,\n\t          chart: self.chart,\n\t          smartLabel: self.smartLabel,\n\t          chartContainer: self.graphics.container\n\t        });\n\t        buttonGroup.setConfig({\n\t          fill: '#fff',\n\t          borderThickness: 0\n\t        });\n\t        group.setConfig({\n\t          fill: '#fff',\n\t          borderThickness: 0\n\t        });\n\t\n\t        // extension label\n\t        fromDateLabel = new self.toolbox.Label('Zoom:', {\n\t          smartLabel: self.smartLabel,\n\t          paper: self.graphics.paper\n\t        }, self.extData.style['label-config']);\n\t        group.addSymbol(fromDateLabel);\n\t\n\t        // 'ALL' button created\n\t        allButton = { fn: function fn() {\n\t            self.clickedId = 'ALL';\n\t            self.categoryClicked = 'ALL';\n\t            self.heighlightActiveRange();\n\t            self.globalReactiveModel.lock().prop('x-axis-visible-range-end', self.endDataset).prop('x-axis-visible-range-start', self.startDataset).unlock();\n\t          } };\n\t        allButton.btn = new self.toolbox.Symbol('ALL', true, {\n\t          paper: self.graphics.paper,\n\t          chart: self.chart,\n\t          smartLabel: self.smartLabel,\n\t          chartContainer: self.graphics.container\n\t        }, self.extData.style['all-config']).attachEventHandlers({\n\t          click: allButton.fn,\n\t          tooltext: 'ALL'\n\t        });\n\t\n\t        self.btns['ALL'] = allButton;\n\t\n\t        buttonGroup.addSymbol(allButton.btn);\n\t\n\t        // create all calculated button\n\t        // self.createCalculatedButtons(buttonGroup);\n\t\n\t        // create all contextual button\n\t        // self.createContextualButtons(buttonGroup);\n\t\n\t        // adding group and button group to toolbar\n\t        toolbar.addComponent(group);\n\t        toolbar.addComponent(buttonGroup);\n\t        self.toolbar = toolbar;\n\t        self.buttonGroup = buttonGroup;\n\t        return toolbar;\n\t      }\n\t    }, {\n\t      key: 'init',\n\t\n\t\n\t      // *********** Extension interface methods *********//\n\t\n\t      value: function init(require) {\n\t        var instance = this,\n\t            calculatedObj = instance.btns.calculatedObj,\n\t            contextualObj = instance.btns.contextualObj,\n\t            keySelect,\n\t            key,\n\t            notFound;\n\t        require(['graphics', 'chart', 'canvasConfig', 'MarkerManager', 'reactiveModel', 'globalReactiveModel', 'spaceManagerInstance', 'smartLabel', 'extData', 'chartInstance', function (graphics, chart, canvasConfig, markerManager, reactiveModel, globalReactiveModel, spaceManagerInstance, smartLabel, extData, chartInstance) {\n\t          instance.graphics = graphics;\n\t          instance.chart = chart;\n\t          instance.markerManager = markerManager;\n\t          instance.canvasConfig = canvasConfig;\n\t          instance.reactiveModel = reactiveModel;\n\t          instance.globalReactiveModel = globalReactiveModel;\n\t          instance.spaceManagerInstance = spaceManagerInstance;\n\t          instance.smartLabel = smartLabel;\n\t          instance.extDataUser = extData;\n\t          instance.chartInstance = chartInstance;\n\t        }]);\n\t        instance.endActiveWindow = instance.globalReactiveModel.model['x-axis-visible-range-end'];\n\t        instance.startActiveWindow = instance.globalReactiveModel.model['x-axis-visible-range-start'];\n\t        instance.startDataset = instance.globalReactiveModel.model['x-axis-absolute-range-start'];\n\t        instance.endDataset = instance.globalReactiveModel.model['x-axis-absolute-range-end'];\n\t        instance.timeRules = instance.chartInstance.apiInstance.getComponentStore();\n\t        instance.timeRules = instance.timeRules.getCanvasByIndex(0).composition.impl;\n\t        instance.timeRules = instance.timeRules.getDataAggregator();\n\t        instance.timeRules = instance.timeRules.getAggregationTimeRules();\n\t        instance.timePeriods = instance.processMultipliers(instance.timeRules);\n\t        instance.extData = {\n\t          'disabled': 'false',\n\t          'default-select': 'ALL',\n\t          'anchor-align': 'left',\n\t          'posWrtCanvas': 'top',\n\t          'layout': 'inline',\n\t          'alignment': 'left',\n\t          'orientation': 'horizontal',\n\t          'customMultipliers': {\n\t            'millisecond': [1, 500],\n\t            'second': [1, 5, 15, 30],\n\t            'minute': [1, 5, 15, 30],\n\t            'hour': [1, 3, 6, 12],\n\t            'day': [1, 7, 15],\n\t            'month': [1, 3, 6],\n\t            'year': [1, 3, 5]\n\t          },\n\t          'style': {\n\t            'label-config': {\n\t              // --config--\n\t              text: {\n\t                style: {\n\t                  'font-family': '\"Lucida Grande\", sans-serif',\n\t                  'font-size': '13',\n\t                  'fill': '#4b4b4b'\n\t                }\n\t              },\n\t              container: {\n\t                height: 22\n\t              }\n\t            },\n\t            'all-config': {\n\t              // --config--\n\t              fill: '#ffffff',\n\t              labelFill: '#4b4b4b',\n\t              symbolStrokeWidth: '2',\n\t              stroke: '#ced5d4',\n\t              strokeWidth: '1',\n\t              hoverFill: '#f7f7f7',\n\t              height: 22,\n\t              radius: 1,\n\t              margin: {\n\t                right: 5\n\t              },\n\t              btnTextStyle: {\n\t                'fontFamily': '\"Lucida Grande\", sans-serif',\n\t                'fontSize': '13',\n\t                'fill': '#4b4b4b',\n\t                'line-height': '1',\n\t                'letter-spacing': '-0.04em'\n\t              }\n\t            },\n\t            'calculated-config': {\n\t              // --config--\n\t              fill: '#ffffff',\n\t              labelFill: '#4b4b4b',\n\t              symbolStrokeWidth: '2',\n\t              stroke: '#ced5d4',\n\t              strokeWidth: '1',\n\t              hoverFill: '#f7f7f7',\n\t              height: 22,\n\t              radius: 1,\n\t              margin: {\n\t                right: 0\n\t              },\n\t              btnTextStyle: {\n\t                'fontFamily': '\"Lucida Grande\", sans-serif',\n\t                'fontSize': '13',\n\t                'fill': '#4b4b4b',\n\t                'line-height': '1',\n\t                'letter-spacing': '-0.04em'\n\t              }\n\t            },\n\t            'contextual-config-first': {\n\t              fill: '#ffffff',\n\t              labelFill: '#4b4b4b',\n\t              symbolStrokeWidth: '2',\n\t              stroke: '#ced5d4',\n\t              strokeWidth: '1',\n\t              height: 22,\n\t              hoverFill: '#f7f7f7',\n\t              radius: 1,\n\t              margin: {\n\t                right: 0,\n\t                left: 5\n\t              },\n\t              btnTextStyle: {\n\t                'fontFamily': '\"Lucida Grande\", sans-serif',\n\t                'fontSize': '13',\n\t                'fill': '#696969',\n\t                'line-height': '1',\n\t                'letter-spacing': '-0.04em'\n\t              }\n\t            },\n\t            'contextual-config': {\n\t              fill: '#ffffff',\n\t              labelFill: '#4b4b4b',\n\t              symbolStrokeWidth: '2',\n\t              stroke: '#ced5d4',\n\t              strokeWidth: '1',\n\t              height: 22,\n\t              hoverFill: '#f7f7f7',\n\t              radius: 1,\n\t              margin: {\n\t                right: 0,\n\t                left: 0\n\t              },\n\t              btnTextStyle: {\n\t                'fontFamily': '\"Lucida Grande\", sans-serif',\n\t                'fontSize': '13',\n\t                'fill': '#4b4b4b',\n\t                'line-height': '1',\n\t                'letter-spacing': '-0.04em'\n\t              }\n\t            }\n\t          }\n\t        };\n\t        Object.assign(instance.extData, instance.extDataUser);\n\t        instance.anchorPositions = instance.extData['anchor-align'];\n\t        instance.customMultipliers = instance.extData.customMultipliers || {\n\t          'millisecond': [1, 500],\n\t          'second': [1, 5, 15, 30],\n\t          'minute': [1, 5, 15, 30],\n\t          'hour': [1, 3, 6, 12],\n\t          'day': [1, 7, 15],\n\t          'month': [1, 3, 6],\n\t          'year': [1, 3]\n\t        };\n\t        keySelect = instance.extData['default-select'];\n\t        if (keySelect) {\n\t          if (keySelect === 'ALL') {\n\t            instance.clickedId = 'ALL';\n\t          } else if (contextualObj[keySelect]) {\n\t            instance.clickedId = keySelect;\n\t          } else {\n\t            notFound = true;\n\t            for (key in calculatedObj) {\n\t              if (notFound && calculatedObj[key].shortKey === keySelect) {\n\t                instance.clickedId = calculatedObj[key].shortKey;\n\t                notFound = false;\n\t              }\n\t            }\n\t          }\n\t        }\n\t\n\t        // instance.setActivePeriod(instance.startActiveWindow, instance.endActiveWindow);\n\t        instance.measurement = {};\n\t        instance.flag = true;\n\t        instance.toolbars = [];\n\t        instance.toolbars.push(instance.createToolbar());\n\t\n\t        instance.globalReactiveModel.onPropsChange(['x-axis-visible-range-start', 'x-axis-visible-range-end'], instance.propsChangeListener);\n\t        instance.globalReactiveModel.onPropChange('x-axis-absolute-range-end', function (absEnd) {\n\t          if (instance.categoryClicked === 'contextual') {\n\t            instance.globalReactiveModel.model['x-axis-visible-range-end'] = instance.globalReactiveModel.model['x-axis-absolute-range-end'];\n\t          }\n\t        });\n\t        return instance;\n\t      }\n\t    }, {\n\t      key: 'getLogicalSpace',\n\t      value: function getLogicalSpace() {\n\t        var availableWidth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._pWidth;\n\t        var availableHeight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._pHeight;\n\t\n\t        // availableWidth /= 2;\n\t        var logicalSpace,\n\t            width = 420,\n\t            // width hardcoded; TODO: make it dynamic\n\t        height = 0,\n\t            i,\n\t            ln,\n\t            self = this;\n\t\n\t        for (i = 0, ln = self.toolbars.length; i < ln; i++) {\n\t          logicalSpace = self.toolbars[i].getLogicalSpace(availableWidth, availableHeight);\n\t          // width = Math.max(logicalSpace.width, width);\n\t          height += logicalSpace.height;\n\t          self.toolbars[i].width = logicalSpace.width;\n\t          self.toolbars[i].height = logicalSpace.height;\n\t        }\n\t        height += self.padding;\n\t        return {\n\t          width: width,\n\t          height: height\n\t        };\n\t      }\n\t    }, {\n\t      key: 'getDefaultGroup',\n\t      value: function getDefaultGroup() {\n\t        return this.parentGroup;\n\t      }\n\t    }, {\n\t      key: 'placeInCanvas',\n\t      value: function placeInCanvas() {\n\t        var _self = this;\n\t        _self.padding = 5;\n\t        _self.spaceManagerInstance.add([{\n\t          name: function name() {\n\t            return 'standard-period-selector-ext';\n\t          },\n\t          ref: function ref(obj) {\n\t            return obj['0'];\n\t          },\n\t          self: function self() {\n\t            return _self;\n\t          },\n\t          priority: function priority() {\n\t            return 2;\n\t          },\n\t          layout: function layout(obj) {\n\t            return obj[_self.extData.layout] || 'inline';\n\t          },\n\t          orientation: [{\n\t            type: function type(obj) {\n\t              return obj[_self.extData.orientation] || 'horizontal';\n\t            },\n\t            position: [{\n\t              type: function type(obj) {\n\t                return obj[_self.extData.posWrtCanvas] || 'top';\n\t              },\n\t              alignment: [{\n\t                type: function type(obj) {\n\t                  return obj[_self.extData.alignment] || 'left';\n\t                },\n\t                dimensions: [function () {\n\t                  var parent = this.getParentComponentGroup();\n\t                  _self._ref = this;\n\t                  return _self.getLogicalSpace(_self._pWidth = parent.getWidth(), _self._pHeight = parent.getHeight());\n\t                }]\n\t              }]\n\t            }]\n\t          }]\n\t        }]);\n\t      }\n\t    }, {\n\t      key: 'setDrawingConfiguration',\n\t      value: function setDrawingConfiguration(x, y, width, height, group) {\n\t        var mes = this.measurement;\n\t        mes.x = x;\n\t        mes.y = y;\n\t        mes.width = width;\n\t        mes.height = height;\n\t\n\t        this.parentGroup = group;\n\t\n\t        return this;\n\t      }\n\t    }, {\n\t      key: 'draw',\n\t\n\t\n\t      // draws extension in the canvas\n\t      value: function draw(x, y, width, height, group) {\n\t        var self = this,\n\t            measurement = self.measurement,\n\t            toolbars = self.toolbars,\n\t            ln,\n\t            i,\n\t            toolbar,\n\t            contextualObj = self.btns.contextualObj,\n\t            calculatedObj = self.btns.calculatedObj,\n\t            clickedId = self.clickedId,\n\t            activeBtn,\n\t            model = self.globalReactiveModel.model,\n\t            minimumBucket = self.minimumBucket,\n\t            buttonGroup = self.buttonGroup;\n\t\n\t        minimumBucket = model['minimum-consecutive-datestamp-diff'] * model['x-axis-maximum-allowed-ticks'];\n\t        self.minimumBucket = minimumBucket;\n\t        // create all calculated button\n\t        self.createCalculatedButtons(buttonGroup);\n\t\n\t        // create all contextual button\n\t        self.createContextualButtons(buttonGroup);\n\t\n\t        x = x === undefined ? measurement.x : x;\n\t        y = y === undefined ? measurement.y : y;\n\t        width = width === undefined ? measurement.width : width;\n\t        height = height === undefined ? measurement.height : height;\n\t        group = group === undefined ? this.parentGroup : group;\n\t        if (width && height) {\n\t          for (i = 0, ln = toolbars.length; i < ln; i++) {\n\t            toolbar = toolbars[i];\n\t            toolbar.draw(x, y, group);\n\t          }\n\t        }\n\t\n\t        if (clickedId) {\n\t          activeBtn = calculatedObj[clickedId] || contextualObj[clickedId] || self.btns[clickedId];\n\t          if (activeBtn) {\n\t            activeBtn.fn && activeBtn.fn();\n\t          } else {\n\t            self.onActiveRangeChange();\n\t          }\n\t        } else {\n\t          self.onActiveRangeChange();\n\t        }\n\t      }\n\t    }]);\n\t\n\t    return StandardPeriodSelector;\n\t  }();\n\t\n\t  return StandardPeriodSelector;\n\t};\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// standard-period-selector-es5.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4856df7191f01da09230","'use strict';\nconst StandardPeriodSelector = require('./standard-period-selector');\n\n;(function (env, factory) {\n  if (typeof module === 'object' && module.exports) {\n    module.exports = env.document\n       ? factory(env) : function (win) {\n         if (!win.document) {\n           throw new Error('Window with document not present');\n         }\n         return factory(win, true);\n       };\n  } else {\n    env.StandardPeriodSelector = factory(env, true);\n  }\n})(typeof window !== 'undefined' ? window : this, function (_window, windowExists) {\n  var FC = _window.FusionCharts;\n  FC.register('extension', ['private', 'standard-period-selector', function () {\n    FC.registerComponent('extensions', 'standard-period-selector', StandardPeriodSelector({FusionCharts: FC}));\n  }]);\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tmodule.children = [];\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 1\n// module chunks = 0","'use strict';\n/**\n * Class definition of StandardPeriodSelector\n */\n\nmodule.exports = function (dep) {\n  class StandardPeriodSelector {\n    /**\n     *In time series charts, it is required to have some\n     *optional UI buttons / options to select the visible\n     *canvas range to a standard time period like\n     *1 month, 1 year, 5 years, 3 months,  YTD etc.\n     *Also, from the same UI it should have an option\n     *to select the full date-time range.\n     *\n     *The configuration object for the extension is as follows:\n     *The extension provides an optional tool (UI buttons)\n     *for the user to select various popular standard time periods\n     *like 1 week, 1 month, 3 month, 1 year, 5 year, YTD, QTD,\n     *MTD, DTT, All etc.\n     *\n     *@example\n     *datasource: {\n     *  extension: {\n     *     'standard-period-selector': {\n     *       'disabled': 'false',\n     *       'default-select': 'ALL',\n     *       'posWrtCanvas': 'top',\n     *       'anchor-align': 'left',\n     *       'layout': 'inline',\n     *       'alignment': 'left',\n     *       'orientation': 'horizontal',\n     *     }\n     *   }\n     *}\n     *\n     *\n     */\n\n    constructor () {\n      /**\n       * @private\n       */\n      var self = this;\n      self.ratio = 8;\n      self.toolbox = FusionCharts.getComponent('api', 'toolbox');\n      self.HorizontalToolbar = self.toolbox.HorizontalToolbar;\n      self.ComponentGroup = self.toolbox.ComponentGroup;\n      self.SymbolStore = self.toolbox.SymbolStore;\n      self.all = 1;\n      self.calculatedPeriods = [];\n      self.startDataset = 0;\n      // self.endDataset = self.globalReactiveModel.model['x-axis-absolute-range-end'];\n      self.startActiveWindow = 0;\n      self.endActiveWindow = 1;\n      self.standardCalculatedPeriods = [];\n      self.standardContexualPeriods = [];\n      self.startPointUnit = 0;\n      self.startPointMultiplier = 0;\n      self.noCalcButtons = 0;\n      self.minimumBucket = 1;\n      self.buttonGroup = {};\n      self.toolbar = {};\n      self.categoryClicked;\n      self.btns = {\n        contextualObj: {},\n        calculatedObj: {}\n      };\n\n      self.tdButtons = [\n        {\n          'name': 'YTD',\n          'abbreviation': 'YTD',\n          'parent': 'year',\n          'milliseconds': 31104000000,\n          'description': 'Year to Date'\n        },\n        {\n          'name': 'QTD',\n          'abbreviation': 'QTD',\n          'parent': 'month',\n          'multiplier': 3,\n          'milliseconds': 7776000000,\n          'description': 'Quarter to Date'\n        },\n        {\n          'name': 'MTD',\n          'abbreviation': 'MTD',\n          'parent': 'month',\n          'milliseconds': 2592000000,\n          'description': 'Month to Date'\n        },\n        {\n          'name': 'WTD',\n          'abbreviation': 'WTD',\n          'parent': 'day',\n          'multiplier': 7,\n          'milliseconds': 604800000,\n          'description': 'Week to Date'\n        },\n        {\n          'name': 'Y',\n          'abbreviation': 'Y',\n          'parent': 'day',\n          'milliseconds': 86400000,\n          'description': 'Yesterday'\n        },\n        {\n          'name': 'T',\n          'abbreviation': 'T',\n          'parent': 'day',\n          'milliseconds': 86400000,\n          'description': 'Today'\n        }\n      ];\n      self.config = {\n        anchorPositions: 'right',\n        all: '1',\n        contextual: '1',\n        calculated: '1',\n        tertiaryTimePeriods: {}\n      };\n\n      self._babTimer = 0;\n\n      self.propsChangeListener = (start, end) => {\n        self.startActiveWindow = start[1];\n        self.endActiveWindow = end[1];\n\n        if (self._babTimer) {\n          if (!self.updatePending) {\n            self.updatePending = true;\n            setTimeout(function () {\n              self.updatePending = false;\n              self.onActiveRangeChange();\n            }, self._babTimer);\n          }\n        } else {\n          self._babTimer = 200;\n          self.onActiveRangeChange();\n        }\n      };\n    }\n\n    // --test case made--\n    hideAllCalcBtns () {\n      var self = this,\n        calculatedObj = self.btns.calculatedObj,\n        i;\n      for (i in calculatedObj) {\n        calculatedObj[i].btn.hide();\n      }\n    }\n\n    showApplicableCalculatedButtons () {\n      var self = this,\n        targetBlock,\n        i = 0,\n        j = 0,\n        activeWindow = self.endActiveWindow - self.startActiveWindow,\n        key,\n        anchorPositions = self.anchorPositions,\n        calculatedObj = self.btns.calculatedObj,\n        timePeriods = self.timePeriods,\n        interval = 0,\n        name,\n        abbreviation,\n        standardCalculatedPeriods = [],\n        minimumBucket = self.minimumBucket;\n\n      if (anchorPositions === 'right') {\n        targetBlock = self.endActiveWindow - self.startDataset;\n      } else if (anchorPositions === 'left') {\n        targetBlock = self.endDataset - self.startActiveWindow;\n      }\n\n      self.hideAllCalcBtns();\n      for (i = 0; i < timePeriods.length; i++) {\n        interval = timePeriods[i].interval;\n        name = timePeriods[i].name;\n        abbreviation = timePeriods[i].abbreviation.single;\n        // checking whether the unit is applicable for the current target block\n        if (targetBlock / interval >= 1) {\n          // checking whether the unit is of the higher order and only multiplier 1 is applicable\n          if (Math.floor((activeWindow) / interval) < 1) {\n            standardCalculatedPeriods.push({\n              'name': name,\n              'abbreviation': abbreviation,\n              'multipliers': [1]\n            });\n          } else { // if the unit is of the order of the target block and calculating the multipliers\n            standardCalculatedPeriods.push({\n              'name': name,\n              'abbreviation': abbreviation,\n              'multipliers': []\n            });\n            // calculating and populating the applicable multpliers of each unit\n            for (j = 0; j < timePeriods[i].multipliers.length; j++) {\n              if ((activeWindow / self.ratio < timePeriods[i].multipliers[j] * interval) &&\n                (timePeriods[i].multipliers[j] * interval) > minimumBucket) {\n                standardCalculatedPeriods[standardCalculatedPeriods.length - 1].multipliers.push(\n                  timePeriods[i].multipliers[j]);\n              }\n            }\n          }\n        }\n      }\n\n      for (i = 0; i < standardCalculatedPeriods.length; i++) {\n        for (j = 0; j < standardCalculatedPeriods[i].multipliers.length; j++) {\n          key = standardCalculatedPeriods[i].multipliers[j] +\n            standardCalculatedPeriods[i].name;\n          calculatedObj[key].btn && calculatedObj[key].btn.show();\n        }\n      }\n      self.standardCalculatedPeriods = standardCalculatedPeriods;\n      self.toolbar && self.toolbar.redraw();\n    }\n\n    // ******** React on active property change ****\n\n    heighlightActiveRange () {\n      // first check w.r.t contextual btns then others\n      var self = this,\n        selectLine = self.saveSelectLine,\n        boundElement,\n        clickedId = self.clickedId,\n        bBox,\n        x1,\n        x2,\n        y2,\n        activeBtn,\n        contextualObj = self.btns.contextualObj,\n        calculatedObj = self.btns.calculatedObj;\n\n      // if the heighliter is not createcd create it\n      if (!selectLine) {\n        selectLine = self.saveSelectLine || (self.saveSelectLine = self.graphics.paper.path({\n          'stroke': '#c95a5a',\n          'stroke-width': '2px'\n        }).toFront());\n      }\n\n      activeBtn = contextualObj[clickedId] || calculatedObj[clickedId] || self.btns[clickedId];\n\n      if (activeBtn) {\n        boundElement = activeBtn.btn.svgElems.node;\n        bBox = boundElement.getBBox();\n        x1 = bBox.x;\n        x2 = x1 + bBox.width;\n        y2 = bBox.y + bBox.height;\n        selectLine.show().attr({\n          path: ['M', x1 - 0.5, y2 - 0.5, 'L', x2 + 0.5, y2 - 0.5]\n        });\n      } else {\n        selectLine.hide();\n      }\n    }\n\n    // --test case made--\n    onActiveRangeChange () {\n      var self = this,\n        x,\n        found,\n        categoryClicked = self.categoryClicked,\n        clickedId = self.clickedId,\n        startDataset = self.startDataset,\n        endDataset = self.endDataset,\n        startActiveWindow = self.startActiveWindow,\n        endActiveWindow = self.endActiveWindow,\n        contextualObj = self.btns.contextualObj,\n        calculatedObj = self.btns.calculatedObj,\n        lastClickedBtnObj;\n\n      if (categoryClicked === 'ALL') {\n        if (!(startDataset === startActiveWindow && endDataset === endActiveWindow)) {\n          delete self.clickedId;\n          delete self.categoryClicked;\n        }\n      } else if (categoryClicked === 'contextual') {\n        lastClickedBtnObj = contextualObj[clickedId];\n        if (lastClickedBtnObj && !(startActiveWindow === lastClickedBtnObj.contextStart &&\n          endActiveWindow === lastClickedBtnObj.contextEnd)) {\n          delete self.clickedId;\n          delete self.categoryClicked;\n        }\n      } else if (categoryClicked === 'calculated') {\n        lastClickedBtnObj = calculatedObj[clickedId];\n        if (lastClickedBtnObj && !((endActiveWindow - startActiveWindow) === lastClickedBtnObj.interval)) {\n          delete self.clickedId;\n          delete self.categoryClicked;\n        }\n      } else { // nothing is selected\n        if (startDataset === startActiveWindow && endDataset === endActiveWindow) {\n          self.clickedId = 'ALL';\n          self.categoryClicked = 'ALL';\n        } else {\n          for (x in contextualObj) {\n            lastClickedBtnObj = contextualObj[x];\n            if (startActiveWindow === lastClickedBtnObj.contextStart &&\n              endActiveWindow === lastClickedBtnObj.contextEnd) {\n              self.clickedId = x;\n              self.categoryClicked = 'contextual';\n              found = true;\n            }\n          }\n          if (!found) {\n            for (x in calculatedObj) {\n              lastClickedBtnObj = calculatedObj[x];\n              if ((endActiveWindow - startActiveWindow) === lastClickedBtnObj.interval) {\n                self.clickedId = x;\n                self.categoryClicked = 'calculated';\n              }\n            }\n          }\n        }\n      }\n\n      self.showApplicableCalculatedButtons();\n      self.heighlightActiveRange();\n    }\n\n    // *********** Drzaw the btns initialy ***** //\n\n    // --test case made--\n    // adds multipliers to the timerules object\n    processMultipliers (timeArr) {\n      var self = this;\n      for (let i = 0; i < timeArr.length; i++) {\n        let len = timeArr[i].possibleFactors.length,\n          timeName = timeArr[i] && timeArr[i].name,\n          timeObj = timeArr && timeArr[i],\n          customMultipliers = self && self.customMultipliers || {};\n        timeObj.multipliers = [];\n        if (customMultipliers[timeName]) {\n          timeObj.multipliers = customMultipliers[timeName];\n        } else if (len === 1) {\n          timeObj.multipliers.push(timeObj.possibleFactors[0]);\n        } else if (len === 2) {\n          timeObj.multipliers.push(timeObj.possibleFactors[0]);\n          timeObj.multipliers.push(timeObj.possibleFactors[len - 1]);\n        } else {\n          timeObj.multipliers.push(timeObj.possibleFactors[0]);\n          timeObj.multipliers.push(Math.floor(timeObj.possibleFactors[len - 1] / 2));\n          timeObj.multipliers.push(timeObj.possibleFactors[len - 1]);\n        }\n      }\n      return timeArr;\n    }\n\n    createCalculatedButtons (buttonGroup) {\n      var self = this,\n        btnCalc,\n        calculatedObj = self.btns.calculatedObj,\n        btnObj,\n        anchorPositions = self.anchorPositions,\n        minimumBucket = this.minimumBucket,\n        model = self.globalReactiveModel.model;\n      for (let i = self.timePeriods.length - 1; i >= 0; i--) {\n        for (let j = self.timePeriods[i].multipliers.length - 1; j >= 0; j--) {\n          let keyAbb = self.timePeriods[i].multipliers[j] + self.timePeriods[i].abbreviation.single,\n            keyName = self.timePeriods[i].multipliers[j] + self.timePeriods[i].name;\n          let interval = (self.timePeriods[i].multipliers[j] * self.timePeriods[i].interval);\n          if (interval > minimumBucket) {\n            btnObj = calculatedObj[keyName] = {\n              interval: interval,\n              fn: function () {\n                self.clickedId = keyName;\n                self.categoryClicked = 'calculated';\n                self.heighlightActiveRange();\n                if (anchorPositions === 'right') {\n                  if (model['x-axis-absolute-range-start'] > self.endActiveWindow - interval) {\n                    // model['x-axis-visible-range-start'] = model['x-axis-absolute-range-start'];\n                    // model['x-axis-visible-range-end'] = model['x-axis-visible-range-start'] + interval;\n                    // interval = model['x-axis-visible-range-start'] + interval;\n                    self.globalReactiveModel\n                      .lock()\n                      .prop('x-axis-visible-range-end', model['x-axis-visible-range-start'] + interval)\n                      .prop('x-axis-visible-range-start', self.startDataset)\n                      .unlock();\n                  } else {\n                    model['x-axis-visible-range-start'] = self.endActiveWindow - interval;\n                  }\n                } else {\n                  if (model['x-axis-absolute-range-end'] < self.startActiveWindow + interval) {\n                    // model['x-axis-visible-range-end'] = model['x-axis-absolute-range-end'];\n                    // model['x-axis-visible-range-start'] = model['x-axis-absolute-range-end'] - interval;\n                    // interval = model['x-axis-absolute-range-end'] - interval;\n                    self.globalReactiveModel\n                      .lock()\n                      .prop('x-axis-visible-range-end', self.endDataset)\n                      .prop('x-axis-visible-range-start', model['x-axis-absolute-range-end'] - interval)\n                      .unlock();\n                  } else {\n                    model['x-axis-visible-range-end'] = self.startActiveWindow + interval;\n                  }\n                }\n              },\n              shortKey: keyAbb\n            };\n\n            btnCalc = new this.toolbox.Symbol(keyAbb, true, {\n              paper: this.graphics.paper,\n              chart: this.chart,\n              smartLabel: this.smartLabel,\n              chartContainer: this.graphics.container\n            }, self.extData.style['calculated-config']).attachEventHandlers({\n              'click': btnObj.fn,\n              tooltext: self.timePeriods[i].multipliers[j] + ' ' + self.timePeriods[i].description\n            });\n            btnObj.btn = btnCalc;\n            buttonGroup.addSymbol(btnCalc);\n          }\n        }\n      }\n    }\n\n    // --test case made--\n    generateCtxBtnList () {\n      // generating an array with applicable TD buttons\n      var self = this,\n        buttons = self.standardContexualPeriods,\n        i = 0,\n        endStamp = self.globalReactiveModel.model['x-axis-absolute-range-end'] || 9999999,\n        dateStart = endStamp - 2,\n        dateEnd = endStamp,\n        relativeTDButton = {},\n        tdButtons = self.tdButtons,\n        minimumBucket = self.minimumBucket || 1,\n        startActiveWindow = self.startActiveWindow,\n        endActiveWindow = self.endActiveWindow;\n\n      for (; i < tdButtons.length; i++) {\n        dateStart = new Date(endStamp);\n        if (tdButtons[i].name === 'YTD') {\n          dateStart.setMonth(0);\n          dateStart.setDate(1);\n          dateStart.setHours(0);\n          dateStart.setMinutes(0);\n          dateStart.setSeconds(0);\n        } else if (tdButtons[i].name === 'MTD') {\n          dateStart.setDate(1);\n          dateStart.setHours(0);\n          dateStart.setMinutes(0);\n          dateStart.setSeconds(0);\n        } else if (tdButtons[i].name === 'QTD') {\n          dateStart.setMonth(11 - (dateStart.getMonth() % 4));\n          dateStart.setDate(0);\n          dateStart.setHours(0);\n          dateStart.setMinutes(0);\n          dateStart.setSeconds(0);\n        } else if (tdButtons[i].name === 'WTD') {\n          dateStart.setDate(dateStart.getDate() - dateStart.getDay());\n          dateStart.setHours(0);\n          dateStart.setMinutes(0);\n          dateStart.setSeconds(0);\n        } else if (tdButtons[i].name === 'Y') {\n          dateStart.setHours(0);\n          dateStart.setMinutes(0);\n          dateStart.setSeconds(0);\n          dateStart -= 86400000;\n        } else if (tdButtons[i].name === 'T') {\n          dateStart.setHours(0);\n          dateStart.setMinutes(0);\n          dateStart.setSeconds(0);\n          if (endStamp === +dateStart) {\n            dateStart = +dateStart - 86400000;\n          }\n        }\n\n        if (dateEnd < dateStart && (dateEnd - dateStart) < minimumBucket) {\n          continue;\n        } else {\n          tdButtons[i].dateStart = dateStart.valueOf();\n          tdButtons[i].dateEnd = dateEnd.valueOf();\n          buttons.push(tdButtons[i]);\n        }\n      }\n      relativeTDButton.milliseconds = Infinity;\n      for (i = 0; i < tdButtons.length; i++) {\n        if (Math.abs(tdButtons[i].milliseconds - (endActiveWindow - startActiveWindow)) < relativeTDButton.milliseconds) {\n          relativeTDButton.milliseconds = tdButtons[i].milliseconds;\n          relativeTDButton.name = tdButtons[i].abbreviation;\n        }\n      }\n    }\n\n    createContextualButtons (buttonGroup) {\n      var self = this,\n        contextualConfig,\n        contextualObj = self.btns.contextualObj,\n        btnObj,\n        keyName;\n      self.generateCtxBtnList();\n      for (let i = 0; i < this.standardContexualPeriods.length; i++) {\n        contextualConfig = (i === 0) ? self.extData.style['contextual-config-first'] : self.extData.style['contextual-config'];\n        keyName = this.standardContexualPeriods[i].abbreviation;\n        btnObj = contextualObj[keyName] = {\n          contextStart: self.standardContexualPeriods[i].dateStart,\n          contextEnd: self.standardContexualPeriods[i].dateEnd,\n          fn: function () {\n            self.categoryClicked = 'contextual';\n            self.clickedId = self.standardContexualPeriods[i].abbreviation;\n            self.heighlightActiveRange();\n            self.globalReactiveModel\n              .lock()\n              .prop('x-axis-visible-range-end', self.standardContexualPeriods[i].dateEnd)\n              .prop('x-axis-visible-range-start', self.standardContexualPeriods[i].dateStart)\n              .unlock();\n          }\n        };\n\n        btnObj.btn = new this.toolbox.Symbol(this.standardContexualPeriods[i].abbreviation, true, {\n          paper: this.graphics.paper,\n          chart: this.chart,\n          smartLabel: this.smartLabel,\n          chartContainer: this.graphics.container\n        }, contextualConfig)\n          .attachEventHandlers({\n            'click': btnObj.fn,\n            tooltext: this.standardContexualPeriods[i].description\n          });\n\n        if (self.standardContexualPeriods[i].dateEnd - self.standardContexualPeriods[i].dateStart >= self.minimumBucket) {\n          buttonGroup.addSymbol(btnObj.btn);\n        }\n      }\n    }\n\n    // creates toolbar\n    createToolbar () {\n      var self = this,\n        buttonGroup,\n        toolbar,\n        allButton,\n        fromDateLabel,\n        group;\n\n      // initiating the toolbar\n      toolbar = new self.HorizontalToolbar({\n        paper: self.graphics.paper,\n        chart: self.chart,\n        smartLabel: self.smartLabel,\n        chartContainer: self.graphics.container\n      });\n      toolbar.setConfig({\n        fill: '#fff',\n        borderThickness: 0\n      });\n\n      // making group for the extension label\n      group = new self.toolbox.ComponentGroup({\n        paper: self.graphics.paper,\n        chart: self.chart,\n        smartLabel: self.smartLabel,\n        chartContainer: self.graphics.container\n      });\n\n      // making buttonGroup for the buttons\n      buttonGroup = new self.toolbox.ComponentGroup({\n        paper: self.graphics.paper,\n        chart: self.chart,\n        smartLabel: self.smartLabel,\n        chartContainer: self.graphics.container\n      });\n      buttonGroup.setConfig({\n        fill: '#fff',\n        borderThickness: 0\n      });\n      group.setConfig({\n        fill: '#fff',\n        borderThickness: 0\n      });\n\n      // extension label\n      fromDateLabel = new self.toolbox.Label('Zoom:', {\n        smartLabel: self.smartLabel,\n        paper: self.graphics.paper\n      }, self.extData.style['label-config']);\n      group.addSymbol(fromDateLabel);\n\n      // 'ALL' button created\n      allButton = {fn: function () {\n        self.clickedId = 'ALL';\n        self.categoryClicked = 'ALL';\n        self.heighlightActiveRange();\n        self.globalReactiveModel\n          .lock()\n          .prop('x-axis-visible-range-end', self.endDataset)\n          .prop('x-axis-visible-range-start', self.startDataset)\n          .unlock();\n      }};\n      allButton.btn = new self.toolbox.Symbol('ALL', true, {\n        paper: self.graphics.paper,\n        chart: self.chart,\n        smartLabel: self.smartLabel,\n        chartContainer: self.graphics.container\n      }, self.extData.style['all-config']).attachEventHandlers({\n        click: allButton.fn,\n        tooltext: 'ALL'\n      });\n\n      self.btns['ALL'] = allButton;\n\n      buttonGroup.addSymbol(allButton.btn);\n\n      // create all calculated button\n      // self.createCalculatedButtons(buttonGroup);\n\n      // create all contextual button\n      // self.createContextualButtons(buttonGroup);\n\n      // adding group and button group to toolbar\n      toolbar.addComponent(group);\n      toolbar.addComponent(buttonGroup);\n      self.toolbar = toolbar;\n      self.buttonGroup = buttonGroup;\n      return toolbar;\n    };\n\n    // *********** Extension interface methods *********//\n\n    init (require) {\n      var instance = this,\n        calculatedObj = instance.btns.calculatedObj,\n        contextualObj = instance.btns.contextualObj,\n        keySelect,\n        key,\n        notFound;\n      require([\n        'graphics',\n        'chart',\n        'canvasConfig',\n        'MarkerManager',\n        'reactiveModel',\n        'globalReactiveModel',\n        'spaceManagerInstance',\n        'smartLabel',\n        'extData',\n        'chartInstance',\n        function (\n              graphics,\n              chart,\n              canvasConfig,\n              markerManager,\n              reactiveModel,\n              globalReactiveModel,\n              spaceManagerInstance,\n              smartLabel,\n              extData,\n              chartInstance) {\n          instance.graphics = graphics;\n          instance.chart = chart;\n          instance.markerManager = markerManager;\n          instance.canvasConfig = canvasConfig;\n          instance.reactiveModel = reactiveModel;\n          instance.globalReactiveModel = globalReactiveModel;\n          instance.spaceManagerInstance = spaceManagerInstance;\n          instance.smartLabel = smartLabel;\n          instance.extDataUser = extData;\n          instance.chartInstance = chartInstance;\n        }\n      ]);\n      instance.endActiveWindow = instance.globalReactiveModel.model['x-axis-visible-range-end'];\n      instance.startActiveWindow = instance.globalReactiveModel.model['x-axis-visible-range-start'];\n      instance.startDataset = instance.globalReactiveModel.model['x-axis-absolute-range-start'];\n      instance.endDataset = instance.globalReactiveModel.model['x-axis-absolute-range-end'];\n      instance.timeRules = instance.chartInstance.apiInstance.getComponentStore();\n      instance.timeRules = instance.timeRules.getCanvasByIndex(0).composition.impl;\n      instance.timeRules = instance.timeRules.getDataAggregator();\n      instance.timeRules = instance.timeRules.getAggregationTimeRules();\n      instance.timePeriods = instance.processMultipliers(instance.timeRules);\n      instance.extData = {\n        'disabled': 'false',\n        'default-select': 'ALL',\n        'anchor-align': 'left',\n        'posWrtCanvas': 'top',\n        'layout': 'inline',\n        'alignment': 'left',\n        'orientation': 'horizontal',\n        'customMultipliers': {\n          'millisecond': [1, 500],\n          'second': [1, 5, 15, 30],\n          'minute': [1, 5, 15, 30],\n          'hour': [1, 3, 6, 12],\n          'day': [1, 7, 15],\n          'month': [1, 3, 6],\n          'year': [1, 3, 5]\n        },\n        'style': {\n          'label-config': {\n            // --config--\n            text: {\n              style: {\n                'font-family': '\"Lucida Grande\", sans-serif',\n                'font-size': '13',\n                'fill': '#4b4b4b'\n              }\n            },\n            container: {\n              height: 22\n            }\n          },\n          'all-config': {\n            // --config--\n            fill: '#ffffff',\n            labelFill: '#4b4b4b',\n            symbolStrokeWidth: '2',\n            stroke: '#ced5d4',\n            strokeWidth: '1',\n            hoverFill: '#f7f7f7',\n            height: 22,\n            radius: 1,\n            margin: {\n              right: 5\n            },\n            btnTextStyle: {\n              'fontFamily': '\"Lucida Grande\", sans-serif',\n              'fontSize': '13',\n              'fill': '#4b4b4b',\n              'line-height': '1',\n              'letter-spacing': '-0.04em'\n            }\n          },\n          'calculated-config': {\n            // --config--\n            fill: '#ffffff',\n            labelFill: '#4b4b4b',\n            symbolStrokeWidth: '2',\n            stroke: '#ced5d4',\n            strokeWidth: '1',\n            hoverFill: '#f7f7f7',\n            height: 22,\n            radius: 1,\n            margin: {\n              right: 0\n            },\n            btnTextStyle: {\n              'fontFamily': '\"Lucida Grande\", sans-serif',\n              'fontSize': '13',\n              'fill': '#4b4b4b',\n              'line-height': '1',\n              'letter-spacing': '-0.04em'\n            }\n          },\n          'contextual-config-first': {\n            fill: '#ffffff',\n            labelFill: '#4b4b4b',\n            symbolStrokeWidth: '2',\n            stroke: '#ced5d4',\n            strokeWidth: '1',\n            height: 22,\n            hoverFill: '#f7f7f7',\n            radius: 1,\n            margin: {\n              right: 0,\n              left: 5\n            },\n            btnTextStyle: {\n              'fontFamily': '\"Lucida Grande\", sans-serif',\n              'fontSize': '13',\n              'fill': '#696969',\n              'line-height': '1',\n              'letter-spacing': '-0.04em'\n            }\n          },\n          'contextual-config': {\n            fill: '#ffffff',\n            labelFill: '#4b4b4b',\n            symbolStrokeWidth: '2',\n            stroke: '#ced5d4',\n            strokeWidth: '1',\n            height: 22,\n            hoverFill: '#f7f7f7',\n            radius: 1,\n            margin: {\n              right: 0,\n              left: 0\n            },\n            btnTextStyle: {\n              'fontFamily': '\"Lucida Grande\", sans-serif',\n              'fontSize': '13',\n              'fill': '#4b4b4b',\n              'line-height': '1',\n              'letter-spacing': '-0.04em'\n            }\n          }\n        }\n      };\n      Object.assign(instance.extData, instance.extDataUser);\n      instance.anchorPositions = instance.extData['anchor-align'];\n      instance.customMultipliers = instance.extData.customMultipliers || {\n        'millisecond': [1, 500],\n        'second': [1, 5, 15, 30],\n        'minute': [1, 5, 15, 30],\n        'hour': [1, 3, 6, 12],\n        'day': [1, 7, 15],\n        'month': [1, 3, 6],\n        'year': [1, 3]\n      };\n      keySelect = instance.extData['default-select'];\n      if (keySelect) {\n        if (keySelect === 'ALL') {\n          instance.clickedId = 'ALL';\n        } else if (contextualObj[keySelect]) {\n          instance.clickedId = keySelect;\n        } else {\n          notFound = true;\n          for (key in calculatedObj) {\n            if (notFound && calculatedObj[key].shortKey === keySelect) {\n              instance.clickedId = calculatedObj[key].shortKey;\n              notFound = false;\n            }\n          }\n        }\n      }\n\n      // instance.setActivePeriod(instance.startActiveWindow, instance.endActiveWindow);\n      instance.measurement = {};\n      instance.flag = true;\n      instance.toolbars = [];\n      instance.toolbars.push(instance.createToolbar());\n\n      instance.globalReactiveModel.onPropsChange(['x-axis-visible-range-start', 'x-axis-visible-range-end'],\n        instance.propsChangeListener);\n      instance.globalReactiveModel.onPropChange('x-axis-absolute-range-end', function (absEnd) {\n        if (instance.categoryClicked === 'contextual') {\n          instance.globalReactiveModel.model['x-axis-visible-range-end'] =\n            instance.globalReactiveModel.model['x-axis-absolute-range-end'];\n        }\n      });\n      return instance;\n    };\n\n    getLogicalSpace (availableWidth = this._pWidth, availableHeight = this._pHeight) {\n      // availableWidth /= 2;\n      var logicalSpace,\n        width = 420, // width hardcoded; TODO: make it dynamic\n        height = 0,\n        i,\n        ln,\n        self = this;\n\n      for (i = 0, ln = self.toolbars.length; i < ln; i++) {\n        logicalSpace = self.toolbars[i].getLogicalSpace(availableWidth, availableHeight);\n        // width = Math.max(logicalSpace.width, width);\n        height += logicalSpace.height;\n        self.toolbars[i].width = logicalSpace.width;\n        self.toolbars[i].height = logicalSpace.height;\n      }\n      height += self.padding;\n      return {\n        width: width,\n        height: height\n      };\n    };\n\n    getDefaultGroup () {\n      return this.parentGroup;\n    }\n\n    placeInCanvas () {\n      var self = this;\n      self.padding = 5;\n      self.spaceManagerInstance.add([{\n        name: function () {\n          return 'standard-period-selector-ext';\n        },\n        ref: function (obj) {\n          return obj['0'];\n        },\n        self: function () {\n          return self;\n        },\n        priority: function () {\n          return 2;\n        },\n        layout: function (obj) {\n          return obj[self.extData.layout] || 'inline';\n        },\n        orientation: [{\n          type: function (obj) {\n            return obj[self.extData.orientation] || 'horizontal';\n          },\n          position: [{\n            type: function (obj) {\n              return obj[self.extData.posWrtCanvas] || 'top';\n            },\n            alignment: [{\n              type: function (obj) {\n                return obj[self.extData.alignment] || 'left';\n              },\n              dimensions: [function () {\n                var parent = this.getParentComponentGroup();\n                self._ref = this;\n                return self.getLogicalSpace((self._pWidth = parent.getWidth()), (self._pHeight = parent.getHeight()));\n              }]\n            }]\n          }]\n        }]\n      }]);\n    };\n\n    setDrawingConfiguration (x, y, width, height, group) {\n      var mes = this.measurement;\n      mes.x = x;\n      mes.y = y;\n      mes.width = width;\n      mes.height = height;\n\n      this.parentGroup = group;\n\n      return this;\n    };\n\n    // draws extension in the canvas\n    draw (x, y, width, height, group) {\n      var self = this,\n        measurement = self.measurement,\n        toolbars = self.toolbars,\n        ln,\n        i,\n        toolbar,\n        contextualObj = self.btns.contextualObj,\n        calculatedObj = self.btns.calculatedObj,\n        clickedId = self.clickedId,\n        activeBtn,\n        model = self.globalReactiveModel.model,\n        minimumBucket = self.minimumBucket,\n        buttonGroup = self.buttonGroup;\n\n      minimumBucket = model['minimum-consecutive-datestamp-diff'] * model['x-axis-maximum-allowed-ticks'];\n      self.minimumBucket = minimumBucket;\n      // create all calculated button\n      self.createCalculatedButtons(buttonGroup);\n\n      // create all contextual button\n      self.createContextualButtons(buttonGroup);\n\n      x = x === undefined ? measurement.x : x;\n      y = y === undefined ? measurement.y : y;\n      width = width === undefined ? measurement.width : width;\n      height = height === undefined ? measurement.height : height;\n      group = group === undefined ? this.parentGroup : group;\n      if (width && height) {\n        for (i = 0, ln = toolbars.length; i < ln; i++) {\n          toolbar = toolbars[i];\n          toolbar.draw(x, y, group);\n        }\n      }\n\n      if (clickedId) {\n        activeBtn = calculatedObj[clickedId] || contextualObj[clickedId] || self.btns[clickedId];\n        if (activeBtn) {\n          activeBtn.fn && activeBtn.fn();\n        } else {\n          self.onActiveRangeChange();\n        }\n      } else {\n        self.onActiveRangeChange();\n      }\n    };\n  }\n  return StandardPeriodSelector;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/standard-period-selector.js"],"sourceRoot":""}
{"version":3,"sources":["webpack:///standard-period-selector-es5.min.js","webpack:///webpack/bootstrap bff7411a3110746a5d57","webpack:///./src/index.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/standard-period-selector.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_typeof","Symbol","iterator","obj","constructor","prototype","StandardPeriodSelector","env","factory","document","win","Error","window","undefined","_window","windowExists","FC","FusionCharts","register","registerComponent","webpackPolyfill","deprecate","paths","children","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","dep","this","ratio","toolbox","getComponent","HorizontalToolbar","ComponentGroup","SymbolStore","all","calculatedPeriods","startDataset","startActiveWindow","endActiveWindow","standardCalculatedPeriods","standardContexualPeriods","startPointUnit","startPointMultiplier","clickedId","noCalcButtons","calculatedButtonObj","minimumBucket","tdButtons","name","abbreviation","parent","milliseconds","description","multiplier","config","anchorPositions","contextual","calculated","tertiaryTimePeriods","value","targetBlock","j","activeWindow","count","self","timePeriods","interval","Math","floor","push","single","multipliers","Infinity","buttons","endStamp","globalReactiveModel","model","dateStart","dateEnd","relativeTDButton","Date","setMonth","setDate","setHours","setMinutes","setSeconds","getMonth","getDate","getDay","endDataset","valueOf","abs","timeArr","len","possibleFactors","timeName","timeObj","customMultipliers","a","b","start","end","arguments","periodButtonClicked","lock","prop","unlock","generateCalculatedButtons","generateContextualButtons","require","propsHandler","flag","currentCategory","lastDisposed","launchedPropsHandler","propsStart","propsEnd","setTimeout","bind","flagDrawn","cantDispose","setActivePeriod","toolbar","dispose","toolbars","pop","createToolbar","getLogicalSpace","draw","graphics","chart","canvasConfig","markerManager","reactiveModel","spaceManagerInstance","smartLabel","extData","chartInstance","extDataUser","timeRules","apiInstance","getComponentStore","getCanvasByIndex","composition","impl","getDataAggregator","getAggregationTimeRules","processMultipliers","disabled","default-select","posWrtCanvas","layout","alignment","orientation","millisecond","second","minute","hour","day","month","year","style","label-config","text","font-family","font-size","fill","container","height","all-config","labelFill","symbolStrokeWidth","stroke","strokeWidth","hoverFill","radius","margin","right","btnTextStyle","fontFamily","fontSize","line-height","letter-spacing","calculated-config","contextual-config-first","left","contextual-config","assign","measurement","onPropsChange","unigroup","calculatedButtons","contextualButtons","allButton","deductor","contextualConfig","fromDateLabel","group","_this","deductorAr","paper","chartContainer","UniSelectComponentGroup","setConfig","borderThickness","Label","addSymbol","attachEventHandlers","click","tooltext","hide","_loop","_loop3","keyAbb","show","_loop2","minViable","x","y","rad","w","h","padX","padY","x1","x2","y1","y2","addComponent","logicalSpace","ln","availableWidth","_pWidth","availableHeight","_pHeight","width","padding","parentGroup","add","ref","priority","type","position","dimensions","getParentComponentGroup","_ref","getWidth","getHeight","mes","symbolList","boundElement","bBox","selectLine","saveSelectLine","path","stroke-width","toFront","componentGroups","ii","symbol","getBoundElement","getBBox","attr"],"mappings":"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","file":"standard-period-selector-es5.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar StandardPeriodSelector = __webpack_require__(2);\n\t\n\t;(function (env, factory) {\n\t  if (( false ? 'undefined' : _typeof(module)) === 'object' && module.exports) {\n\t    module.exports = env.document ? factory(env) : function (win) {\n\t      if (!win.document) {\n\t        throw new Error('Window with document not present');\n\t      }\n\t      return factory(win, true);\n\t    };\n\t  } else {\n\t    env.StandardPeriodSelector = factory(env, true);\n\t  }\n\t})(typeof window !== 'undefined' ? window : undefined, function (_window, windowExists) {\n\t  var FC = _window.FusionCharts;\n\t  FC.register('extension', ['private', 'standard-period-selector', function () {\n\t    FC.registerComponent('extensions', 'standard-period-selector', StandardPeriodSelector({ FusionCharts: FC }));\n\t  }]);\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)(module)))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\n\t\tif(!module.webpackPolyfill) {\n\t\t\tmodule.deprecate = function() {};\n\t\t\tmodule.paths = [];\n\t\t\t// module.parent = undefined by default\n\t\t\tmodule.children = [];\n\t\t\tmodule.webpackPolyfill = 1;\n\t\t}\n\t\treturn module;\n\t}\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Class definition of StandardPeriodSelector\n\t */\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tmodule.exports = function (dep) {\n\t  var StandardPeriodSelector = function () {\n\t    function StandardPeriodSelector() {\n\t      _classCallCheck(this, StandardPeriodSelector);\n\t\n\t      /**\n\t       * @private\n\t       */\n\t      this.ratio = 8;\n\t      this.toolbox = FusionCharts.getComponent('api', 'toolbox');\n\t      this.HorizontalToolbar = this.toolbox.HorizontalToolbar;\n\t      this.ComponentGroup = this.toolbox.ComponentGroup;\n\t      this.SymbolStore = this.toolbox.SymbolStore;\n\t      this.all = 1;\n\t      this.calculatedPeriods = [];\n\t      this.startDataset = 0;\n\t      // this.endDataset = this.globalReactiveModel.model['x-axis-absolute-range-end'];\n\t      this.startActiveWindow = 0;\n\t      this.endActiveWindow = 1;\n\t      this.standardCalculatedPeriods = [];\n\t      this.standardContexualPeriods = [];\n\t      this.startPointUnit = 0;\n\t      this.startPointMultiplier = 0;\n\t      this.clickedId = 'ALL';\n\t      this.noCalcButtons = 0;\n\t      this.calculatedButtonObj = {};\n\t      this.minimumBucket = 25920000000;\n\t\n\t      this.tdButtons = [{\n\t        'name': 'YTD',\n\t        'abbreviation': 'YTD',\n\t        'parent': 'year',\n\t        'milliseconds': 31104000000,\n\t        'description': 'Year to Date'\n\t      }, {\n\t        'name': 'QTD',\n\t        'abbreviation': 'QTD',\n\t        'parent': 'month',\n\t        'multiplier': 3,\n\t        'milliseconds': 7776000000,\n\t        'description': 'Quarter to Date'\n\t      }, {\n\t        'name': 'MTD',\n\t        'abbreviation': 'MTD',\n\t        'parent': 'month',\n\t        'milliseconds': 2592000000,\n\t        'description': 'Month to Date'\n\t      }, {\n\t        'name': 'WTD',\n\t        'abbreviation': 'WTD',\n\t        'parent': 'day',\n\t        'multiplier': 7,\n\t        'milliseconds': 604800000,\n\t        'description': 'Week to Date'\n\t      }, {\n\t        'name': 'Y',\n\t        'abbreviation': 'Y',\n\t        'parent': 'day',\n\t        'milliseconds': 86400000,\n\t        'description': 'Yesterday'\n\t      }, {\n\t        'name': 'T',\n\t        'abbreviation': 'T',\n\t        'parent': 'day',\n\t        'milliseconds': 86400000,\n\t        'description': 'Today'\n\t      }];\n\t      this.config = {\n\t        anchorPositions: 'right',\n\t        all: '1',\n\t        contextual: '1',\n\t        calculated: '1',\n\t        tertiaryTimePeriods: {}\n\t      };\n\t    }\n\t\n\t    /**\n\t     * A function to generate the calculated buttons using\n\t     * the active range and the location of the active range\n\t     */\n\t\n\t\n\t    _createClass(StandardPeriodSelector, [{\n\t      key: 'generateCalculatedButtons',\n\t      value: function generateCalculatedButtons() {\n\t        var targetBlock = this.endActiveWindow - this.startDataset,\n\t            i = 0,\n\t            j = 0,\n\t            activeWindow = this.endActiveWindow - this.startActiveWindow,\n\t            count = 0,\n\t            self = this;\n\t        self.standardCalculatedPeriods = [];\n\t        for (i = 0; i < self.timePeriods.length; i++) {\n\t          // checking whether the unit is applicable for the current target block\n\t          if (targetBlock / self.timePeriods[i].interval >= 1) {\n\t            // checking whether the unit is of the higher order and only multiplier 1 is applicable\n\t            if (Math.floor(activeWindow / self.timePeriods[i].interval) < 1) {\n\t              self.standardCalculatedPeriods.push({\n\t                'abbreviation': self.timePeriods[i].abbreviation.single,\n\t                'description': self.timePeriods[i].description,\n\t                'milliseconds': self.timePeriods[i].interval,\n\t                'name': self.timePeriods[i].name,\n\t                'multipliers': [1]\n\t              });\n\t            } else {\n\t              // if the unit is of the order of the target block and calculating the multipliers\n\t              self.standardCalculatedPeriods.push({\n\t                'abbreviation': self.timePeriods[i].abbreviation.single,\n\t                'description': self.timePeriods[i].description,\n\t                'milliseconds': self.timePeriods[i].interval,\n\t                'name': self.timePeriods[i].name,\n\t                'multipliers': []\n\t              });\n\t              // calculating and populating the applicable multpliers of each unit\n\t              for (j = 0; j < self.timePeriods[i].multipliers.length; j++) {\n\t                if (activeWindow / self.ratio < self.timePeriods[i].multipliers[j] * self.timePeriods[i].interval && self.timePeriods[i].multipliers[j] * self.timePeriods[i].interval > self.minimumBucket) {\n\t                  self.standardCalculatedPeriods[self.standardCalculatedPeriods.length - 1].multipliers.push(self.timePeriods[i].multipliers[j]);\n\t                }\n\t              }\n\t            }\n\t          }\n\t        }\n\t        this.noCalcButtons = Infinity;\n\t        for (i = 0; i < this.standardCalculatedPeriods.length; i++) {\n\t          for (j = 0; j < this.standardCalculatedPeriods[i].multipliers.length; j++) {\n\t            ++count;\n\t            if (this.noCalcButtons > i) {\n\t              this.noCalcButtons = i;\n\t            }\n\t            if (count <= 4) {\n\t              this.startPointMultiplier = j;\n\t              this.startPointUnit = i;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      /**\n\t       * A function to generate the contextual buttons using\n\t       * the end point of the time-scale\n\t       */\n\t\n\t    }, {\n\t      key: 'generateContextualButtons',\n\t      value: function generateContextualButtons() {\n\t        // generating an array with applicable TD buttons\n\t        var buttons = [],\n\t            i = 0,\n\t            endStamp = this.globalReactiveModel.model['x-axis-absolute-range-end'],\n\t            dateStart = endStamp - 2,\n\t            dateEnd = endStamp,\n\t            relativeTDButton = {};\n\t        for (; i < this.tdButtons.length; i++) {\n\t          dateStart = new Date(endStamp);\n\t          if (this.tdButtons[i].name === 'YTD') {\n\t            dateStart.setMonth(0);\n\t            dateStart.setDate(1);\n\t            dateStart.setHours(0);\n\t            dateStart.setMinutes(0);\n\t            dateStart.setSeconds(0);\n\t          } else if (this.tdButtons[i].name === 'MTD') {\n\t            dateStart.setDate(1);\n\t            dateStart.setHours(0);\n\t            dateStart.setMinutes(0);\n\t            dateStart.setSeconds(0);\n\t          } else if (this.tdButtons[i].name === 'QTD') {\n\t            dateStart.setMonth(11 - dateStart.getMonth() % 4);\n\t            dateStart.setDate(0);\n\t            dateStart.setHours(0);\n\t            dateStart.setMinutes(0);\n\t            dateStart.setSeconds(0);\n\t          } else if (this.tdButtons[i].name === 'WTD') {\n\t            dateStart.setDate(dateStart.getDate() - dateStart.getDay());\n\t            dateStart.setHours(0);\n\t            dateStart.setMinutes(0);\n\t            dateStart.setSeconds(0);\n\t          } else if (this.tdButtons[i].name === 'Y') {\n\t            dateStart.setHours(0);\n\t            dateStart.setMinutes(0);\n\t            dateStart.setSeconds(0);\n\t            dateStart -= 86400000;\n\t          } else if (this.tdButtons[i].name === 'T') {\n\t            dateStart.setHours(0);\n\t            dateStart.setMinutes(0);\n\t            dateStart.setSeconds(0);\n\t            if (+this.endDataset === +dateStart) {\n\t              dateStart = +dateStart - 86400000;\n\t            }\n\t          }\n\t\n\t          if (dateEnd < dateStart && dateEnd - dateStart < this.minimumBucket) {\n\t            continue;\n\t          } else {\n\t            this.tdButtons[i].dateStart = dateStart.valueOf();\n\t            this.tdButtons[i].dateEnd = dateEnd.valueOf();\n\t            buttons.push(this.tdButtons[i]);\n\t          }\n\t        }\n\t        relativeTDButton.milliseconds = Infinity;\n\t        for (i = 0; i < this.tdButtons.length; i++) {\n\t          if (Math.abs(this.tdButtons[i].milliseconds - (this.endActiveWindow - this.startActiveWindow)) < relativeTDButton.milliseconds) {\n\t            relativeTDButton.milliseconds = this.tdButtons[i].milliseconds;\n\t            relativeTDButton.name = this.tdButtons[i].abbreviation;\n\t          }\n\t        }\n\t\n\t        this.standardContexualPeriods = buttons;\n\t      }\n\t    }, {\n\t      key: 'processMultipliers',\n\t      value: function processMultipliers(timeArr) {\n\t        var self = this;\n\t        for (var i = 0; i < timeArr.length; i++) {\n\t          var len = timeArr[i].possibleFactors.length,\n\t              timeName = timeArr[i] && timeArr[i].name,\n\t              timeObj = timeArr && timeArr[i],\n\t              customMultipliers = self && self.customMultipliers || {};\n\t          timeObj.multipliers = [];\n\t          if (customMultipliers[timeName]) {\n\t            timeObj.multipliers = customMultipliers[timeName];\n\t          } else if (len === 1) {\n\t            timeObj.multipliers.push(timeObj.possibleFactors[0]);\n\t          } else if (len === 2) {\n\t            timeObj.multipliers.push(timeObj.possibleFactors[0]);\n\t            timeObj.multipliers.push(timeObj.possibleFactors[len - 1]);\n\t          } else {\n\t            timeObj.multipliers.push(timeObj.possibleFactors[0]);\n\t            timeObj.multipliers.push(Math.floor(timeObj.possibleFactors[len - 1] / 2));\n\t            timeObj.multipliers.push(timeObj.possibleFactors[len - 1]);\n\t          }\n\t        }\n\t        return timeArr;\n\t      }\n\t\n\t      /**\n\t       * A function to set the active period's\n\t       * start and end point\n\t       * @param  {number} date stamp - A UNIX timestamp to be set as the start point of active period\n\t       * @param  {number} date stamp - A UNIX timestamp to be set as the end point of active period\n\t       */\n\t\n\t    }, {\n\t      key: 'setActivePeriod',\n\t      value: function setActivePeriod(a, b) {\n\t        var start, end;\n\t        if (arguments.length === 1 && this.periodButtonClicked) {\n\t          end = this.endActiveWindow; // this.globalReactiveModel.model['x-axis-visible-range-end'];\n\t          start = end - arguments[0];\n\t          this.startActiveWindow = start;\n\t          // this.endActiveWindow = end;\n\t          this.globalReactiveModel.lock().prop('x-axis-visible-range-start', this.startActiveWindow).unlock();\n\t        } else if (arguments.length === 2 && this.periodButtonClicked) {\n\t          start = arguments[0];\n\t          end = arguments[1];\n\t          this.startActiveWindow = start;\n\t          this.endActiveWindow = end;\n\t          this.globalReactiveModel.lock().prop('x-axis-visible-range-start', this.startActiveWindow).prop('x-axis-visible-range-end', this.endActiveWindow).unlock();\n\t        }\n\t        this.generateCalculatedButtons();\n\t        this.generateContextualButtons();\n\t      }\n\t\n\t      /**\n\t       * A function to set the start and end point of the\n\t       * entire time-line\n\t       * @param  {number} date stamp - A UNIX timestamp to be set as the start point of time-line\n\t       * @param  {number} date stamp - A UNIX timestamp to be set as the end point of time-line\n\t       */\n\t\n\t      /**\n\t       * A function to set the object to set the user preferences\n\t       */\n\t\n\t    }, {\n\t      key: 'configure',\n\t      value: function configure(config) {\n\t        this.config = config;\n\t      }\n\t\n\t      /**\n\t       * Fusioncharts life cycle method for extension\n\t       */\n\t\n\t    }, {\n\t      key: 'init',\n\t      value: function init(require) {\n\t        var instance = this;\n\t        require(['graphics', 'chart', 'canvasConfig', 'MarkerManager', 'reactiveModel', 'globalReactiveModel', 'spaceManagerInstance', 'smartLabel', 'extData', 'chartInstance', function (graphics, chart, canvasConfig, markerManager, reactiveModel, globalReactiveModel, spaceManagerInstance, smartLabel, extData, chartInstance) {\n\t          instance.graphics = graphics;\n\t          instance.chart = chart;\n\t          instance.markerManager = markerManager;\n\t          instance.canvasConfig = canvasConfig;\n\t          instance.reactiveModel = reactiveModel;\n\t          instance.globalReactiveModel = globalReactiveModel;\n\t          instance.spaceManagerInstance = spaceManagerInstance;\n\t          instance.smartLabel = smartLabel;\n\t          instance.extDataUser = extData;\n\t          instance.chartInstance = chartInstance;\n\t        }]);\n\t        instance.endActiveWindow = instance.globalReactiveModel.model['x-axis-visible-range-end'];\n\t        instance.startActiveWindow = instance.globalReactiveModel.model['x-axis-visible-range-start'];\n\t        instance.startDataset = instance.globalReactiveModel.model['x-axis-absolute-range-start'];\n\t        instance.endDataset = instance.globalReactiveModel.model['x-axis-absolute-range-end'];\n\t        instance.timeRules = instance.chartInstance.apiInstance.getComponentStore();\n\t        instance.timeRules = instance.timeRules.getCanvasByIndex(0).composition.impl;\n\t        instance.timeRules = instance.timeRules.getDataAggregator();\n\t        instance.timeRules = instance.timeRules.getAggregationTimeRules();\n\t        instance.timePeriods = instance.processMultipliers(instance.timeRules);\n\t        instance.extData = {\n\t          'disabled': 'false',\n\t          'default-select': 'ALL',\n\t          'posWrtCanvas': 'top',\n\t          'layout': 'inline',\n\t          'alignment': 'left',\n\t          'orientation': 'horizontal',\n\t          'customMultipliers': {\n\t            'millisecond': [1, 500],\n\t            'second': [1, 5, 15, 30],\n\t            'minute': [1, 5, 15, 30],\n\t            'hour': [1, 3, 6, 12],\n\t            'day': [1, 7, 15],\n\t            'month': [1, 3, 6],\n\t            'year': [1, 3, 5]\n\t          },\n\t          'style': {\n\t            'label-config': {\n\t              // --config--\n\t              text: {\n\t                style: {\n\t                  'font-family': '\"Lucida Grande\", sans-serif',\n\t                  'font-size': '13',\n\t                  'fill': '#4b4b4b'\n\t                }\n\t              },\n\t              container: {\n\t                height: 22\n\t              }\n\t            },\n\t            'all-config': {\n\t              // --config--\n\t              fill: '#ffffff',\n\t              labelFill: '#4b4b4b',\n\t              symbolStrokeWidth: '2',\n\t              stroke: '#ced5d4',\n\t              strokeWidth: '1',\n\t              hoverFill: '#f7f7f7',\n\t              height: 22,\n\t              radius: 1,\n\t              margin: {\n\t                right: 5\n\t              },\n\t              btnTextStyle: {\n\t                'fontFamily': '\"Lucida Grande\", sans-serif',\n\t                'fontSize': '13',\n\t                'fill': '#4b4b4b',\n\t                'line-height': '1',\n\t                'letter-spacing': '-0.04em'\n\t              }\n\t            },\n\t            'calculated-config': {\n\t              // --config--\n\t              fill: '#ffffff',\n\t              labelFill: '#4b4b4b',\n\t              symbolStrokeWidth: '2',\n\t              stroke: '#ced5d4',\n\t              strokeWidth: '1',\n\t              hoverFill: '#f7f7f7',\n\t              height: 22,\n\t              radius: 1,\n\t              margin: {\n\t                right: 0\n\t              },\n\t              btnTextStyle: {\n\t                'fontFamily': '\"Lucida Grande\", sans-serif',\n\t                'fontSize': '13',\n\t                'fill': '#4b4b4b',\n\t                'line-height': '1',\n\t                'letter-spacing': '-0.04em'\n\t              }\n\t            },\n\t            'contextual-config-first': {\n\t              fill: '#ffffff',\n\t              labelFill: '#4b4b4b',\n\t              symbolStrokeWidth: '2',\n\t              stroke: '#ced5d4',\n\t              strokeWidth: '1',\n\t              height: 22,\n\t              hoverFill: '#f7f7f7',\n\t              radius: 1,\n\t              margin: {\n\t                right: 0,\n\t                left: 5\n\t              },\n\t              btnTextStyle: {\n\t                'fontFamily': '\"Lucida Grande\", sans-serif',\n\t                'fontSize': '13',\n\t                'fill': '#696969',\n\t                'line-height': '1',\n\t                'letter-spacing': '-0.04em'\n\t              }\n\t            },\n\t            'contextual-config': {\n\t              fill: '#ffffff',\n\t              labelFill: '#4b4b4b',\n\t              symbolStrokeWidth: '2',\n\t              stroke: '#ced5d4',\n\t              strokeWidth: '1',\n\t              height: 22,\n\t              hoverFill: '#f7f7f7',\n\t              radius: 1,\n\t              margin: {\n\t                right: 0,\n\t                left: 0\n\t              },\n\t              btnTextStyle: {\n\t                'fontFamily': '\"Lucida Grande\", sans-serif',\n\t                'fontSize': '13',\n\t                'fill': '#4b4b4b',\n\t                'line-height': '1',\n\t                'letter-spacing': '-0.04em'\n\t              }\n\t            }\n\t          }\n\t        };\n\t        Object.assign(instance.extData, instance.extDataUser);\n\t        instance.customMultipliers = instance.extData.customMultipliers || {\n\t          'millisecond': [1, 500],\n\t          'second': [1, 5, 15, 30],\n\t          'minute': [1, 5, 15, 30],\n\t          'hour': [1, 3, 6, 12],\n\t          'day': [1, 7, 15],\n\t          'month': [1, 3, 6],\n\t          'year': [1, 3]\n\t        };\n\t        instance.clickedId = instance.extData['default-select'] || 'ALL';\n\t        instance.setActivePeriod(instance.startActiveWindow, instance.endActiveWindow);\n\t        instance.toolbars = [];\n\t        instance.measurement = {};\n\t        instance.flag = true;\n\t\n\t        instance.toolbars.push(instance.createToolbar());\n\t\n\t        instance.globalReactiveModel.onPropsChange(['x-axis-visible-range-start', 'x-axis-visible-range-end'], propsHandler);\n\t        function propsHandler(start, end, flag) {\n\t          if (instance.currentCategory === 'contextual') {\n\t            if (instance.endActiveWindow === instance.endDataset) {\n\t              for (var i = 0; i < instance.standardContexualPeriods.length; i++) {\n\t                if (instance.standardContexualPeriods[i].dateEnd - instance.standardContexualPeriods[i].dateStart >= end[1] - start[1]) {\n\t                  instance.clickedId = instance.standardContexualPeriods[i].abbreviation;\n\t                }\n\t              }\n\t            } else {\n\t              for (var _i = 0; _i < instance.standardCalculatedPeriods.length; _i++) {\n\t                for (var j = 0; j < instance.standardCalculatedPeriods[_i].multipliers.length; j++) {\n\t                  if (end[1] - start[1] >= instance.standardCalculatedPeriods[_i].multipliers[j] * instance.standardCalculatedPeriods[_i].milliseconds) {\n\t                    instance.clickedId = instance.standardCalculatedPeriods[_i].multipliers[j] + instance.standardCalculatedPeriods[_i].abbreviation;\n\t                  }\n\t                }\n\t              }\n\t            }\n\t          } else if (instance.currentCategory === 'calculated') {\n\t            for (var _i2 = 0; _i2 < instance.standardCalculatedPeriods.length; _i2++) {\n\t              for (var _j = 0; _j < instance.standardCalculatedPeriods[_i2].multipliers.length; _j++) {\n\t                if (end[1] - start[1] >= instance.standardCalculatedPeriods[_i2].multipliers[_j] * instance.standardCalculatedPeriods[_i2].milliseconds) {\n\t                  instance.clickedId = instance.standardCalculatedPeriods[_i2].multipliers[_j] + instance.standardCalculatedPeriods[_i2].abbreviation;\n\t                }\n\t              }\n\t            }\n\t          }\n\t          instance.lastDisposed = instance.lastDisposed || 0;\n\t          if (flag) {\n\t            instance.launchedPropsHandler = false;\n\t            start = instance.propsStart;\n\t            end = instance.propsEnd;\n\t          }\n\t          instance.propsStart = start;\n\t          instance.propsEnd = end;\n\t          if (+new Date() - instance.lastDisposed < 400) {\n\t            if (!instance.launchedPropsHandler) {\n\t              instance.launchedPropsHandler = true;\n\t              setTimeout(propsHandler.bind(null, 0, 0, true));\n\t            }\n\t            return;\n\t          }\n\t\n\t          if (instance.flagDrawn < 3) {\n\t            instance.flagDrawn++;\n\t            instance.cantDispose = true;\n\t            instance.lastDisposed = +new Date();\n\t            instance.setActivePeriod(start[1], end[1]);\n\t            instance.toolbar.dispose();\n\t            instance.toolbars.pop();\n\t            instance.toolbars.push(instance.createToolbar());\n\t            instance.getLogicalSpace();\n\t            instance.draw();\n\t          } else {\n\t            // instance.cantDispose = false;\n\t            instance.flagDrawn = 0;\n\t          }\n\t        }\n\t        return instance;\n\t      }\n\t    }, {\n\t      key: 'createToolbar',\n\t      value: function createToolbar() {\n\t        var _this = this;\n\t\n\t        var unigroup,\n\t            toolbar,\n\t            calculatedButtons,\n\t            contextualButtons,\n\t            allButton,\n\t            self = this,\n\t            deductorAr = [],\n\t            deductor,\n\t            i,\n\t            j,\n\t            contextualConfig,\n\t            fromDateLabel,\n\t            group;\n\t        group = new this.toolbox.ComponentGroup({\n\t          paper: this.graphics.paper,\n\t          chart: this.chart,\n\t          smartLabel: this.smartLabel,\n\t          chartContainer: this.graphics.container\n\t        });\n\t\n\t        unigroup = new this.toolbox.UniSelectComponentGroup({\n\t          paper: this.graphics.paper,\n\t          chart: this.chart,\n\t          smartLabel: this.smartLabel,\n\t          chartContainer: this.graphics.container\n\t        });\n\t        unigroup.setConfig({\n\t          fill: '#fff',\n\t          borderThickness: 0\n\t        });\n\t        group.setConfig({\n\t          fill: '#fff',\n\t          borderThickness: 0\n\t        });\n\t        toolbar = new this.HorizontalToolbar({\n\t          paper: this.graphics.paper,\n\t          chart: this.chart,\n\t          smartLabel: this.smartLabel,\n\t          chartContainer: this.graphics.container\n\t        });\n\t        toolbar.setConfig({\n\t          fill: '#fff',\n\t          borderThickness: 0\n\t        });\n\t        fromDateLabel = new this.toolbox.Label('Zoom:', {\n\t          smartLabel: this.smartLabel,\n\t          paper: this.graphics.paper\n\t        }, self.extData.style['label-config']);\n\t        group.addSymbol(fromDateLabel);\n\t        allButton = new this.toolbox.Symbol('ALL', true, {\n\t          paper: this.graphics.paper,\n\t          chart: this.chart,\n\t          smartLabel: this.smartLabel,\n\t          chartContainer: this.graphics.container\n\t        }, self.extData.style['all-config'] || {\n\t          // --config--\n\t          fill: '#ffffff',\n\t          labelFill: '#696969',\n\t          symbolStrokeWidth: '2',\n\t          stroke: '#ced5d4',\n\t          strokeWidth: '1',\n\t          hoverFill: '#ced5d4',\n\t          height: 22,\n\t          radius: 1,\n\t          margin: {\n\t            right: 5\n\t          },\n\t          btnTextStyle: {\n\t            'fontFamily': '\"Lucida Grande\", sans-serif',\n\t            'fontSize': '13',\n\t            'fill': '#696969',\n\t            'line-height': '1',\n\t            'letter-spacing': '-0.04em'\n\t          }\n\t        }).attachEventHandlers({\n\t          click: function click() {\n\t            self.periodButtonClicked = true;\n\t            self.currentCategory = 'ALL';\n\t            self.clickedId = 'ALL';\n\t            self.flagDrawn = 2;\n\t            self.setActivePeriod(self.startDataset, self.endDataset);\n\t          },\n\t          tooltext: 'ALL'\n\t        });\n\t\n\t        unigroup.addSymbol(allButton);\n\t        for (i = 0; i < this.standardCalculatedPeriods.length; i++) {\n\t          for (j = this.standardCalculatedPeriods[i].multipliers.length - 1; j >= 0; j--) {\n\t            deductorAr.push(self.standardCalculatedPeriods[i].multipliers[j] * self.standardCalculatedPeriods[i].milliseconds);\n\t          }\n\t        }\n\t\n\t        calculatedButtons = {};\n\t        for (var key in this.calculatedButtonObj) {\n\t          this.calculatedButtonObj[key].hide();\n\t        }\n\t\n\t        var _loop = function _loop(_i3) {\n\t          var _loop3 = function _loop3(_j2) {\n\t            var keyAbb = self.standardCalculatedPeriods[_i3].multipliers[_j2] + self.standardCalculatedPeriods[_i3].abbreviation;\n\t            calculatedButtons = new _this.toolbox.Symbol(keyAbb, true, {\n\t              paper: _this.graphics.paper,\n\t              chart: _this.chart,\n\t              smartLabel: _this.smartLabel,\n\t              chartContainer: _this.graphics.container\n\t            }, self.extData.style['calculated-config']).attachEventHandlers({\n\t              'click': function click() {\n\t                self.periodButtonClicked = true;\n\t                self.clickedId = keyAbb;\n\t                self.currentCategory = 'calculated';\n\t                deductor = self.standardCalculatedPeriods[_i3].multipliers[_j2] * self.standardCalculatedPeriods[_i3].milliseconds;\n\t                self.setActivePeriod(self.endActiveWindow - deductor, self.endActiveWindow);\n\t              },\n\t              tooltext: self.standardCalculatedPeriods[_i3].multipliers[_j2] + ' ' + self.standardCalculatedPeriods[_i3].description\n\t            });\n\t            _this.calculatedButtonObj[keyAbb] = calculatedButtons;\n\t            // unigroup.addSymbol(calculatedButtons[i]);\n\t            _this.calculatedButtonObj[keyAbb].show();\n\t            unigroup.addSymbol(_this.calculatedButtonObj[keyAbb]);\n\t          };\n\t\n\t          for (var _j2 = self.standardCalculatedPeriods[_i3].multipliers.length - 1; _j2 >= 0; _j2--) {\n\t            _loop3(_j2);\n\t          }\n\t        };\n\t\n\t        for (var _i3 = self.standardCalculatedPeriods.length - 1; _i3 >= 0; _i3--) {\n\t          _loop(_i3);\n\t        }\n\t\n\t        contextualButtons = [];\n\t\n\t        var _loop2 = function _loop2(_i4) {\n\t          contextualConfig = _i4 === 0 ? self.extData.style['contextual-config-first'] || {\n\t            fill: '#ffffff',\n\t            labelFill: '#696969',\n\t            symbolStrokeWidth: '2',\n\t            stroke: '#ced5d4',\n\t            strokeWidth: '1',\n\t            height: 22,\n\t            hoverFill: '#ced5d4',\n\t            radius: 1,\n\t            margin: {\n\t              right: 0,\n\t              left: 5\n\t            },\n\t            btnTextStyle: {\n\t              'fontFamily': '\"Lucida Grande\", sans-serif',\n\t              'fontSize': '13',\n\t              'fill': '#696969',\n\t              'line-height': '1',\n\t              'letter-spacing': '-0.04em'\n\t            }\n\t          } : self.extData.style['contextual-config'] || {\n\t            fill: '#ffffff',\n\t            labelFill: '#696969',\n\t            symbolStrokeWidth: '2',\n\t            stroke: '#ced5d4',\n\t            strokeWidth: '1',\n\t            height: 22,\n\t            hoverFill: '#ced5d4',\n\t            radius: 1,\n\t            margin: {\n\t              right: 0,\n\t              left: 0\n\t            },\n\t            btnTextStyle: {\n\t              'fontFamily': '\"Lucida Grande\", sans-serif',\n\t              'fontSize': '13',\n\t              'fill': '#696969',\n\t              'line-height': '1',\n\t              'letter-spacing': '-0.04em'\n\t            }\n\t          };\n\t          contextualButtons[_i4] = new _this.toolbox.Symbol(_this.standardContexualPeriods[_i4].abbreviation, true, {\n\t            paper: _this.graphics.paper,\n\t            chart: _this.chart,\n\t            smartLabel: _this.smartLabel,\n\t            chartContainer: _this.graphics.container\n\t          }, contextualConfig).attachEventHandlers({\n\t            'click': function click() {\n\t              self.periodButtonClicked = true;\n\t              self.flagDrawn = 1;\n\t              self.currentCategory = 'contextual';\n\t              self.clickedId = self.standardContexualPeriods[_i4].abbreviation;\n\t              self.setActivePeriod(self.standardContexualPeriods[_i4].dateStart, self.standardContexualPeriods[_i4].dateEnd);\n\t            },\n\t            tooltext: _this.standardContexualPeriods[_i4].description\n\t          });\n\t          contextualButtons.minViable = self.standardContexualPeriods[_i4].dateEnd - self.standardContexualPeriods[_i4].dateStart < self.minimumBucket;\n\t          if (self.standardContexualPeriods[_i4].dateEnd - self.standardContexualPeriods[_i4].dateStart >= self.minimumBucket) {\n\t            unigroup.addSymbol(contextualButtons[_i4]);\n\t          }\n\t        };\n\t\n\t        for (var _i4 = 0; _i4 < this.standardContexualPeriods.length; _i4++) {\n\t          _loop2(_i4);\n\t        }\n\t\n\t        this.SymbolStore.register('textBoxIcon', function (x, y, rad, w, h, padX, padY) {\n\t          var x1 = x - w / 2 + padX / 2,\n\t              x2 = x + w / 2 - padX / 2,\n\t              y1 = y - h / 2 + padY / 2,\n\t              y2 = y + h / 2 - padY / 2;\n\t\n\t          return ['M', x1, y1, 'L', x2, y1, 'L', x2, y2, 'L', x1, y2, 'Z'];\n\t        });\n\t\n\t        toolbar.addComponent(group);\n\t        toolbar.addComponent(unigroup);\n\t        this.toolbar = toolbar;\n\t        return toolbar;\n\t      }\n\t    }, {\n\t      key: 'getLogicalSpace',\n\t      value: function getLogicalSpace() {\n\t        var availableWidth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._pWidth;\n\t        var availableHeight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._pHeight;\n\t\n\t        // availableWidth /= 2;\n\t        var logicalSpace,\n\t            width = 420,\n\t            // width hardcoded; TODO: make it dynamic\n\t        height = 0,\n\t            i,\n\t            ln;\n\t\n\t        for (i = 0, ln = this.toolbars.length; i < ln; i++) {\n\t          logicalSpace = this.toolbars[i].getLogicalSpace(availableWidth, availableHeight);\n\t          // width = Math.max(logicalSpace.width, width);\n\t          height += logicalSpace.height;\n\t          this.toolbars[i].width = logicalSpace.width;\n\t          this.toolbars[i].height = logicalSpace.height;\n\t        }\n\t        height += this.padding;\n\t        return {\n\t          width: width,\n\t          height: height\n\t        };\n\t      }\n\t    }, {\n\t      key: 'getDefaultGroup',\n\t      value: function getDefaultGroup() {\n\t        return this.parentGroup;\n\t      }\n\t    }, {\n\t      key: 'placeInCanvas',\n\t      value: function placeInCanvas() {\n\t        var _self = this;\n\t        _self.padding = 5;\n\t        _self.spaceManagerInstance.add([{\n\t          name: function name() {\n\t            return 'standard-period-selector-ext';\n\t          },\n\t          ref: function ref(obj) {\n\t            return obj['0'];\n\t          },\n\t          self: function self() {\n\t            return _self;\n\t          },\n\t          priority: function priority() {\n\t            return 2;\n\t          },\n\t          layout: function layout(obj) {\n\t            return obj[_self.extData.layout] || 'inline';\n\t          },\n\t          orientation: [{\n\t            type: function type(obj) {\n\t              return obj[_self.extData.orientation] || 'horizontal';\n\t            },\n\t            position: [{\n\t              type: function type(obj) {\n\t                return obj[_self.extData.posWrtCanvas] || 'top';\n\t              },\n\t              alignment: [{\n\t                type: function type(obj) {\n\t                  return obj[_self.extData.alignment] || 'left';\n\t                },\n\t                dimensions: [function () {\n\t                  var parent = this.getParentComponentGroup();\n\t                  _self._ref = this;\n\t                  return _self.getLogicalSpace(_self._pWidth = parent.getWidth(), _self._pHeight = parent.getHeight());\n\t                }]\n\t              }]\n\t            }]\n\t          }]\n\t        }]);\n\t      }\n\t    }, {\n\t      key: 'setDrawingConfiguration',\n\t      value: function setDrawingConfiguration(x, y, width, height, group) {\n\t        var mes = this.measurement;\n\t        mes.x = x;\n\t        mes.y = y;\n\t        mes.width = width;\n\t        mes.height = height;\n\t\n\t        this.parentGroup = group;\n\t\n\t        return this;\n\t      }\n\t    }, {\n\t      key: 'draw',\n\t      value: function draw(x, y, width, height, group) {\n\t        var measurement = this.measurement,\n\t            toolbars = this.toolbars,\n\t            ln,\n\t            i,\n\t            toolbar,\n\t            symbolList,\n\t            boundElement,\n\t            bBox,\n\t            x1,\n\t            x2,\n\t            y2,\n\t            selectLine;\n\t\n\t        this.flag = true;\n\t        selectLine = this.saveSelectLine || this.graphics.paper.path({\n\t          'stroke': '#c95a5a',\n\t          'stroke-width': '2px'\n\t        }).toFront();\n\t        x = x === undefined ? measurement.x : x;\n\t        y = y === undefined ? measurement.y : y;\n\t        width = width === undefined ? measurement.width : width;\n\t        height = height === undefined ? measurement.height : height;\n\t        group = group === undefined ? this.parentGroup : group;\n\t        if (width && height) {\n\t          for (i = 0, ln = toolbars.length; i < ln; i++) {\n\t            toolbar = toolbars[i];\n\t            toolbar.draw(x, y, group);\n\t          }\n\t        }\n\t        this.saveSelectLine = selectLine;\n\t        symbolList = toolbars[0].componentGroups[1].symbolList;\n\t        for (var _i5 = 0, ii = symbolList.length; _i5 < ii; _i5++) {\n\t          if (symbolList[_i5].symbol === this.clickedId) {\n\t            boundElement = symbolList[_i5].getBoundElement();\n\t            bBox = boundElement.getBBox();\n\t            x1 = bBox.x;\n\t            x2 = bBox.x2;\n\t            y2 = bBox.y2;\n\t\n\t            selectLine.attr({\n\t              path: ['M', x1 - 0.5, y2 - 0.5, 'L', x2 + 0.5, y2 - 0.5]\n\t            });\n\t            this.flagDrawn = 2;\n\t          }\n\t        }\n\t        this.minimumBucket = this.globalReactiveModel.model['minimum-consecutive-datestamp-diff'] * this.globalReactiveModel.model['x-axis-maximum-allowed-ticks'];\n\t      }\n\t    }]);\n\t\n\t    return StandardPeriodSelector;\n\t  }();\n\t\n\t  return StandardPeriodSelector;\n\t};\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// standard-period-selector-es5.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bff7411a3110746a5d57","'use strict';\nconst StandardPeriodSelector = require('./standard-period-selector');\n\n;(function (env, factory) {\n  if (typeof module === 'object' && module.exports) {\n    module.exports = env.document\n       ? factory(env) : function (win) {\n         if (!win.document) {\n           throw new Error('Window with document not present');\n         }\n         return factory(win, true);\n       };\n  } else {\n    env.StandardPeriodSelector = factory(env, true);\n  }\n})(typeof window !== 'undefined' ? window : this, function (_window, windowExists) {\n  var FC = _window.FusionCharts;\n  FC.register('extension', ['private', 'standard-period-selector', function () {\n    FC.registerComponent('extensions', 'standard-period-selector', StandardPeriodSelector({FusionCharts: FC}));\n  }]);\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tmodule.children = [];\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 1\n// module chunks = 0","'use strict';\n\n/**\n * Class definition of StandardPeriodSelector\n */\n\nmodule.exports = function (dep) {\n  class StandardPeriodSelector {\n    constructor () {\n      /**\n       * @private\n       */\n      this.ratio = 8;\n      this.toolbox = FusionCharts.getComponent('api', 'toolbox');\n      this.HorizontalToolbar = this.toolbox.HorizontalToolbar;\n      this.ComponentGroup = this.toolbox.ComponentGroup;\n      this.SymbolStore = this.toolbox.SymbolStore;\n      this.all = 1;\n      this.calculatedPeriods = [];\n      this.startDataset = 0;\n      // this.endDataset = this.globalReactiveModel.model['x-axis-absolute-range-end'];\n      this.startActiveWindow = 0;\n      this.endActiveWindow = 1;\n      this.standardCalculatedPeriods = [];\n      this.standardContexualPeriods = [];\n      this.startPointUnit = 0;\n      this.startPointMultiplier = 0;\n      this.clickedId = 'ALL';\n      this.noCalcButtons = 0;\n      this.calculatedButtonObj = {};\n      this.minimumBucket = 25920000000;\n\n      this.tdButtons = [\n        {\n          'name': 'YTD',\n          'abbreviation': 'YTD',\n          'parent': 'year',\n          'milliseconds': 31104000000,\n          'description': 'Year to Date'\n        },\n        {\n          'name': 'QTD',\n          'abbreviation': 'QTD',\n          'parent': 'month',\n          'multiplier': 3,\n          'milliseconds': 7776000000,\n          'description': 'Quarter to Date'\n        },\n        {\n          'name': 'MTD',\n          'abbreviation': 'MTD',\n          'parent': 'month',\n          'milliseconds': 2592000000,\n          'description': 'Month to Date'\n        },\n        {\n          'name': 'WTD',\n          'abbreviation': 'WTD',\n          'parent': 'day',\n          'multiplier': 7,\n          'milliseconds': 604800000,\n          'description': 'Week to Date'\n        },\n        {\n          'name': 'Y',\n          'abbreviation': 'Y',\n          'parent': 'day',\n          'milliseconds': 86400000,\n          'description': 'Yesterday'\n        },\n        {\n          'name': 'T',\n          'abbreviation': 'T',\n          'parent': 'day',\n          'milliseconds': 86400000,\n          'description': 'Today'\n        }\n      ];\n      this.config = {\n        anchorPositions: 'right',\n        all: '1',\n        contextual: '1',\n        calculated: '1',\n        tertiaryTimePeriods: {}\n      };\n    }\n\n    /**\n     * A function to generate the calculated buttons using\n     * the active range and the location of the active range\n     */\n    generateCalculatedButtons () {\n      var targetBlock = this.endActiveWindow - this.startDataset,\n        i = 0,\n        j = 0,\n        activeWindow = this.endActiveWindow - this.startActiveWindow,\n        count = 0,\n        self = this;\n      self.standardCalculatedPeriods = [];\n      for (i = 0; i < self.timePeriods.length; i++) {\n        // checking whether the unit is applicable for the current target block\n        if (targetBlock / self.timePeriods[i].interval >= 1) {\n          // checking whether the unit is of the higher order and only multiplier 1 is applicable\n          if (Math.floor((activeWindow) / self.timePeriods[i].interval) < 1) {\n            self.standardCalculatedPeriods.push({\n              'abbreviation': self.timePeriods[i].abbreviation.single,\n              'description': self.timePeriods[i].description,\n              'milliseconds': self.timePeriods[i].interval,\n              'name': self.timePeriods[i].name,\n              'multipliers': [1]\n            });\n          } else { // if the unit is of the order of the target block and calculating the multipliers\n            self.standardCalculatedPeriods.push({\n              'abbreviation': self.timePeriods[i].abbreviation.single,\n              'description': self.timePeriods[i].description,\n              'milliseconds': self.timePeriods[i].interval,\n              'name': self.timePeriods[i].name,\n              'multipliers': []\n            });\n            // calculating and populating the applicable multpliers of each unit\n            for (j = 0; j < self.timePeriods[i].multipliers.length; j++) {\n              if (activeWindow / self.ratio < self.timePeriods[i].multipliers[j] * self.timePeriods[i].interval &&\n                (self.timePeriods[i].multipliers[j] * self.timePeriods[i].interval) > self.minimumBucket) {\n                self.standardCalculatedPeriods[self.standardCalculatedPeriods.length - 1].multipliers.push(\n                  self.timePeriods[i].multipliers[j]\n                  );\n              }\n            }\n          }\n        }\n      }\n      this.noCalcButtons = Infinity;\n      for (i = 0; i < this.standardCalculatedPeriods.length; i++) {\n        for (j = 0; j < this.standardCalculatedPeriods[i].multipliers.length; j++) {\n          ++count;\n          if (this.noCalcButtons > i) {\n            this.noCalcButtons = i;\n          }\n          if (count <= 4) {\n            this.startPointMultiplier = j;\n            this.startPointUnit = i;\n          }\n        }\n      }\n    }\n\n    /**\n     * A function to generate the contextual buttons using\n     * the end point of the time-scale\n     */\n    generateContextualButtons () {\n      // generating an array with applicable TD buttons\n      var buttons = [],\n        i = 0,\n        endStamp = this.globalReactiveModel.model['x-axis-absolute-range-end'],\n        dateStart = endStamp - 2,\n        dateEnd = endStamp,\n        relativeTDButton = {};\n      for (; i < this.tdButtons.length; i++) {\n        dateStart = new Date(endStamp);\n        if (this.tdButtons[i].name === 'YTD') {\n          dateStart.setMonth(0);\n          dateStart.setDate(1);\n          dateStart.setHours(0);\n          dateStart.setMinutes(0);\n          dateStart.setSeconds(0);\n        } else if (this.tdButtons[i].name === 'MTD') {\n          dateStart.setDate(1);\n          dateStart.setHours(0);\n          dateStart.setMinutes(0);\n          dateStart.setSeconds(0);\n        } else if (this.tdButtons[i].name === 'QTD') {\n          dateStart.setMonth(11 - (dateStart.getMonth() % 4));\n          dateStart.setDate(0);\n          dateStart.setHours(0);\n          dateStart.setMinutes(0);\n          dateStart.setSeconds(0);\n        } else if (this.tdButtons[i].name === 'WTD') {\n          dateStart.setDate(dateStart.getDate() - dateStart.getDay());\n          dateStart.setHours(0);\n          dateStart.setMinutes(0);\n          dateStart.setSeconds(0);\n        } else if (this.tdButtons[i].name === 'Y') {\n          dateStart.setHours(0);\n          dateStart.setMinutes(0);\n          dateStart.setSeconds(0);\n          dateStart -= 86400000;\n        } else if (this.tdButtons[i].name === 'T') {\n          dateStart.setHours(0);\n          dateStart.setMinutes(0);\n          dateStart.setSeconds(0);\n          if (+this.endDataset === +dateStart) {\n            dateStart = +dateStart - 86400000;\n          }\n        }\n\n        if (dateEnd < dateStart && (dateEnd - dateStart) < this.minimumBucket) {\n          continue;\n        } else {\n          this.tdButtons[i].dateStart = dateStart.valueOf();\n          this.tdButtons[i].dateEnd = dateEnd.valueOf();\n          buttons.push(this.tdButtons[i]);\n        }\n      }\n      relativeTDButton.milliseconds = Infinity;\n      for (i = 0; i < this.tdButtons.length; i++) {\n        if (Math.abs(this.tdButtons[i].milliseconds - (this.endActiveWindow - this.startActiveWindow)) < relativeTDButton.milliseconds) {\n          relativeTDButton.milliseconds = this.tdButtons[i].milliseconds;\n          relativeTDButton.name = this.tdButtons[i].abbreviation;\n        }\n      }\n\n      this.standardContexualPeriods = buttons;\n    }\n\n    processMultipliers (timeArr) {\n      var self = this;\n      for (let i = 0; i < timeArr.length; i++) {\n        let len = timeArr[i].possibleFactors.length,\n          timeName = timeArr[i] && timeArr[i].name,\n          timeObj = timeArr && timeArr[i],\n          customMultipliers = self && self.customMultipliers || {};\n        timeObj.multipliers = [];\n        if (customMultipliers[timeName]) {\n          timeObj.multipliers = customMultipliers[timeName];\n        } else if (len === 1) {\n          timeObj.multipliers.push(timeObj.possibleFactors[0]);\n        } else if (len === 2) {\n          timeObj.multipliers.push(timeObj.possibleFactors[0]);\n          timeObj.multipliers.push(timeObj.possibleFactors[len - 1]);\n        } else {\n          timeObj.multipliers.push(timeObj.possibleFactors[0]);\n          timeObj.multipliers.push(Math.floor(timeObj.possibleFactors[len - 1] / 2));\n          timeObj.multipliers.push(timeObj.possibleFactors[len - 1]);\n        }\n      }\n      return timeArr;\n    }\n\n    /**\n     * A function to set the active period's\n     * start and end point\n     * @param  {number} date stamp - A UNIX timestamp to be set as the start point of active period\n     * @param  {number} date stamp - A UNIX timestamp to be set as the end point of active period\n     */\n    setActivePeriod (a, b) {\n      var start,\n        end;\n      if (arguments.length === 1 && this.periodButtonClicked) {\n        end = this.endActiveWindow; // this.globalReactiveModel.model['x-axis-visible-range-end'];\n        start = end - arguments[0];\n        this.startActiveWindow = start;\n        // this.endActiveWindow = end;\n        this.globalReactiveModel\n          .lock()\n          .prop('x-axis-visible-range-start', this.startActiveWindow)\n          .unlock();\n      } else if (arguments.length === 2 && this.periodButtonClicked) {\n        start = arguments[0];\n        end = arguments[1];\n        this.startActiveWindow = start;\n        this.endActiveWindow = end;\n        this.globalReactiveModel\n          .lock()\n          .prop('x-axis-visible-range-start', this.startActiveWindow)\n          .prop('x-axis-visible-range-end', this.endActiveWindow)\n          .unlock();\n      }\n      this.generateCalculatedButtons();\n      this.generateContextualButtons();\n    }\n\n    /**\n     * A function to set the start and end point of the\n     * entire time-line\n     * @param  {number} date stamp - A UNIX timestamp to be set as the start point of time-line\n     * @param  {number} date stamp - A UNIX timestamp to be set as the end point of time-line\n     */\n\n    /**\n     * A function to set the object to set the user preferences\n     */\n    configure (config) {\n      this.config = config;\n    }\n\n    /**\n     * Fusioncharts life cycle method for extension\n     */\n    init (require) {\n      var instance = this;\n      require([\n        'graphics',\n        'chart',\n        'canvasConfig',\n        'MarkerManager',\n        'reactiveModel',\n        'globalReactiveModel',\n        'spaceManagerInstance',\n        'smartLabel',\n        'extData',\n        'chartInstance',\n        function (\n              graphics,\n              chart,\n              canvasConfig,\n              markerManager,\n              reactiveModel,\n              globalReactiveModel,\n              spaceManagerInstance,\n              smartLabel,\n              extData,\n              chartInstance) {\n          instance.graphics = graphics;\n          instance.chart = chart;\n          instance.markerManager = markerManager;\n          instance.canvasConfig = canvasConfig;\n          instance.reactiveModel = reactiveModel;\n          instance.globalReactiveModel = globalReactiveModel;\n          instance.spaceManagerInstance = spaceManagerInstance;\n          instance.smartLabel = smartLabel;\n          instance.extDataUser = extData;\n          instance.chartInstance = chartInstance;\n        }\n      ]);\n      instance.endActiveWindow = instance.globalReactiveModel.model['x-axis-visible-range-end'];\n      instance.startActiveWindow = instance.globalReactiveModel.model['x-axis-visible-range-start'];\n      instance.startDataset = instance.globalReactiveModel.model['x-axis-absolute-range-start'];\n      instance.endDataset = instance.globalReactiveModel.model['x-axis-absolute-range-end'];\n      instance.timeRules = instance.chartInstance.apiInstance.getComponentStore();\n      instance.timeRules = instance.timeRules.getCanvasByIndex(0).composition.impl;\n      instance.timeRules = instance.timeRules.getDataAggregator();\n      instance.timeRules = instance.timeRules.getAggregationTimeRules();\n      instance.timePeriods = instance.processMultipliers(instance.timeRules);\n      instance.extData = {\n        'disabled': 'false',\n        'default-select': 'ALL',\n        'posWrtCanvas': 'top',\n        'layout': 'inline',\n        'alignment': 'left',\n        'orientation': 'horizontal',\n        'customMultipliers': {\n          'millisecond': [1, 500],\n          'second': [1, 5, 15, 30],\n          'minute': [1, 5, 15, 30],\n          'hour': [1, 3, 6, 12],\n          'day': [1, 7, 15],\n          'month': [1, 3, 6],\n          'year': [1, 3, 5]\n        },\n        'style': {\n          'label-config': {\n            // --config--\n            text: {\n              style: {\n                'font-family': '\"Lucida Grande\", sans-serif',\n                'font-size': '13',\n                'fill': '#4b4b4b'\n              }\n            },\n            container: {\n              height: 22\n            }\n          },\n          'all-config': {\n            // --config--\n            fill: '#ffffff',\n            labelFill: '#4b4b4b',\n            symbolStrokeWidth: '2',\n            stroke: '#ced5d4',\n            strokeWidth: '1',\n            hoverFill: '#f7f7f7',\n            height: 22,\n            radius: 1,\n            margin: {\n              right: 5\n            },\n            btnTextStyle: {\n              'fontFamily': '\"Lucida Grande\", sans-serif',\n              'fontSize': '13',\n              'fill': '#4b4b4b',\n              'line-height': '1',\n              'letter-spacing': '-0.04em'\n            }\n          },\n          'calculated-config': {\n            // --config--\n            fill: '#ffffff',\n            labelFill: '#4b4b4b',\n            symbolStrokeWidth: '2',\n            stroke: '#ced5d4',\n            strokeWidth: '1',\n            hoverFill: '#f7f7f7',\n            height: 22,\n            radius: 1,\n            margin: {\n              right: 0\n            },\n            btnTextStyle: {\n              'fontFamily': '\"Lucida Grande\", sans-serif',\n              'fontSize': '13',\n              'fill': '#4b4b4b',\n              'line-height': '1',\n              'letter-spacing': '-0.04em'\n            }\n          },\n          'contextual-config-first': {\n            fill: '#ffffff',\n            labelFill: '#4b4b4b',\n            symbolStrokeWidth: '2',\n            stroke: '#ced5d4',\n            strokeWidth: '1',\n            height: 22,\n            hoverFill: '#f7f7f7',\n            radius: 1,\n            margin: {\n              right: 0,\n              left: 5\n            },\n            btnTextStyle: {\n              'fontFamily': '\"Lucida Grande\", sans-serif',\n              'fontSize': '13',\n              'fill': '#696969',\n              'line-height': '1',\n              'letter-spacing': '-0.04em'\n            }\n          },\n          'contextual-config': {\n            fill: '#ffffff',\n            labelFill: '#4b4b4b',\n            symbolStrokeWidth: '2',\n            stroke: '#ced5d4',\n            strokeWidth: '1',\n            height: 22,\n            hoverFill: '#f7f7f7',\n            radius: 1,\n            margin: {\n              right: 0,\n              left: 0\n            },\n            btnTextStyle: {\n              'fontFamily': '\"Lucida Grande\", sans-serif',\n              'fontSize': '13',\n              'fill': '#4b4b4b',\n              'line-height': '1',\n              'letter-spacing': '-0.04em'\n            }\n          }\n        }\n      };\n      Object.assign(instance.extData, instance.extDataUser);\n      instance.customMultipliers = instance.extData.customMultipliers || {\n        'millisecond': [1, 500],\n        'second': [1, 5, 15, 30],\n        'minute': [1, 5, 15, 30],\n        'hour': [1, 3, 6, 12],\n        'day': [1, 7, 15],\n        'month': [1, 3, 6],\n        'year': [1, 3]\n      };\n      instance.clickedId = instance.extData['default-select'] || 'ALL';\n      instance.setActivePeriod(instance.startActiveWindow, instance.endActiveWindow);\n      instance.toolbars = [];\n      instance.measurement = {};\n      instance.flag = true;\n\n      instance.toolbars.push(instance.createToolbar());\n\n      instance.globalReactiveModel.onPropsChange(['x-axis-visible-range-start', 'x-axis-visible-range-end'], propsHandler);\n      function propsHandler (start, end, flag) {\n        if (instance.currentCategory === 'contextual') {\n          if (instance.endActiveWindow === instance.endDataset) {\n            for (let i = 0; i < instance.standardContexualPeriods.length; i++) {\n              if ((instance.standardContexualPeriods[i].dateEnd - instance.standardContexualPeriods[i].dateStart) >= (end[1] - start[1])) {\n                instance.clickedId = instance.standardContexualPeriods[i].abbreviation;\n              }\n            }\n          } else {\n            for (let i = 0; i < instance.standardCalculatedPeriods.length; i++) {\n              for (let j = 0; j < instance.standardCalculatedPeriods[i].multipliers.length; j++) {\n                if ((end[1] - start[1]) >= instance.standardCalculatedPeriods[i].multipliers[j] * instance.standardCalculatedPeriods[i].milliseconds) {\n                  instance.clickedId = instance.standardCalculatedPeriods[i].multipliers[j] + instance.standardCalculatedPeriods[i].abbreviation;\n                }\n              }\n            }\n          }\n        } else if (instance.currentCategory === 'calculated') {\n          for (let i = 0; i < instance.standardCalculatedPeriods.length; i++) {\n            for (let j = 0; j < instance.standardCalculatedPeriods[i].multipliers.length; j++) {\n              if ((end[1] - start[1]) >= instance.standardCalculatedPeriods[i].multipliers[j] * instance.standardCalculatedPeriods[i].milliseconds) {\n                instance.clickedId = instance.standardCalculatedPeriods[i].multipliers[j] + instance.standardCalculatedPeriods[i].abbreviation;\n              }\n            }\n          }\n        }\n        instance.lastDisposed = instance.lastDisposed || 0;\n        if (flag) {\n          instance.launchedPropsHandler = false;\n          start = instance.propsStart;\n          end = instance.propsEnd;\n        }\n        instance.propsStart = start;\n        instance.propsEnd = end;\n        if (+new Date() - instance.lastDisposed < 400) {\n          if (!instance.launchedPropsHandler) {\n            instance.launchedPropsHandler = true;\n            setTimeout(propsHandler.bind(null, 0, 0, true));\n          }\n          return;\n        }\n\n        if (instance.flagDrawn < 3) {\n          instance.flagDrawn++;\n          instance.cantDispose = true;\n          instance.lastDisposed = +new Date();\n          instance.setActivePeriod(start[1], end[1]);\n          instance.toolbar.dispose();\n          instance.toolbars.pop();\n          instance.toolbars.push(instance.createToolbar());\n          instance.getLogicalSpace();\n          instance.draw();\n        } else {\n          // instance.cantDispose = false;\n          instance.flagDrawn = 0;\n        }\n      }\n      return instance;\n    };\n\n    createToolbar () {\n      var unigroup,\n        toolbar,\n        calculatedButtons,\n        contextualButtons,\n        allButton,\n        self = this,\n        deductorAr = [],\n        deductor,\n        i,\n        j,\n        contextualConfig,\n        fromDateLabel,\n        group;\n      group = new this.toolbox.ComponentGroup({\n        paper: this.graphics.paper,\n        chart: this.chart,\n        smartLabel: this.smartLabel,\n        chartContainer: this.graphics.container\n      });\n\n      unigroup = new this.toolbox.UniSelectComponentGroup({\n        paper: this.graphics.paper,\n        chart: this.chart,\n        smartLabel: this.smartLabel,\n        chartContainer: this.graphics.container\n      });\n      unigroup.setConfig({\n        fill: '#fff',\n        borderThickness: 0\n      });\n      group.setConfig({\n        fill: '#fff',\n        borderThickness: 0\n      });\n      toolbar = new this.HorizontalToolbar({\n        paper: this.graphics.paper,\n        chart: this.chart,\n        smartLabel: this.smartLabel,\n        chartContainer: this.graphics.container\n      });\n      toolbar.setConfig({\n        fill: '#fff',\n        borderThickness: 0\n      });\n      fromDateLabel = new this.toolbox.Label('Zoom:', {\n        smartLabel: this.smartLabel,\n        paper: this.graphics.paper\n      }, self.extData.style['label-config']);\n      group.addSymbol(fromDateLabel);\n      allButton = new this.toolbox.Symbol('ALL', true, {\n        paper: this.graphics.paper,\n        chart: this.chart,\n        smartLabel: this.smartLabel,\n        chartContainer: this.graphics.container\n      }, self.extData.style['all-config'] || {\n        // --config--\n        fill: '#ffffff',\n        labelFill: '#696969',\n        symbolStrokeWidth: '2',\n        stroke: '#ced5d4',\n        strokeWidth: '1',\n        hoverFill: '#ced5d4',\n        height: 22,\n        radius: 1,\n        margin: {\n          right: 5\n        },\n        btnTextStyle: {\n          'fontFamily': '\"Lucida Grande\", sans-serif',\n          'fontSize': '13',\n          'fill': '#696969',\n          'line-height': '1',\n          'letter-spacing': '-0.04em'\n        }\n      }).attachEventHandlers({\n        click: function () {\n          self.periodButtonClicked = true;\n          self.currentCategory = 'ALL';\n          self.clickedId = 'ALL';\n          self.flagDrawn = 2;\n          self.setActivePeriod(self.startDataset, self.endDataset);\n        },\n        tooltext: 'ALL'\n      });\n\n      unigroup.addSymbol(allButton);\n      for (i = 0; i < this.standardCalculatedPeriods.length; i++) {\n        for (j = this.standardCalculatedPeriods[i].multipliers.length - 1; j >= 0; j--) {\n          deductorAr.push(self.standardCalculatedPeriods[i].multipliers[j] * self.standardCalculatedPeriods[i].milliseconds);\n        }\n      }\n\n      calculatedButtons = {};\n      for (let key in this.calculatedButtonObj) {\n        this.calculatedButtonObj[key].hide();\n      }\n      for (let i = self.standardCalculatedPeriods.length - 1; i >= 0; i--) {\n        for (let j = self.standardCalculatedPeriods[i].multipliers.length - 1; j >= 0; j--) {\n          let keyAbb = self.standardCalculatedPeriods[i].multipliers[j] + self.standardCalculatedPeriods[i].abbreviation;\n          calculatedButtons = new this.toolbox.Symbol(keyAbb, true, {\n            paper: this.graphics.paper,\n            chart: this.chart,\n            smartLabel: this.smartLabel,\n            chartContainer: this.graphics.container\n          }, self.extData.style['calculated-config']).attachEventHandlers({\n            'click': function () {\n              self.periodButtonClicked = true;\n              self.clickedId = keyAbb;\n              self.currentCategory = 'calculated';\n              deductor = (self.standardCalculatedPeriods[i].multipliers[j] * self.standardCalculatedPeriods[i].milliseconds);\n              self.setActivePeriod(self.endActiveWindow - deductor, self.endActiveWindow);\n            },\n            tooltext: self.standardCalculatedPeriods[i].multipliers[j] + ' ' + self.standardCalculatedPeriods[i].description\n          });\n          this.calculatedButtonObj[keyAbb] = calculatedButtons;\n          // unigroup.addSymbol(calculatedButtons[i]);\n          this.calculatedButtonObj[keyAbb].show();\n          unigroup.addSymbol(this.calculatedButtonObj[keyAbb]);\n        }\n      }\n\n      contextualButtons = [];\n\n      for (let i = 0; i < this.standardContexualPeriods.length; i++) {\n        contextualConfig = (i === 0) ? self.extData.style['contextual-config-first'] || {\n          fill: '#ffffff',\n          labelFill: '#696969',\n          symbolStrokeWidth: '2',\n          stroke: '#ced5d4',\n          strokeWidth: '1',\n          height: 22,\n          hoverFill: '#ced5d4',\n          radius: 1,\n          margin: {\n            right: 0,\n            left: 5\n          },\n          btnTextStyle: {\n            'fontFamily': '\"Lucida Grande\", sans-serif',\n            'fontSize': '13',\n            'fill': '#696969',\n            'line-height': '1',\n            'letter-spacing': '-0.04em'\n          }\n        } : self.extData.style['contextual-config'] || {\n          fill: '#ffffff',\n          labelFill: '#696969',\n          symbolStrokeWidth: '2',\n          stroke: '#ced5d4',\n          strokeWidth: '1',\n          height: 22,\n          hoverFill: '#ced5d4',\n          radius: 1,\n          margin: {\n            right: 0,\n            left: 0\n          },\n          btnTextStyle: {\n            'fontFamily': '\"Lucida Grande\", sans-serif',\n            'fontSize': '13',\n            'fill': '#696969',\n            'line-height': '1',\n            'letter-spacing': '-0.04em'\n          }\n        };\n        contextualButtons[i] = new this.toolbox.Symbol(this.standardContexualPeriods[i].abbreviation, true, {\n          paper: this.graphics.paper,\n          chart: this.chart,\n          smartLabel: this.smartLabel,\n          chartContainer: this.graphics.container\n        }, contextualConfig)\n          .attachEventHandlers({\n            'click': function () {\n              self.periodButtonClicked = true;\n              self.flagDrawn = 1;\n              self.currentCategory = 'contextual';\n              self.clickedId = self.standardContexualPeriods[i].abbreviation;\n              self.setActivePeriod(self.standardContexualPeriods[i].dateStart, self.standardContexualPeriods[i].dateEnd);\n            },\n            tooltext: this.standardContexualPeriods[i].description\n          });\n        contextualButtons.minViable = (self.standardContexualPeriods[i].dateEnd - self.standardContexualPeriods[i].dateStart < self.minimumBucket);\n        if (self.standardContexualPeriods[i].dateEnd - self.standardContexualPeriods[i].dateStart >= self.minimumBucket) {\n          unigroup.addSymbol(contextualButtons[i]);\n        }\n      }\n\n      this.SymbolStore.register('textBoxIcon', function (x, y, rad, w, h, padX, padY) {\n        var x1 = x - w / 2 + padX / 2,\n          x2 = x + w / 2 - padX / 2,\n          y1 = y - h / 2 + padY / 2,\n          y2 = y + h / 2 - padY / 2;\n\n        return ['M', x1, y1, 'L', x2, y1, 'L', x2, y2, 'L', x1, y2, 'Z'];\n      });\n\n      toolbar.addComponent(group);\n      toolbar.addComponent(unigroup);\n      this.toolbar = toolbar;\n      return toolbar;\n    };\n\n    getLogicalSpace (availableWidth = this._pWidth, availableHeight = this._pHeight) {\n      // availableWidth /= 2;\n      var logicalSpace,\n        width = 420, // width hardcoded; TODO: make it dynamic\n        height = 0,\n        i,\n        ln;\n\n      for (i = 0, ln = this.toolbars.length; i < ln; i++) {\n        logicalSpace = this.toolbars[i].getLogicalSpace(availableWidth, availableHeight);\n        // width = Math.max(logicalSpace.width, width);\n        height += logicalSpace.height;\n        this.toolbars[i].width = logicalSpace.width;\n        this.toolbars[i].height = logicalSpace.height;\n      }\n      height += this.padding;\n      return {\n        width: width,\n        height: height\n      };\n    };\n\n    getDefaultGroup () {\n      return this.parentGroup;\n    }\n\n    placeInCanvas () {\n      var self = this;\n      self.padding = 5;\n      self.spaceManagerInstance.add([{\n        name: function () {\n          return 'standard-period-selector-ext';\n        },\n        ref: function (obj) {\n          return obj['0'];\n        },\n        self: function () {\n          return self;\n        },\n        priority: function () {\n          return 2;\n        },\n        layout: function (obj) {\n          return obj[self.extData.layout] || 'inline';\n        },\n        orientation: [{\n          type: function (obj) {\n            return obj[self.extData.orientation] || 'horizontal';\n          },\n          position: [{\n            type: function (obj) {\n              return obj[self.extData.posWrtCanvas] || 'top';\n            },\n            alignment: [{\n              type: function (obj) {\n                return obj[self.extData.alignment] || 'left';\n              },\n              dimensions: [function () {\n                var parent = this.getParentComponentGroup();\n                self._ref = this;\n                return self.getLogicalSpace((self._pWidth = parent.getWidth()), (self._pHeight = parent.getHeight()));\n              }]\n            }]\n          }]\n        }]\n      }]);\n    };\n\n    setDrawingConfiguration (x, y, width, height, group) {\n      var mes = this.measurement;\n      mes.x = x;\n      mes.y = y;\n      mes.width = width;\n      mes.height = height;\n\n      this.parentGroup = group;\n\n      return this;\n    };\n\n    draw (x, y, width, height, group) {\n      var measurement = this.measurement,\n        toolbars = this.toolbars,\n        ln,\n        i,\n        toolbar,\n        symbolList,\n        boundElement,\n        bBox,\n        x1,\n        x2,\n        y2,\n        selectLine;\n\n      this.flag = true;\n      selectLine = this.saveSelectLine || this.graphics.paper.path({\n        'stroke': '#c95a5a',\n        'stroke-width': '2px'\n      }).toFront();\n      x = x === undefined ? measurement.x : x;\n      y = y === undefined ? measurement.y : y;\n      width = width === undefined ? measurement.width : width;\n      height = height === undefined ? measurement.height : height;\n      group = group === undefined ? this.parentGroup : group;\n      if (width && height) {\n        for (i = 0, ln = toolbars.length; i < ln; i++) {\n          toolbar = toolbars[i];\n          toolbar.draw(x, y, group);\n        }\n      }\n      this.saveSelectLine = selectLine;\n      symbolList = toolbars[0].componentGroups[1].symbolList;\n      for (let i = 0, ii = symbolList.length; i < ii; i++) {\n        if (symbolList[i].symbol === this.clickedId) {\n          boundElement = symbolList[i].getBoundElement();\n          bBox = boundElement.getBBox();\n          x1 = bBox.x;\n          x2 = bBox.x2;\n          y2 = bBox.y2;\n\n          selectLine.attr({\n            path: ['M', x1 - 0.5, y2 - 0.5, 'L', x2 + 0.5, y2 - 0.5]\n          });\n          this.flagDrawn = 2;\n        }\n      }\n      this.minimumBucket = this.globalReactiveModel.model['minimum-consecutive-datestamp-diff'] * this.globalReactiveModel.model['x-axis-maximum-allowed-ticks'];\n    };\n  }\n  return StandardPeriodSelector;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/standard-period-selector.js"],"sourceRoot":""}
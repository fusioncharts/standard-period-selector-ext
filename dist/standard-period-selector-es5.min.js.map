{"version":3,"sources":["webpack:///standard-period-selector-es5.min.js","webpack:///webpack/bootstrap 295f957710dc678820ac","webpack:///./src/index.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/standard-period-selector.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_typeof","Symbol","iterator","obj","constructor","prototype","StandardPeriodSelector","env","factory","document","win","Error","window","undefined","_window","windowExists","FC","FusionCharts","register","registerComponent","webpackPolyfill","deprecate","paths","children","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","dep","this","self","ratio","toolbox","getComponent","HorizontalToolbar","ComponentGroup","SymbolStore","all","calculatedPeriods","startDataset","startActiveWindow","endActiveWindow","standardCalculatedPeriods","standardContexualPeriods","startPointUnit","startPointMultiplier","clickedId","noCalcButtons","minimumBucket","toolbar","btns","contextualObj","calculatedObj","tdButtons","name","abbreviation","parent","milliseconds","description","multiplier","config","anchorPositions","contextual","calculated","tertiaryTimePeriods","propsChangeListener","start","end","updatePending","setTimeout","showApplicableCalculatedButtons","heighlightActiveRange","value","btn","hide","targetBlock","j","activeWindow","hideAllCalcBtns","timePeriods","interval","extData","single","clickedIdVal","Math","floor","push","multipliers","show","redraw","boundElement","bBox","x1","x2","y2","activeBtn","sps","selectLine","saveSelectLine","graphics","paper","path","stroke","stroke-width","toFront","svgElems","node","getBBox","x","width","y","height","attr","timeArr","len","possibleFactors","timeName","timeObj","customMultipliers","buttonGroup","btnCalc","btnObj","_this","_loop","_loop2","keyAbb","keyName","fn","globalReactiveModel","model","shortKey","chart","smartLabel","chartContainer","container","style","attachEventHandlers","click","tooltext","addSymbol","buttons","endStamp","dateStart","dateEnd","relativeTDButton","Date","setMonth","setDate","setHours","setMinutes","setSeconds","getMonth","getDate","getDay","endDataset","valueOf","Infinity","abs","contextualConfig","_this2","generateCtxBtnList","_loop3","fill","labelFill","symbolStrokeWidth","strokeWidth","hoverFill","radius","margin","right","left","btnTextStyle","fontFamily","fontSize","line-height","letter-spacing","lock","prop","unlock","allButton","fromDateLabel","group","setConfig","borderThickness","Label","createCalculatedButtons","createContextualButtons","addComponent","require","canvasConfig","markerManager","reactiveModel","spaceManagerInstance","chartInstance","extDataUser","timeRules","apiInstance","getComponentStore","getCanvasByIndex","composition","impl","getDataAggregator","getAggregationTimeRules","processMultipliers","disabled","default-select","posWrtCanvas","layout","alignment","orientation","millisecond","second","minute","hour","day","month","year","label-config","text","font-family","font-size","all-config","calculated-config","contextual-config-first","contextual-config","assign","toolbars","measurement","flag","createToolbar","onPropsChange","logicalSpace","ln","availableWidth","arguments","_pWidth","availableHeight","_pHeight","getLogicalSpace","padding","parentGroup","add","ref","priority","type","position","dimensions","getParentComponentGroup","_ref","getWidth","getHeight","mes","draw"],"mappings":"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","file":"standard-period-selector-es5.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar StandardPeriodSelector = __webpack_require__(2);\n\t\n\t;(function (env, factory) {\n\t  if (( false ? 'undefined' : _typeof(module)) === 'object' && module.exports) {\n\t    module.exports = env.document ? factory(env) : function (win) {\n\t      if (!win.document) {\n\t        throw new Error('Window with document not present');\n\t      }\n\t      return factory(win, true);\n\t    };\n\t  } else {\n\t    env.StandardPeriodSelector = factory(env, true);\n\t  }\n\t})(typeof window !== 'undefined' ? window : undefined, function (_window, windowExists) {\n\t  var FC = _window.FusionCharts;\n\t  FC.register('extension', ['private', 'standard-period-selector', function () {\n\t    FC.registerComponent('extensions', 'standard-period-selector', StandardPeriodSelector({ FusionCharts: FC }));\n\t  }]);\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)(module)))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\n\t\tif(!module.webpackPolyfill) {\n\t\t\tmodule.deprecate = function() {};\n\t\t\tmodule.paths = [];\n\t\t\t// module.parent = undefined by default\n\t\t\tmodule.children = [];\n\t\t\tmodule.webpackPolyfill = 1;\n\t\t}\n\t\treturn module;\n\t}\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Class definition of StandardPeriodSelector\n\t */\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tmodule.exports = function (dep) {\n\t  var StandardPeriodSelector = function () {\n\t    function StandardPeriodSelector() {\n\t      _classCallCheck(this, StandardPeriodSelector);\n\t\n\t      /**\n\t       * @private\n\t       */\n\t      var self = this;\n\t      self.ratio = 8;\n\t      self.toolbox = FusionCharts.getComponent('api', 'toolbox');\n\t      self.HorizontalToolbar = self.toolbox.HorizontalToolbar;\n\t      self.ComponentGroup = self.toolbox.ComponentGroup;\n\t      self.SymbolStore = self.toolbox.SymbolStore;\n\t      self.all = 1;\n\t      self.calculatedPeriods = [];\n\t      self.startDataset = 0;\n\t      // self.endDataset = self.globalReactiveModel.model['x-axis-absolute-range-end'];\n\t      self.startActiveWindow = 0;\n\t      self.endActiveWindow = 1;\n\t      self.standardCalculatedPeriods = [];\n\t      self.standardContexualPeriods = [];\n\t      self.startPointUnit = 0;\n\t      self.startPointMultiplier = 0;\n\t      self.clickedId = 'ALL';\n\t      self.noCalcButtons = 0;\n\t      self.minimumBucket = 5184000000;\n\t      self.toolbar = {};\n\t      self.btns = {\n\t        contextualObj: {},\n\t        calculatedObj: {}\n\t      };\n\t\n\t      self.tdButtons = [{\n\t        'name': 'YTD',\n\t        'abbreviation': 'YTD',\n\t        'parent': 'year',\n\t        'milliseconds': 31104000000,\n\t        'description': 'Year to Date'\n\t      }, {\n\t        'name': 'QTD',\n\t        'abbreviation': 'QTD',\n\t        'parent': 'month',\n\t        'multiplier': 3,\n\t        'milliseconds': 7776000000,\n\t        'description': 'Quarter to Date'\n\t      }, {\n\t        'name': 'MTD',\n\t        'abbreviation': 'MTD',\n\t        'parent': 'month',\n\t        'milliseconds': 2592000000,\n\t        'description': 'Month to Date'\n\t      }, {\n\t        'name': 'WTD',\n\t        'abbreviation': 'WTD',\n\t        'parent': 'day',\n\t        'multiplier': 7,\n\t        'milliseconds': 604800000,\n\t        'description': 'Week to Date'\n\t      }, {\n\t        'name': 'Y',\n\t        'abbreviation': 'Y',\n\t        'parent': 'day',\n\t        'milliseconds': 86400000,\n\t        'description': 'Yesterday'\n\t      }, {\n\t        'name': 'T',\n\t        'abbreviation': 'T',\n\t        'parent': 'day',\n\t        'milliseconds': 86400000,\n\t        'description': 'Today'\n\t      }];\n\t      self.config = {\n\t        anchorPositions: 'right',\n\t        all: '1',\n\t        contextual: '1',\n\t        calculated: '1',\n\t        tertiaryTimePeriods: {}\n\t      };\n\t\n\t      self.propsChangeListener = function (start, end) {\n\t        self.startActiveWindow = start[1];\n\t        self.endActiveWindow = end[1];\n\t\n\t        if (!self.updatePending) {\n\t          self.updatePending = true;\n\t          setTimeout(function () {\n\t            self.updatePending = false;\n\t            self.showApplicableCalculatedButtons();\n\t            self.heighlightActiveRange();\n\t          }, 300);\n\t        }\n\t      };\n\t    }\n\t\n\t    // ****** Make btns visible ******* /\n\t    /**\n\t     * A function to generate the calculated buttons using\n\t     * the active range and the location of the active range\n\t     */\n\t\n\t    _createClass(StandardPeriodSelector, [{\n\t      key: 'hideAllCalcBtns',\n\t      value: function hideAllCalcBtns() {\n\t        var self = this,\n\t            calculatedObj = self.btns.calculatedObj,\n\t            i;\n\t        for (i in calculatedObj) {\n\t          calculatedObj[i].btn.hide();\n\t        }\n\t      }\n\t    }, {\n\t      key: 'showApplicableCalculatedButtons',\n\t      value: function showApplicableCalculatedButtons() {\n\t        var targetBlock = this.endActiveWindow - this.startDataset,\n\t            i = 0,\n\t            j = 0,\n\t            activeWindow = this.endActiveWindow - this.startActiveWindow,\n\t            self = this,\n\t            key,\n\t            calculatedObj = self.btns.calculatedObj;\n\t\n\t        self.hideAllCalcBtns();\n\t        self.standardCalculatedPeriods = [];\n\t        for (i = 0; i < self.timePeriods.length; i++) {\n\t          // checking whether the unit is applicable for the current target block\n\t          if (targetBlock / self.timePeriods[i].interval >= 1) {\n\t            // checking whether the unit is of the higher order and only multiplier 1 is applicable\n\t            if (this.extData['default-select'] === '1' + self.timePeriods[i].abbreviation.single) {\n\t              this.clickedIdVal = self.timePeriods[i].interval;\n\t            }\n\t            if (Math.floor(activeWindow / self.timePeriods[i].interval) < 1) {\n\t              // self.show('1' + self.timePeriods[i].abbreviation.single);\n\t              // self.calculatedObj['1' + self.timePeriods[i].abbreviation.single].show();\n\t              self.standardCalculatedPeriods.push({\n\t                'name': self.timePeriods[i].name,\n\t                'abbreviation': self.timePeriods[i].abbreviation.single,\n\t                'multipliers': [1]\n\t              });\n\t            } else {\n\t              // if the unit is of the order of the target block and calculating the multipliers\n\t              self.standardCalculatedPeriods.push({\n\t                'name': self.timePeriods[i].name,\n\t                'abbreviation': self.timePeriods[i].abbreviation.single,\n\t                'multipliers': []\n\t              });\n\t              // calculating and populating the applicable multpliers of each unit\n\t              for (j = 0; j < self.timePeriods[i].multipliers.length; j++) {\n\t                if (activeWindow / self.ratio < self.timePeriods[i].multipliers[j] * self.timePeriods[i].interval && self.timePeriods[i].multipliers[j] * self.timePeriods[i].interval > self.minimumBucket) {\n\t                  self.standardCalculatedPeriods[self.standardCalculatedPeriods.length - 1].multipliers.push(self.timePeriods[i].multipliers[j]);\n\t                }\n\t              }\n\t            }\n\t          }\n\t        }\n\t\n\t        for (i = 0; i < self.standardCalculatedPeriods.length; i++) {\n\t          for (j = 0; j < self.standardCalculatedPeriods[i].multipliers.length; j++) {\n\t            key = self.standardCalculatedPeriods[i].multipliers[j] + self.standardCalculatedPeriods[i].name;\n\t            calculatedObj[key].btn && calculatedObj[key].btn.show();\n\t          }\n\t        }\n\t        self.toolbar && self.toolbar.redraw();\n\t      }\n\t\n\t      // ******** React on active property change ****\n\t\n\t    }, {\n\t      key: 'heighlightActiveRange',\n\t      value: function heighlightActiveRange() {\n\t        // first check w.r.t contextual btns then others\n\t        var sps = this,\n\t            selectLine = sps.saveSelectLine,\n\t            boundElement,\n\t            clickedId = sps.clickedId,\n\t            bBox,\n\t            x1,\n\t            x2,\n\t            y2,\n\t            activeBtn,\n\t            contextualObj = sps.btns.contextualObj,\n\t            calculatedObj = sps.btns.calculatedObj;\n\t\n\t        // if the heighliter is not createcd create it\n\t        if (!selectLine) {\n\t          selectLine = sps.saveSelectLine || (sps.saveSelectLine = sps.graphics.paper.path({\n\t            'stroke': '#c95a5a',\n\t            'stroke-width': '2px'\n\t          }).toFront());\n\t        }\n\t\n\t        activeBtn = contextualObj[clickedId] || calculatedObj[clickedId] || sps.btns[clickedId];\n\t\n\t        if (activeBtn) {\n\t          boundElement = activeBtn.btn.svgElems.node;\n\t          bBox = boundElement.getBBox();\n\t          x1 = bBox.x;\n\t          x2 = x1 + bBox.width;\n\t          y2 = bBox.y + bBox.height;\n\t          selectLine.show().attr({\n\t            path: ['M', x1 - 0.5, y2 - 0.5, 'L', x2 + 0.5, y2 - 0.5]\n\t          });\n\t        } else {\n\t          selectLine.hide();\n\t        }\n\t      }\n\t\n\t      // *********** Drzaw the btns initialy ***** //\n\t\n\t      // adds multipliers to the timerules object\n\t\n\t    }, {\n\t      key: 'processMultipliers',\n\t      value: function processMultipliers(timeArr) {\n\t        var self = this;\n\t        for (var i = 0; i < timeArr.length; i++) {\n\t          var len = timeArr[i].possibleFactors.length,\n\t              timeName = timeArr[i] && timeArr[i].name,\n\t              timeObj = timeArr && timeArr[i],\n\t              customMultipliers = self && self.customMultipliers || {};\n\t          timeObj.multipliers = [];\n\t          if (customMultipliers[timeName]) {\n\t            timeObj.multipliers = customMultipliers[timeName];\n\t          } else if (len === 1) {\n\t            timeObj.multipliers.push(timeObj.possibleFactors[0]);\n\t          } else if (len === 2) {\n\t            timeObj.multipliers.push(timeObj.possibleFactors[0]);\n\t            timeObj.multipliers.push(timeObj.possibleFactors[len - 1]);\n\t          } else {\n\t            timeObj.multipliers.push(timeObj.possibleFactors[0]);\n\t            timeObj.multipliers.push(Math.floor(timeObj.possibleFactors[len - 1] / 2));\n\t            timeObj.multipliers.push(timeObj.possibleFactors[len - 1]);\n\t          }\n\t        }\n\t        return timeArr;\n\t      }\n\t    }, {\n\t      key: 'createCalculatedButtons',\n\t      value: function createCalculatedButtons(buttonGroup) {\n\t        var _this = this;\n\t\n\t        var self = this,\n\t            btnCalc,\n\t            calculatedObj = self.btns.calculatedObj,\n\t            btnObj;\n\t\n\t        var _loop = function _loop(i) {\n\t          var _loop2 = function _loop2(j) {\n\t            var keyAbb = self.timePeriods[i].multipliers[j] + self.timePeriods[i].abbreviation.single,\n\t                keyName = self.timePeriods[i].multipliers[j] + self.timePeriods[i].name;\n\t\n\t            btnObj = calculatedObj[keyName] = {\n\t              fn: function fn() {\n\t                self.clickedId = keyName;\n\t                self.globalReactiveModel.model['x-axis-visible-range-start'] = self.endActiveWindow - self.timePeriods[i].multipliers[j] * self.timePeriods[i].interval;\n\t              },\n\t              shortKey: keyAbb\n\t            };\n\t\n\t            btnCalc = new _this.toolbox.Symbol(keyAbb, true, {\n\t              paper: _this.graphics.paper,\n\t              chart: _this.chart,\n\t              smartLabel: _this.smartLabel,\n\t              chartContainer: _this.graphics.container\n\t            }, self.extData.style['calculated-config']).attachEventHandlers({\n\t              'click': btnObj.fn,\n\t              tooltext: self.timePeriods[i].multipliers[j] + ' ' + self.timePeriods[i].description\n\t            });\n\t            btnObj.btn = btnCalc;\n\t            buttonGroup.addSymbol(btnCalc);\n\t            // calculatedButtons.hide();\n\t          };\n\t\n\t          for (var j = self.timePeriods[i].multipliers.length - 1; j >= 0; j--) {\n\t            _loop2(j);\n\t          }\n\t        };\n\t\n\t        for (var i = self.timePeriods.length - 1; i >= 0; i--) {\n\t          _loop(i);\n\t        }\n\t      }\n\t\n\t      /**\n\t       * A function to generate the contextual buttons using\n\t       * the end point of the time-scale\n\t       */\n\t\n\t    }, {\n\t      key: 'generateCtxBtnList',\n\t      value: function generateCtxBtnList() {\n\t        // generating an array with applicable TD buttons\n\t        var buttons = [],\n\t            i = 0,\n\t            endStamp = this.globalReactiveModel.model['x-axis-absolute-range-end'],\n\t            dateStart = endStamp - 2,\n\t            dateEnd = endStamp,\n\t            relativeTDButton = {};\n\t        for (; i < this.tdButtons.length; i++) {\n\t          dateStart = new Date(endStamp);\n\t          if (this.tdButtons[i].name === 'YTD') {\n\t            dateStart.setMonth(0);\n\t            dateStart.setDate(1);\n\t            dateStart.setHours(0);\n\t            dateStart.setMinutes(0);\n\t            dateStart.setSeconds(0);\n\t          } else if (this.tdButtons[i].name === 'MTD') {\n\t            dateStart.setDate(1);\n\t            dateStart.setHours(0);\n\t            dateStart.setMinutes(0);\n\t            dateStart.setSeconds(0);\n\t          } else if (this.tdButtons[i].name === 'QTD') {\n\t            dateStart.setMonth(11 - dateStart.getMonth() % 4);\n\t            dateStart.setDate(0);\n\t            dateStart.setHours(0);\n\t            dateStart.setMinutes(0);\n\t            dateStart.setSeconds(0);\n\t          } else if (this.tdButtons[i].name === 'WTD') {\n\t            dateStart.setDate(dateStart.getDate() - dateStart.getDay());\n\t            dateStart.setHours(0);\n\t            dateStart.setMinutes(0);\n\t            dateStart.setSeconds(0);\n\t          } else if (this.tdButtons[i].name === 'Y') {\n\t            dateStart.setHours(0);\n\t            dateStart.setMinutes(0);\n\t            dateStart.setSeconds(0);\n\t            dateStart -= 86400000;\n\t          } else if (this.tdButtons[i].name === 'T') {\n\t            dateStart.setHours(0);\n\t            dateStart.setMinutes(0);\n\t            dateStart.setSeconds(0);\n\t            if (+this.endDataset === +dateStart) {\n\t              dateStart = +dateStart - 86400000;\n\t            }\n\t          }\n\t\n\t          if (dateEnd < dateStart && dateEnd - dateStart < this.minimumBucket) {\n\t            continue;\n\t          } else {\n\t            this.tdButtons[i].dateStart = dateStart.valueOf();\n\t            this.tdButtons[i].dateEnd = dateEnd.valueOf();\n\t            buttons.push(this.tdButtons[i]);\n\t          }\n\t        }\n\t        relativeTDButton.milliseconds = Infinity;\n\t        for (i = 0; i < this.tdButtons.length; i++) {\n\t          if (Math.abs(this.tdButtons[i].milliseconds - (this.endActiveWindow - this.startActiveWindow)) < relativeTDButton.milliseconds) {\n\t            relativeTDButton.milliseconds = this.tdButtons[i].milliseconds;\n\t            relativeTDButton.name = this.tdButtons[i].abbreviation;\n\t          }\n\t        }\n\t\n\t        this.standardContexualPeriods = buttons;\n\t      }\n\t    }, {\n\t      key: 'createContextualButtons',\n\t      value: function createContextualButtons(buttonGroup) {\n\t        var _this2 = this;\n\t\n\t        var contextualButtons = [],\n\t            self = this,\n\t            contextualConfig,\n\t            contextualObj = self.btns.contextualObj,\n\t            btnObj,\n\t            keyName;\n\t        self.generateCtxBtnList();\n\t\n\t        var _loop3 = function _loop3(i) {\n\t          contextualConfig = i === 0 ? self.extData.style['contextual-config-first'] || {\n\t            fill: '#ffffff',\n\t            labelFill: '#696969',\n\t            symbolStrokeWidth: '2',\n\t            stroke: '#ced5d4',\n\t            strokeWidth: '1',\n\t            height: 22,\n\t            hoverFill: '#ced5d4',\n\t            radius: 1,\n\t            margin: {\n\t              right: 0,\n\t              left: 5\n\t            },\n\t            btnTextStyle: {\n\t              'fontFamily': '\"Lucida Grande\", sans-serif',\n\t              'fontSize': '13',\n\t              'fill': '#696969',\n\t              'line-height': '1',\n\t              'letter-spacing': '-0.04em'\n\t            }\n\t          } : self.extData.style['contextual-config'] || {\n\t            fill: '#ffffff',\n\t            labelFill: '#696969',\n\t            symbolStrokeWidth: '2',\n\t            stroke: '#ced5d4',\n\t            strokeWidth: '1',\n\t            height: 22,\n\t            hoverFill: '#ced5d4',\n\t            radius: 1,\n\t            margin: {\n\t              right: 0,\n\t              left: 0\n\t            },\n\t            btnTextStyle: {\n\t              'fontFamily': '\"Lucida Grande\", sans-serif',\n\t              'fontSize': '13',\n\t              'fill': '#696969',\n\t              'line-height': '1',\n\t              'letter-spacing': '-0.04em'\n\t            }\n\t          };\n\t          keyName = _this2.standardContexualPeriods[i].abbreviation;\n\t          btnObj = contextualObj[keyName] = {\n\t            fn: function fn() {\n\t              self.clickedId = self.standardContexualPeriods[i].abbreviation;\n\t              self.globalReactiveModel.lock().prop('x-axis-visible-range-start', self.standardContexualPeriods[i].dateStart).prop('x-axis-visible-range-end', self.standardContexualPeriods[i].dateEnd).unlock();\n\t            }\n\t          };\n\t\n\t          btnObj.btn = new _this2.toolbox.Symbol(_this2.standardContexualPeriods[i].abbreviation, true, {\n\t            paper: _this2.graphics.paper,\n\t            chart: _this2.chart,\n\t            smartLabel: _this2.smartLabel,\n\t            chartContainer: _this2.graphics.container\n\t          }, contextualConfig).attachEventHandlers({\n\t            'click': btnObj.fn,\n\t            tooltext: _this2.standardContexualPeriods[i].description\n\t          });\n\t\n\t          if (self.standardContexualPeriods[i].dateEnd - self.standardContexualPeriods[i].dateStart >= self.minimumBucket) {\n\t            buttonGroup.addSymbol(btnObj.btn);\n\t          }\n\t        };\n\t\n\t        for (var i = 0; i < this.standardContexualPeriods.length; i++) {\n\t          _loop3(i);\n\t        }\n\t      }\n\t\n\t      // creates toolbar\n\t\n\t    }, {\n\t      key: 'createToolbar',\n\t      value: function createToolbar() {\n\t        var buttonGroup,\n\t            toolbar = this.toolbar,\n\t            allButton,\n\t            self = this,\n\t            fromDateLabel,\n\t            group;\n\t\n\t        // initiating the toolbar\n\t        toolbar = new this.HorizontalToolbar({\n\t          paper: this.graphics.paper,\n\t          chart: this.chart,\n\t          smartLabel: this.smartLabel,\n\t          chartContainer: this.graphics.container\n\t        });\n\t        toolbar.setConfig({\n\t          fill: '#fff',\n\t          borderThickness: 0\n\t        });\n\t\n\t        // making group for the extension label\n\t        group = new this.toolbox.ComponentGroup({\n\t          paper: this.graphics.paper,\n\t          chart: this.chart,\n\t          smartLabel: this.smartLabel,\n\t          chartContainer: this.graphics.container\n\t        });\n\t\n\t        // making buttonGroup for the buttons\n\t        buttonGroup = new this.toolbox.ComponentGroup({\n\t          paper: this.graphics.paper,\n\t          chart: this.chart,\n\t          smartLabel: this.smartLabel,\n\t          chartContainer: this.graphics.container\n\t        });\n\t        buttonGroup.setConfig({\n\t          fill: '#fff',\n\t          borderThickness: 0\n\t        });\n\t        group.setConfig({\n\t          fill: '#fff',\n\t          borderThickness: 0\n\t        });\n\t\n\t        // extension label\n\t        fromDateLabel = new this.toolbox.Label('Zoom:', {\n\t          smartLabel: this.smartLabel,\n\t          paper: this.graphics.paper\n\t        }, self.extData.style['label-config']);\n\t        group.addSymbol(fromDateLabel);\n\t\n\t        // 'ALL' button created\n\t        allButton = { fn: function fn() {\n\t            self.clickedId = 'ALL';\n\t            self.globalReactiveModel.lock().prop('x-axis-visible-range-start', self.startDataset).prop('x-axis-visible-range-end', self.endDataset).unlock();\n\t          } };\n\t        allButton.btn = new this.toolbox.Symbol('ALL', true, {\n\t          paper: this.graphics.paper,\n\t          chart: this.chart,\n\t          smartLabel: this.smartLabel,\n\t          chartContainer: this.graphics.container\n\t        }, self.extData.style['all-config']).attachEventHandlers({\n\t          click: allButton.fn,\n\t          tooltext: 'ALL'\n\t        });\n\t\n\t        self.btns['ALL'] = allButton;\n\t\n\t        buttonGroup.addSymbol(allButton.btn);\n\t\n\t        // create all calculated button\n\t        self.createCalculatedButtons(buttonGroup);\n\t\n\t        // create all contextual button\n\t        self.createContextualButtons(buttonGroup);\n\t\n\t        // adding group and button group to toolbar\n\t        toolbar.addComponent(group);\n\t        toolbar.addComponent(buttonGroup);\n\t        this.toolbar = toolbar;\n\t        return toolbar;\n\t      }\n\t    }, {\n\t      key: 'init',\n\t\n\t\n\t      // *********** Extension interface methods *********//\n\t\n\t      /**\n\t      * Fusioncharts life cycle method for extension\n\t      */\n\t      value: function init(require) {\n\t        var instance = this;\n\t        require(['graphics', 'chart', 'canvasConfig', 'MarkerManager', 'reactiveModel', 'globalReactiveModel', 'spaceManagerInstance', 'smartLabel', 'extData', 'chartInstance', function (graphics, chart, canvasConfig, markerManager, reactiveModel, globalReactiveModel, spaceManagerInstance, smartLabel, extData, chartInstance) {\n\t          instance.graphics = graphics;\n\t          instance.chart = chart;\n\t          instance.markerManager = markerManager;\n\t          instance.canvasConfig = canvasConfig;\n\t          instance.reactiveModel = reactiveModel;\n\t          instance.globalReactiveModel = globalReactiveModel;\n\t          instance.spaceManagerInstance = spaceManagerInstance;\n\t          instance.smartLabel = smartLabel;\n\t          instance.extDataUser = extData;\n\t          instance.chartInstance = chartInstance;\n\t        }]);\n\t        instance.endActiveWindow = instance.globalReactiveModel.model['x-axis-visible-range-end'];\n\t        instance.startActiveWindow = instance.globalReactiveModel.model['x-axis-visible-range-start'];\n\t        instance.startDataset = instance.globalReactiveModel.model['x-axis-absolute-range-start'];\n\t        instance.endDataset = instance.globalReactiveModel.model['x-axis-absolute-range-end'];\n\t        instance.timeRules = instance.chartInstance.apiInstance.getComponentStore();\n\t        instance.timeRules = instance.timeRules.getCanvasByIndex(0).composition.impl;\n\t        instance.timeRules = instance.timeRules.getDataAggregator();\n\t        instance.timeRules = instance.timeRules.getAggregationTimeRules();\n\t        instance.timePeriods = instance.processMultipliers(instance.timeRules);\n\t        instance.extData = {\n\t          'disabled': 'false',\n\t          'default-select': 'ALL',\n\t          'posWrtCanvas': 'top',\n\t          'layout': 'inline',\n\t          'alignment': 'left',\n\t          'orientation': 'horizontal',\n\t          'customMultipliers': {\n\t            'millisecond': [1, 500],\n\t            'second': [1, 5, 15, 30],\n\t            'minute': [1, 5, 15, 30],\n\t            'hour': [1, 3, 6, 12],\n\t            'day': [1, 7, 15],\n\t            'month': [1, 3, 6],\n\t            'year': [1, 3, 5]\n\t          },\n\t          'style': {\n\t            'label-config': {\n\t              // --config--\n\t              text: {\n\t                style: {\n\t                  'font-family': '\"Lucida Grande\", sans-serif',\n\t                  'font-size': '13',\n\t                  'fill': '#4b4b4b'\n\t                }\n\t              },\n\t              container: {\n\t                height: 22\n\t              }\n\t            },\n\t            'all-config': {\n\t              // --config--\n\t              fill: '#ffffff',\n\t              labelFill: '#4b4b4b',\n\t              symbolStrokeWidth: '2',\n\t              stroke: '#ced5d4',\n\t              strokeWidth: '1',\n\t              hoverFill: '#f7f7f7',\n\t              height: 22,\n\t              radius: 1,\n\t              margin: {\n\t                right: 5\n\t              },\n\t              btnTextStyle: {\n\t                'fontFamily': '\"Lucida Grande\", sans-serif',\n\t                'fontSize': '13',\n\t                'fill': '#4b4b4b',\n\t                'line-height': '1',\n\t                'letter-spacing': '-0.04em'\n\t              }\n\t            },\n\t            'calculated-config': {\n\t              // --config--\n\t              fill: '#ffffff',\n\t              labelFill: '#4b4b4b',\n\t              symbolStrokeWidth: '2',\n\t              stroke: '#ced5d4',\n\t              strokeWidth: '1',\n\t              hoverFill: '#f7f7f7',\n\t              height: 22,\n\t              radius: 1,\n\t              margin: {\n\t                right: 0\n\t              },\n\t              btnTextStyle: {\n\t                'fontFamily': '\"Lucida Grande\", sans-serif',\n\t                'fontSize': '13',\n\t                'fill': '#4b4b4b',\n\t                'line-height': '1',\n\t                'letter-spacing': '-0.04em'\n\t              }\n\t            },\n\t            'contextual-config-first': {\n\t              fill: '#ffffff',\n\t              labelFill: '#4b4b4b',\n\t              symbolStrokeWidth: '2',\n\t              stroke: '#ced5d4',\n\t              strokeWidth: '1',\n\t              height: 22,\n\t              hoverFill: '#f7f7f7',\n\t              radius: 1,\n\t              margin: {\n\t                right: 0,\n\t                left: 5\n\t              },\n\t              btnTextStyle: {\n\t                'fontFamily': '\"Lucida Grande\", sans-serif',\n\t                'fontSize': '13',\n\t                'fill': '#696969',\n\t                'line-height': '1',\n\t                'letter-spacing': '-0.04em'\n\t              }\n\t            },\n\t            'contextual-config': {\n\t              fill: '#ffffff',\n\t              labelFill: '#4b4b4b',\n\t              symbolStrokeWidth: '2',\n\t              stroke: '#ced5d4',\n\t              strokeWidth: '1',\n\t              height: 22,\n\t              hoverFill: '#f7f7f7',\n\t              radius: 1,\n\t              margin: {\n\t                right: 0,\n\t                left: 0\n\t              },\n\t              btnTextStyle: {\n\t                'fontFamily': '\"Lucida Grande\", sans-serif',\n\t                'fontSize': '13',\n\t                'fill': '#4b4b4b',\n\t                'line-height': '1',\n\t                'letter-spacing': '-0.04em'\n\t              }\n\t            }\n\t          }\n\t        };\n\t        Object.assign(instance.extData, instance.extDataUser);\n\t        instance.customMultipliers = instance.extData.customMultipliers || {\n\t          'millisecond': [1, 500],\n\t          'second': [1, 5, 15, 30],\n\t          'minute': [1, 5, 15, 30],\n\t          'hour': [1, 3, 6, 12],\n\t          'day': [1, 7, 15],\n\t          'month': [1, 3, 6],\n\t          'year': [1, 3]\n\t        };\n\t        instance.clickedId = instance.extData['default-select'] || 'ALL';\n\t        // instance.setActivePeriod(instance.startActiveWindow, instance.endActiveWindow);\n\t        instance.toolbars = [];\n\t        instance.measurement = {};\n\t        instance.flag = true;\n\t\n\t        instance.toolbars.push(instance.createToolbar());\n\t\n\t        instance.globalReactiveModel.onPropsChange(['x-axis-visible-range-start', 'x-axis-visible-range-end'], instance.propsChangeListener);\n\t        return instance;\n\t      }\n\t    }, {\n\t      key: 'getLogicalSpace',\n\t      value: function getLogicalSpace() {\n\t        var availableWidth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._pWidth;\n\t        var availableHeight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._pHeight;\n\t\n\t        // availableWidth /= 2;\n\t        var logicalSpace,\n\t            width = 420,\n\t            // width hardcoded; TODO: make it dynamic\n\t        height = 0,\n\t            i,\n\t            ln;\n\t\n\t        for (i = 0, ln = this.toolbars.length; i < ln; i++) {\n\t          logicalSpace = this.toolbars[i].getLogicalSpace(availableWidth, availableHeight);\n\t          // width = Math.max(logicalSpace.width, width);\n\t          height += logicalSpace.height;\n\t          this.toolbars[i].width = logicalSpace.width;\n\t          this.toolbars[i].height = logicalSpace.height;\n\t        }\n\t        height += this.padding;\n\t        return {\n\t          width: width,\n\t          height: height\n\t        };\n\t      }\n\t    }, {\n\t      key: 'getDefaultGroup',\n\t      value: function getDefaultGroup() {\n\t        return this.parentGroup;\n\t      }\n\t    }, {\n\t      key: 'placeInCanvas',\n\t      value: function placeInCanvas() {\n\t        var _self = this;\n\t        _self.padding = 5;\n\t        _self.spaceManagerInstance.add([{\n\t          name: function name() {\n\t            return 'standard-period-selector-ext';\n\t          },\n\t          ref: function ref(obj) {\n\t            return obj['0'];\n\t          },\n\t          self: function self() {\n\t            return _self;\n\t          },\n\t          priority: function priority() {\n\t            return 2;\n\t          },\n\t          layout: function layout(obj) {\n\t            return obj[_self.extData.layout] || 'inline';\n\t          },\n\t          orientation: [{\n\t            type: function type(obj) {\n\t              return obj[_self.extData.orientation] || 'horizontal';\n\t            },\n\t            position: [{\n\t              type: function type(obj) {\n\t                return obj[_self.extData.posWrtCanvas] || 'top';\n\t              },\n\t              alignment: [{\n\t                type: function type(obj) {\n\t                  return obj[_self.extData.alignment] || 'left';\n\t                },\n\t                dimensions: [function () {\n\t                  var parent = this.getParentComponentGroup();\n\t                  _self._ref = this;\n\t                  return _self.getLogicalSpace(_self._pWidth = parent.getWidth(), _self._pHeight = parent.getHeight());\n\t                }]\n\t              }]\n\t            }]\n\t          }]\n\t        }]);\n\t      }\n\t    }, {\n\t      key: 'setDrawingConfiguration',\n\t      value: function setDrawingConfiguration(x, y, width, height, group) {\n\t        var mes = this.measurement;\n\t        mes.x = x;\n\t        mes.y = y;\n\t        mes.width = width;\n\t        mes.height = height;\n\t\n\t        this.parentGroup = group;\n\t\n\t        return this;\n\t      }\n\t    }, {\n\t      key: 'draw',\n\t\n\t\n\t      // draws extension in the canvas\n\t      value: function draw(x, y, width, height, group) {\n\t        var self = this,\n\t            measurement = self.measurement,\n\t            toolbars = self.toolbars,\n\t            ln,\n\t            i,\n\t            toolbar,\n\t            selectLine,\n\t            contextualObj = self.btns.contextualObj,\n\t            calculatedObj = self.btns.calculatedObj,\n\t            clickedId = self.clickedId,\n\t            activeBtn;\n\t        x = x === undefined ? measurement.x : x;\n\t        y = y === undefined ? measurement.y : y;\n\t        width = width === undefined ? measurement.width : width;\n\t        height = height === undefined ? measurement.height : height;\n\t        group = group === undefined ? this.parentGroup : group;\n\t        if (width && height) {\n\t          for (i = 0, ln = toolbars.length; i < ln; i++) {\n\t            toolbar = toolbars[i];\n\t            toolbar.draw(x, y, group);\n\t          }\n\t        }\n\t\n\t        activeBtn = contextualObj[clickedId] || self.btns[clickedId];\n\t        if (!activeBtn) {\n\t          for (i in calculatedObj) {\n\t            if (calculatedObj[i].shortKey === clickedId) {\n\t              activeBtn = calculatedObj[i];\n\t            }\n\t          }\n\t        }\n\t        this.saveSelectLine = selectLine;\n\t        this.minimumBucket = this.globalReactiveModel.model['minimum-consecutive-datestamp-diff'] * this.globalReactiveModel.model['x-axis-maximum-allowed-ticks'];\n\t        activeBtn && activeBtn.fn && activeBtn.fn();\n\t      }\n\t    }]);\n\t\n\t    return StandardPeriodSelector;\n\t  }();\n\t\n\t  return StandardPeriodSelector;\n\t};\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// standard-period-selector-es5.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 295f957710dc678820ac","'use strict';\nconst StandardPeriodSelector = require('./standard-period-selector');\n\n;(function (env, factory) {\n  if (typeof module === 'object' && module.exports) {\n    module.exports = env.document\n       ? factory(env) : function (win) {\n         if (!win.document) {\n           throw new Error('Window with document not present');\n         }\n         return factory(win, true);\n       };\n  } else {\n    env.StandardPeriodSelector = factory(env, true);\n  }\n})(typeof window !== 'undefined' ? window : this, function (_window, windowExists) {\n  var FC = _window.FusionCharts;\n  FC.register('extension', ['private', 'standard-period-selector', function () {\n    FC.registerComponent('extensions', 'standard-period-selector', StandardPeriodSelector({FusionCharts: FC}));\n  }]);\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tmodule.children = [];\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 1\n// module chunks = 0","'use strict';\n\n/**\n * Class definition of StandardPeriodSelector\n */\n\nmodule.exports = function (dep) {\n  class StandardPeriodSelector {\n    constructor () {\n      /**\n       * @private\n       */\n      var self = this;\n      self.ratio = 8;\n      self.toolbox = FusionCharts.getComponent('api', 'toolbox');\n      self.HorizontalToolbar = self.toolbox.HorizontalToolbar;\n      self.ComponentGroup = self.toolbox.ComponentGroup;\n      self.SymbolStore = self.toolbox.SymbolStore;\n      self.all = 1;\n      self.calculatedPeriods = [];\n      self.startDataset = 0;\n      // self.endDataset = self.globalReactiveModel.model['x-axis-absolute-range-end'];\n      self.startActiveWindow = 0;\n      self.endActiveWindow = 1;\n      self.standardCalculatedPeriods = [];\n      self.standardContexualPeriods = [];\n      self.startPointUnit = 0;\n      self.startPointMultiplier = 0;\n      self.clickedId = 'ALL';\n      self.noCalcButtons = 0;\n      self.minimumBucket = 5184000000;\n      self.toolbar = {};\n      self.btns = {\n        contextualObj: {},\n        calculatedObj: {}\n      };\n\n      self.tdButtons = [\n        {\n          'name': 'YTD',\n          'abbreviation': 'YTD',\n          'parent': 'year',\n          'milliseconds': 31104000000,\n          'description': 'Year to Date'\n        },\n        {\n          'name': 'QTD',\n          'abbreviation': 'QTD',\n          'parent': 'month',\n          'multiplier': 3,\n          'milliseconds': 7776000000,\n          'description': 'Quarter to Date'\n        },\n        {\n          'name': 'MTD',\n          'abbreviation': 'MTD',\n          'parent': 'month',\n          'milliseconds': 2592000000,\n          'description': 'Month to Date'\n        },\n        {\n          'name': 'WTD',\n          'abbreviation': 'WTD',\n          'parent': 'day',\n          'multiplier': 7,\n          'milliseconds': 604800000,\n          'description': 'Week to Date'\n        },\n        {\n          'name': 'Y',\n          'abbreviation': 'Y',\n          'parent': 'day',\n          'milliseconds': 86400000,\n          'description': 'Yesterday'\n        },\n        {\n          'name': 'T',\n          'abbreviation': 'T',\n          'parent': 'day',\n          'milliseconds': 86400000,\n          'description': 'Today'\n        }\n      ];\n      self.config = {\n        anchorPositions: 'right',\n        all: '1',\n        contextual: '1',\n        calculated: '1',\n        tertiaryTimePeriods: {}\n      };\n\n      self.propsChangeListener = (start, end) => {\n        self.startActiveWindow = start[1];\n        self.endActiveWindow = end[1];\n\n        if (!self.updatePending) {\n          self.updatePending = true;\n          setTimeout(function () {\n            self.updatePending = false;\n            self.showApplicableCalculatedButtons();\n            self.heighlightActiveRange();\n          }, 300);\n        }\n      };\n    }\n\n    // ****** Make btns visible ******* /\n    /**\n     * A function to generate the calculated buttons using\n     * the active range and the location of the active range\n     */\n\n    hideAllCalcBtns () {\n      var self = this,\n        calculatedObj = self.btns.calculatedObj,\n        i;\n      for (i in calculatedObj) {\n        calculatedObj[i].btn.hide();\n      }\n    }\n\n    showApplicableCalculatedButtons () {\n      var targetBlock = this.endActiveWindow - this.startDataset,\n        i = 0,\n        j = 0,\n        activeWindow = this.endActiveWindow - this.startActiveWindow,\n        self = this,\n        key,\n        calculatedObj = self.btns.calculatedObj;\n\n      self.hideAllCalcBtns();\n      self.standardCalculatedPeriods = [];\n      for (i = 0; i < self.timePeriods.length; i++) {\n        // checking whether the unit is applicable for the current target block\n        if (targetBlock / self.timePeriods[i].interval >= 1) {\n          // checking whether the unit is of the higher order and only multiplier 1 is applicable\n          if (this.extData['default-select'] === '1' + self.timePeriods[i].abbreviation.single) {\n            this.clickedIdVal = self.timePeriods[i].interval;\n          }\n          if (Math.floor((activeWindow) / self.timePeriods[i].interval) < 1) {\n            // self.show('1' + self.timePeriods[i].abbreviation.single);\n            // self.calculatedObj['1' + self.timePeriods[i].abbreviation.single].show();\n            self.standardCalculatedPeriods.push({\n              'name': self.timePeriods[i].name,\n              'abbreviation': self.timePeriods[i].abbreviation.single,\n              'multipliers': [1]\n            });\n          } else { // if the unit is of the order of the target block and calculating the multipliers\n            self.standardCalculatedPeriods.push({\n              'name': self.timePeriods[i].name,\n              'abbreviation': self.timePeriods[i].abbreviation.single,\n              'multipliers': []\n            });\n            // calculating and populating the applicable multpliers of each unit\n            for (j = 0; j < self.timePeriods[i].multipliers.length; j++) {\n              if (activeWindow / self.ratio < self.timePeriods[i].multipliers[j] * self.timePeriods[i].interval &&\n                (self.timePeriods[i].multipliers[j] * self.timePeriods[i].interval) > self.minimumBucket) {\n                self.standardCalculatedPeriods[self.standardCalculatedPeriods.length - 1].multipliers.push(\n                  self.timePeriods[i].multipliers[j]\n                  );\n              }\n            }\n          }\n        }\n      }\n\n      for (i = 0; i < self.standardCalculatedPeriods.length; i++) {\n        for (j = 0; j < self.standardCalculatedPeriods[i].multipliers.length; j++) {\n          key = self.standardCalculatedPeriods[i].multipliers[j] +\n            self.standardCalculatedPeriods[i].name;\n          calculatedObj[key].btn && calculatedObj[key].btn.show();\n        }\n      }\n      self.toolbar && self.toolbar.redraw();\n    }\n\n    // ******** React on active property change ****\n\n    heighlightActiveRange () {\n      // first check w.r.t contextual btns then others\n      var sps = this,\n        selectLine = sps.saveSelectLine,\n        boundElement,\n        clickedId = sps.clickedId,\n        bBox,\n        x1,\n        x2,\n        y2,\n        activeBtn,\n        contextualObj = sps.btns.contextualObj,\n        calculatedObj = sps.btns.calculatedObj;\n\n      // if the heighliter is not createcd create it\n      if (!selectLine) {\n        selectLine = sps.saveSelectLine || (sps.saveSelectLine = sps.graphics.paper.path({\n          'stroke': '#c95a5a',\n          'stroke-width': '2px'\n        }).toFront());\n      }\n\n      activeBtn = contextualObj[clickedId] || calculatedObj[clickedId] || sps.btns[clickedId];\n\n      if (activeBtn) {\n        boundElement = activeBtn.btn.svgElems.node;\n        bBox = boundElement.getBBox();\n        x1 = bBox.x;\n        x2 = x1 + bBox.width;\n        y2 = bBox.y + bBox.height;\n        selectLine.show().attr({\n          path: ['M', x1 - 0.5, y2 - 0.5, 'L', x2 + 0.5, y2 - 0.5]\n        });\n      } else {\n        selectLine.hide();\n      }\n    }\n\n    // *********** Drzaw the btns initialy ***** //\n\n    // adds multipliers to the timerules object\n    processMultipliers (timeArr) {\n      var self = this;\n      for (let i = 0; i < timeArr.length; i++) {\n        let len = timeArr[i].possibleFactors.length,\n          timeName = timeArr[i] && timeArr[i].name,\n          timeObj = timeArr && timeArr[i],\n          customMultipliers = self && self.customMultipliers || {};\n        timeObj.multipliers = [];\n        if (customMultipliers[timeName]) {\n          timeObj.multipliers = customMultipliers[timeName];\n        } else if (len === 1) {\n          timeObj.multipliers.push(timeObj.possibleFactors[0]);\n        } else if (len === 2) {\n          timeObj.multipliers.push(timeObj.possibleFactors[0]);\n          timeObj.multipliers.push(timeObj.possibleFactors[len - 1]);\n        } else {\n          timeObj.multipliers.push(timeObj.possibleFactors[0]);\n          timeObj.multipliers.push(Math.floor(timeObj.possibleFactors[len - 1] / 2));\n          timeObj.multipliers.push(timeObj.possibleFactors[len - 1]);\n        }\n      }\n      return timeArr;\n    }\n\n    createCalculatedButtons (buttonGroup) {\n      var self = this,\n        btnCalc,\n        calculatedObj = self.btns.calculatedObj,\n        btnObj;\n      for (let i = self.timePeriods.length - 1; i >= 0; i--) {\n        for (let j = self.timePeriods[i].multipliers.length - 1; j >= 0; j--) {\n          let keyAbb = self.timePeriods[i].multipliers[j] + self.timePeriods[i].abbreviation.single,\n            keyName = self.timePeriods[i].multipliers[j] + self.timePeriods[i].name;\n\n          btnObj = calculatedObj[keyName] = {\n            fn: function () {\n              self.clickedId = keyName;\n              self.globalReactiveModel.model['x-axis-visible-range-start'] = self.endActiveWindow -\n              (self.timePeriods[i].multipliers[j] * self.timePeriods[i].interval);\n            },\n            shortKey: keyAbb\n          };\n\n          btnCalc = new this.toolbox.Symbol(keyAbb, true, {\n            paper: this.graphics.paper,\n            chart: this.chart,\n            smartLabel: this.smartLabel,\n            chartContainer: this.graphics.container\n          }, self.extData.style['calculated-config']).attachEventHandlers({\n            'click': btnObj.fn,\n            tooltext: self.timePeriods[i].multipliers[j] + ' ' + self.timePeriods[i].description\n          });\n          btnObj.btn = btnCalc;\n          buttonGroup.addSymbol(btnCalc);\n          // calculatedButtons.hide();\n        }\n      }\n    }\n\n    /**\n     * A function to generate the contextual buttons using\n     * the end point of the time-scale\n     */\n    generateCtxBtnList () {\n      // generating an array with applicable TD buttons\n      var buttons = [],\n        i = 0,\n        endStamp = this.globalReactiveModel.model['x-axis-absolute-range-end'],\n        dateStart = endStamp - 2,\n        dateEnd = endStamp,\n        relativeTDButton = {};\n      for (; i < this.tdButtons.length; i++) {\n        dateStart = new Date(endStamp);\n        if (this.tdButtons[i].name === 'YTD') {\n          dateStart.setMonth(0);\n          dateStart.setDate(1);\n          dateStart.setHours(0);\n          dateStart.setMinutes(0);\n          dateStart.setSeconds(0);\n        } else if (this.tdButtons[i].name === 'MTD') {\n          dateStart.setDate(1);\n          dateStart.setHours(0);\n          dateStart.setMinutes(0);\n          dateStart.setSeconds(0);\n        } else if (this.tdButtons[i].name === 'QTD') {\n          dateStart.setMonth(11 - (dateStart.getMonth() % 4));\n          dateStart.setDate(0);\n          dateStart.setHours(0);\n          dateStart.setMinutes(0);\n          dateStart.setSeconds(0);\n        } else if (this.tdButtons[i].name === 'WTD') {\n          dateStart.setDate(dateStart.getDate() - dateStart.getDay());\n          dateStart.setHours(0);\n          dateStart.setMinutes(0);\n          dateStart.setSeconds(0);\n        } else if (this.tdButtons[i].name === 'Y') {\n          dateStart.setHours(0);\n          dateStart.setMinutes(0);\n          dateStart.setSeconds(0);\n          dateStart -= 86400000;\n        } else if (this.tdButtons[i].name === 'T') {\n          dateStart.setHours(0);\n          dateStart.setMinutes(0);\n          dateStart.setSeconds(0);\n          if (+this.endDataset === +dateStart) {\n            dateStart = +dateStart - 86400000;\n          }\n        }\n\n        if (dateEnd < dateStart && (dateEnd - dateStart) < this.minimumBucket) {\n          continue;\n        } else {\n          this.tdButtons[i].dateStart = dateStart.valueOf();\n          this.tdButtons[i].dateEnd = dateEnd.valueOf();\n          buttons.push(this.tdButtons[i]);\n        }\n      }\n      relativeTDButton.milliseconds = Infinity;\n      for (i = 0; i < this.tdButtons.length; i++) {\n        if (Math.abs(this.tdButtons[i].milliseconds - (this.endActiveWindow - this.startActiveWindow)) < relativeTDButton.milliseconds) {\n          relativeTDButton.milliseconds = this.tdButtons[i].milliseconds;\n          relativeTDButton.name = this.tdButtons[i].abbreviation;\n        }\n      }\n\n      this.standardContexualPeriods = buttons;\n    }\n\n    createContextualButtons (buttonGroup) {\n      var contextualButtons = [],\n        self = this,\n        contextualConfig,\n        contextualObj = self.btns.contextualObj,\n        btnObj,\n        keyName;\n      self.generateCtxBtnList();\n      for (let i = 0; i < this.standardContexualPeriods.length; i++) {\n        contextualConfig = (i === 0) ? self.extData.style['contextual-config-first'] || {\n          fill: '#ffffff',\n          labelFill: '#696969',\n          symbolStrokeWidth: '2',\n          stroke: '#ced5d4',\n          strokeWidth: '1',\n          height: 22,\n          hoverFill: '#ced5d4',\n          radius: 1,\n          margin: {\n            right: 0,\n            left: 5\n          },\n          btnTextStyle: {\n            'fontFamily': '\"Lucida Grande\", sans-serif',\n            'fontSize': '13',\n            'fill': '#696969',\n            'line-height': '1',\n            'letter-spacing': '-0.04em'\n          }\n        } : self.extData.style['contextual-config'] || {\n          fill: '#ffffff',\n          labelFill: '#696969',\n          symbolStrokeWidth: '2',\n          stroke: '#ced5d4',\n          strokeWidth: '1',\n          height: 22,\n          hoverFill: '#ced5d4',\n          radius: 1,\n          margin: {\n            right: 0,\n            left: 0\n          },\n          btnTextStyle: {\n            'fontFamily': '\"Lucida Grande\", sans-serif',\n            'fontSize': '13',\n            'fill': '#696969',\n            'line-height': '1',\n            'letter-spacing': '-0.04em'\n          }\n        };\n        keyName = this.standardContexualPeriods[i].abbreviation;\n        btnObj = contextualObj[keyName] = {\n          fn: function () {\n            self.clickedId = self.standardContexualPeriods[i].abbreviation;\n            self.globalReactiveModel\n              .lock()\n              .prop('x-axis-visible-range-start', self.standardContexualPeriods[i].dateStart)\n              .prop('x-axis-visible-range-end', self.standardContexualPeriods[i].dateEnd)\n              .unlock();\n          }\n        };\n\n        btnObj.btn = new this.toolbox.Symbol(this.standardContexualPeriods[i].abbreviation, true, {\n          paper: this.graphics.paper,\n          chart: this.chart,\n          smartLabel: this.smartLabel,\n          chartContainer: this.graphics.container\n        }, contextualConfig)\n          .attachEventHandlers({\n            'click': btnObj.fn,\n            tooltext: this.standardContexualPeriods[i].description\n          });\n\n        if (self.standardContexualPeriods[i].dateEnd - self.standardContexualPeriods[i].dateStart >= self.minimumBucket) {\n          buttonGroup.addSymbol(btnObj.btn);\n        }\n      }\n    }\n\n    // creates toolbar\n    createToolbar () {\n      var buttonGroup,\n        toolbar = this.toolbar,\n        allButton,\n        self = this,\n        fromDateLabel,\n        group;\n\n      // initiating the toolbar\n      toolbar = new this.HorizontalToolbar({\n        paper: this.graphics.paper,\n        chart: this.chart,\n        smartLabel: this.smartLabel,\n        chartContainer: this.graphics.container\n      });\n      toolbar.setConfig({\n        fill: '#fff',\n        borderThickness: 0\n      });\n\n      // making group for the extension label\n      group = new this.toolbox.ComponentGroup({\n        paper: this.graphics.paper,\n        chart: this.chart,\n        smartLabel: this.smartLabel,\n        chartContainer: this.graphics.container\n      });\n\n      // making buttonGroup for the buttons\n      buttonGroup = new this.toolbox.ComponentGroup({\n        paper: this.graphics.paper,\n        chart: this.chart,\n        smartLabel: this.smartLabel,\n        chartContainer: this.graphics.container\n      });\n      buttonGroup.setConfig({\n        fill: '#fff',\n        borderThickness: 0\n      });\n      group.setConfig({\n        fill: '#fff',\n        borderThickness: 0\n      });\n\n      // extension label\n      fromDateLabel = new this.toolbox.Label('Zoom:', {\n        smartLabel: this.smartLabel,\n        paper: this.graphics.paper\n      }, self.extData.style['label-config']);\n      group.addSymbol(fromDateLabel);\n\n      // 'ALL' button created\n      allButton = {fn: function () {\n        self.clickedId = 'ALL';\n        self.globalReactiveModel\n          .lock()\n          .prop('x-axis-visible-range-start', self.startDataset)\n          .prop('x-axis-visible-range-end', self.endDataset)\n          .unlock();\n      }};\n      allButton.btn = new this.toolbox.Symbol('ALL', true, {\n        paper: this.graphics.paper,\n        chart: this.chart,\n        smartLabel: this.smartLabel,\n        chartContainer: this.graphics.container\n      }, self.extData.style['all-config']).attachEventHandlers({\n        click: allButton.fn,\n        tooltext: 'ALL'\n      });\n\n      self.btns['ALL'] = allButton;\n\n      buttonGroup.addSymbol(allButton.btn);\n\n      // create all calculated button\n      self.createCalculatedButtons(buttonGroup);\n\n      // create all contextual button\n      self.createContextualButtons(buttonGroup);\n\n      // adding group and button group to toolbar\n      toolbar.addComponent(group);\n      toolbar.addComponent(buttonGroup);\n      this.toolbar = toolbar;\n      return toolbar;\n    };\n\n    // *********** Extension interface methods *********//\n\n      /**\n     * Fusioncharts life cycle method for extension\n     */\n    init (require) {\n      var instance = this;\n      require([\n        'graphics',\n        'chart',\n        'canvasConfig',\n        'MarkerManager',\n        'reactiveModel',\n        'globalReactiveModel',\n        'spaceManagerInstance',\n        'smartLabel',\n        'extData',\n        'chartInstance',\n        function (\n              graphics,\n              chart,\n              canvasConfig,\n              markerManager,\n              reactiveModel,\n              globalReactiveModel,\n              spaceManagerInstance,\n              smartLabel,\n              extData,\n              chartInstance) {\n          instance.graphics = graphics;\n          instance.chart = chart;\n          instance.markerManager = markerManager;\n          instance.canvasConfig = canvasConfig;\n          instance.reactiveModel = reactiveModel;\n          instance.globalReactiveModel = globalReactiveModel;\n          instance.spaceManagerInstance = spaceManagerInstance;\n          instance.smartLabel = smartLabel;\n          instance.extDataUser = extData;\n          instance.chartInstance = chartInstance;\n        }\n      ]);\n      instance.endActiveWindow = instance.globalReactiveModel.model['x-axis-visible-range-end'];\n      instance.startActiveWindow = instance.globalReactiveModel.model['x-axis-visible-range-start'];\n      instance.startDataset = instance.globalReactiveModel.model['x-axis-absolute-range-start'];\n      instance.endDataset = instance.globalReactiveModel.model['x-axis-absolute-range-end'];\n      instance.timeRules = instance.chartInstance.apiInstance.getComponentStore();\n      instance.timeRules = instance.timeRules.getCanvasByIndex(0).composition.impl;\n      instance.timeRules = instance.timeRules.getDataAggregator();\n      instance.timeRules = instance.timeRules.getAggregationTimeRules();\n      instance.timePeriods = instance.processMultipliers(instance.timeRules);\n      instance.extData = {\n        'disabled': 'false',\n        'default-select': 'ALL',\n        'posWrtCanvas': 'top',\n        'layout': 'inline',\n        'alignment': 'left',\n        'orientation': 'horizontal',\n        'customMultipliers': {\n          'millisecond': [1, 500],\n          'second': [1, 5, 15, 30],\n          'minute': [1, 5, 15, 30],\n          'hour': [1, 3, 6, 12],\n          'day': [1, 7, 15],\n          'month': [1, 3, 6],\n          'year': [1, 3, 5]\n        },\n        'style': {\n          'label-config': {\n            // --config--\n            text: {\n              style: {\n                'font-family': '\"Lucida Grande\", sans-serif',\n                'font-size': '13',\n                'fill': '#4b4b4b'\n              }\n            },\n            container: {\n              height: 22\n            }\n          },\n          'all-config': {\n            // --config--\n            fill: '#ffffff',\n            labelFill: '#4b4b4b',\n            symbolStrokeWidth: '2',\n            stroke: '#ced5d4',\n            strokeWidth: '1',\n            hoverFill: '#f7f7f7',\n            height: 22,\n            radius: 1,\n            margin: {\n              right: 5\n            },\n            btnTextStyle: {\n              'fontFamily': '\"Lucida Grande\", sans-serif',\n              'fontSize': '13',\n              'fill': '#4b4b4b',\n              'line-height': '1',\n              'letter-spacing': '-0.04em'\n            }\n          },\n          'calculated-config': {\n            // --config--\n            fill: '#ffffff',\n            labelFill: '#4b4b4b',\n            symbolStrokeWidth: '2',\n            stroke: '#ced5d4',\n            strokeWidth: '1',\n            hoverFill: '#f7f7f7',\n            height: 22,\n            radius: 1,\n            margin: {\n              right: 0\n            },\n            btnTextStyle: {\n              'fontFamily': '\"Lucida Grande\", sans-serif',\n              'fontSize': '13',\n              'fill': '#4b4b4b',\n              'line-height': '1',\n              'letter-spacing': '-0.04em'\n            }\n          },\n          'contextual-config-first': {\n            fill: '#ffffff',\n            labelFill: '#4b4b4b',\n            symbolStrokeWidth: '2',\n            stroke: '#ced5d4',\n            strokeWidth: '1',\n            height: 22,\n            hoverFill: '#f7f7f7',\n            radius: 1,\n            margin: {\n              right: 0,\n              left: 5\n            },\n            btnTextStyle: {\n              'fontFamily': '\"Lucida Grande\", sans-serif',\n              'fontSize': '13',\n              'fill': '#696969',\n              'line-height': '1',\n              'letter-spacing': '-0.04em'\n            }\n          },\n          'contextual-config': {\n            fill: '#ffffff',\n            labelFill: '#4b4b4b',\n            symbolStrokeWidth: '2',\n            stroke: '#ced5d4',\n            strokeWidth: '1',\n            height: 22,\n            hoverFill: '#f7f7f7',\n            radius: 1,\n            margin: {\n              right: 0,\n              left: 0\n            },\n            btnTextStyle: {\n              'fontFamily': '\"Lucida Grande\", sans-serif',\n              'fontSize': '13',\n              'fill': '#4b4b4b',\n              'line-height': '1',\n              'letter-spacing': '-0.04em'\n            }\n          }\n        }\n      };\n      Object.assign(instance.extData, instance.extDataUser);\n      instance.customMultipliers = instance.extData.customMultipliers || {\n        'millisecond': [1, 500],\n        'second': [1, 5, 15, 30],\n        'minute': [1, 5, 15, 30],\n        'hour': [1, 3, 6, 12],\n        'day': [1, 7, 15],\n        'month': [1, 3, 6],\n        'year': [1, 3]\n      };\n      instance.clickedId = instance.extData['default-select'] || 'ALL';\n      // instance.setActivePeriod(instance.startActiveWindow, instance.endActiveWindow);\n      instance.toolbars = [];\n      instance.measurement = {};\n      instance.flag = true;\n\n      instance.toolbars.push(instance.createToolbar());\n\n      instance.globalReactiveModel.onPropsChange(['x-axis-visible-range-start', 'x-axis-visible-range-end'], instance.propsChangeListener);\n      return instance;\n    };\n\n    getLogicalSpace (availableWidth = this._pWidth, availableHeight = this._pHeight) {\n      // availableWidth /= 2;\n      var logicalSpace,\n        width = 420, // width hardcoded; TODO: make it dynamic\n        height = 0,\n        i,\n        ln;\n\n      for (i = 0, ln = this.toolbars.length; i < ln; i++) {\n        logicalSpace = this.toolbars[i].getLogicalSpace(availableWidth, availableHeight);\n        // width = Math.max(logicalSpace.width, width);\n        height += logicalSpace.height;\n        this.toolbars[i].width = logicalSpace.width;\n        this.toolbars[i].height = logicalSpace.height;\n      }\n      height += this.padding;\n      return {\n        width: width,\n        height: height\n      };\n    };\n\n    getDefaultGroup () {\n      return this.parentGroup;\n    }\n\n    placeInCanvas () {\n      var self = this;\n      self.padding = 5;\n      self.spaceManagerInstance.add([{\n        name: function () {\n          return 'standard-period-selector-ext';\n        },\n        ref: function (obj) {\n          return obj['0'];\n        },\n        self: function () {\n          return self;\n        },\n        priority: function () {\n          return 2;\n        },\n        layout: function (obj) {\n          return obj[self.extData.layout] || 'inline';\n        },\n        orientation: [{\n          type: function (obj) {\n            return obj[self.extData.orientation] || 'horizontal';\n          },\n          position: [{\n            type: function (obj) {\n              return obj[self.extData.posWrtCanvas] || 'top';\n            },\n            alignment: [{\n              type: function (obj) {\n                return obj[self.extData.alignment] || 'left';\n              },\n              dimensions: [function () {\n                var parent = this.getParentComponentGroup();\n                self._ref = this;\n                return self.getLogicalSpace((self._pWidth = parent.getWidth()), (self._pHeight = parent.getHeight()));\n              }]\n            }]\n          }]\n        }]\n      }]);\n    };\n\n    setDrawingConfiguration (x, y, width, height, group) {\n      var mes = this.measurement;\n      mes.x = x;\n      mes.y = y;\n      mes.width = width;\n      mes.height = height;\n\n      this.parentGroup = group;\n\n      return this;\n    };\n\n    // draws extension in the canvas\n    draw (x, y, width, height, group) {\n      var self = this,\n        measurement = self.measurement,\n        toolbars = self.toolbars,\n        ln,\n        i,\n        toolbar,\n        selectLine,\n        contextualObj = self.btns.contextualObj,\n        calculatedObj = self.btns.calculatedObj,\n        clickedId = self.clickedId,\n        activeBtn;\n      x = x === undefined ? measurement.x : x;\n      y = y === undefined ? measurement.y : y;\n      width = width === undefined ? measurement.width : width;\n      height = height === undefined ? measurement.height : height;\n      group = group === undefined ? this.parentGroup : group;\n      if (width && height) {\n        for (i = 0, ln = toolbars.length; i < ln; i++) {\n          toolbar = toolbars[i];\n          toolbar.draw(x, y, group);\n        }\n      }\n\n      activeBtn = contextualObj[clickedId] || self.btns[clickedId];\n      if (!activeBtn) {\n        for (i in calculatedObj) {\n          if (calculatedObj[i].shortKey === clickedId) {\n            activeBtn = calculatedObj[i];\n          }\n        }\n      }\n      this.saveSelectLine = selectLine;\n      this.minimumBucket = this.globalReactiveModel.model['minimum-consecutive-datestamp-diff'] * this.globalReactiveModel.model['x-axis-maximum-allowed-ticks'];\n      activeBtn && activeBtn.fn && activeBtn.fn();\n    };\n  }\n  return StandardPeriodSelector;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/standard-period-selector.js"],"sourceRoot":""}
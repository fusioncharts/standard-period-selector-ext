{"version":3,"sources":["webpack:///standard-period-selector-es5.min.js","webpack:///webpack/bootstrap c8b35779f911ed0d4606","webpack:///./src/index.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/standard-period-selector.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_typeof","Symbol","iterator","obj","constructor","prototype","StandardPeriodSelector","window","stPS","env","factory","document","win","Error","undefined","_window","windowExists","FC","FusionCharts","register","registerComponent","webpackPolyfill","deprecate","paths","children","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","dep","this","ratio","toolbox","getComponent","HorizontalToolbar","ComponentGroup","SymbolStore","all","calculatedPeriods","startDataset","startActiveWindow","endActiveWindow","standardCalculatedPeriods","standardContexualPeriods","startPointUnit","startPointMultiplier","clickedId","noCalcButtons","calculatedButtonObj","minimumBucket","tdButtons","name","abbreviation","parent","milliseconds","description","multiplier","config","anchorPositions","contextual","calculated","tertiaryTimePeriods","value","targetBlock","j","activeWindow","count","self","timePeriods","interval","Math","floor","push","single","multipliers","Infinity","buttons","endStamp","globalReactiveModel","model","dateStart","dateEnd","relativeTDButton","Date","setMonth","setDate","setHours","setMinutes","setSeconds","getMonth","getDate","getDay","endDataset","valueOf","abs","timeArr","len","possibleFactors","timeName","timeObj","customMultipliers","extData","a","b","start","end","arguments","periodButtonClicked","generateCalculatedButtons","generateContextualButtons","require","propsHandler","flag","lastDisposed","launchedPropsHandler","propsStart","propsEnd","setTimeout","bind","setActivePeriod","cantDispose","toolbar","dispose","toolbars","pop","createToolbar","getLogicalSpace","draw","xAxis","yAxis","graphics","chart","dataset","plotManager","canvasConfig","markerManager","reactiveModel","spaceManagerInstance","smartLabel","chartInstance","timeRules","apiInstance","getComponentStore","getCanvasByIndex","composition","impl","getDataAggregator","getAggregationTimeRules","processMultipliers","measurement","onPropsChange","unigroup","calculatedButtons","contextualButtons","allButton","startMultiplier","deductor","contextualConfig","fromDateLabel","group","_this","deductorAr","paper","chartContainer","container","UniSelectComponentGroup","setConfig","fill","borderThickness","Label","style","addSymbol","attachEventHandlers","click","tooltext","hide","_loop","_loop3","keyAbb","show","_loop2","x","y","rad","w","h","padX","padY","x1","x2","y1","y2","addComponent","logicalSpace","ln","availableWidth","_pWidth","availableHeight","_pHeight","width","height","padding","parentGroup","add","ref","priority","layout","orientation","type","position","posWrtCanvas","alignment","dimensions","getParentComponentGroup","_ref","getWidth","getHeight","mes","symbolList","boundElement","bBox","selectLine","saveSelectLine","path","stroke","stroke-width","toFront","componentGroups","ii","symbol","getBoundElement","getBBox","attr"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDMM,SAASI,EAAQD,EAASH,IE5ChC,SAAAI,GAAA,YFgDC,IAAIO,GAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUC,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXF,SAAyBE,EAAIC,cAAgBH,QAAUE,IAAQF,OAAOI,UAAY,eAAkBF,IE/CjQG,EAAyBjB,EAAQ,EAEvCkB,QAAOC,KAAO,GAAIF,GAEjB,SAAWG,EAAKC,GACO,WAAlBV,EAAOP,IAAuBA,EAAOD,QACvCC,EAAOD,QAAUiB,EAAIE,SAChBD,EAAQD,GAAO,SAAUG,GACzB,IAAKA,EAAID,SACP,KAAM,IAAIE,OAAM,mCAElB,OAAOH,GAAQE,GAAK,IAGzBH,EAAIH,uBAAyBI,EAAQD,GAAK,IAEzB,mBAAXF,QAAyBA,OAAhCO,OAA+C,SAAUC,EAASC,GACnE,GAAIC,GAAKF,EAAQG,YACjBD,GAAGE,SAAS,aAAc,UAAW,2BAA4B,WAC/DF,EAAGG,kBAAkB,aAAc,2BAA4Bd,GAAwBY,aAAcD,YFmD3ErB,KAAKJ,EAASH,EAAoB,GAAGI,KAI7D,SAASA,EAAQD,GG3EvBC,EAAAD,QAAA,SAAAC,GAQA,MAPAA,GAAA4B,kBACA5B,EAAA6B,UAAA,aACA7B,EAAA8B,SAEA9B,EAAA+B,YACA/B,EAAA4B,gBAAA,GAEA5B,IHmFM,SAASA,EAAQD,GI3FvB,YJqGC,SAASiC,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAFhH,GAAIC,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAAiB,MAAO,UAAUR,EAAae,EAAYC,GAAiJ,MAA9HD,IAAYZ,EAAiBH,EAAYtB,UAAWqC,GAAiBC,GAAab,EAAiBH,EAAagB,GAAqBhB,KI7FjiBlC,GAAOD,QAAU,SAAUoD,GAAK,GACxBtC,GADwB,WAE5B,QAAAA,KAAemB,EAAAoB,KAAAvC,GAIbuC,KAAKC,MAAQ,EACbD,KAAKE,QAAU7B,aAAa8B,aAAa,MAAO,WAChDH,KAAKI,kBAAoBJ,KAAKE,QAAQE,kBACtCJ,KAAKK,eAAiBL,KAAKE,QAAQG,eACnCL,KAAKM,YAAcN,KAAKE,QAAQI,YAChCN,KAAKO,IAAM,EACXP,KAAKQ,qBACLR,KAAKS,aAAe,EAEpBT,KAAKU,kBAAoB,EACzBV,KAAKW,gBAAkB,EACvBX,KAAKY,6BACLZ,KAAKa,4BACLb,KAAKc,eAAiB,EACtBd,KAAKe,qBAAuB,EAC5Bf,KAAKgB,UAAY,MACjBhB,KAAKiB,cAAgB,EACrBjB,KAAKkB,uBACLlB,KAAKmB,cAAgB,EACrBnB,KAAKoB,YAEDC,KAAQ,MACRC,aAAgB,MAChBC,OAAU,OACVC,aAAgB,QAChBC,YAAe,iBAGfJ,KAAQ,MACRC,aAAgB,MAChBC,OAAU,QACVG,WAAc,EACdF,aAAgB,OAChBC,YAAe,oBAGfJ,KAAQ,MACRC,aAAgB,MAChBC,OAAU,QACVC,aAAgB,OAChBC,YAAe,kBAGfJ,KAAQ,MACRC,aAAgB,MAChBC,OAAU,MACVG,WAAc,EACdF,aAAgB,OAChBC,YAAe,iBAGfJ,KAAQ,IACRC,aAAgB,IAChBC,OAAU,MACVC,aAAgB,MAChBC,YAAe,cAGfJ,KAAQ,IACRC,aAAgB,IAChBC,OAAU,MACVC,aAAgB,MAChBC,YAAe,UAGnBzB,KAAK2B,QACHC,gBAAiB,QACjBrB,IAAK,IACLsB,WAAY,IACZC,WAAY,IACZC,wBA5EwB,MAAA/C,GAAAvB,IAAAmC,IAAA,4BAAAoC,MAAA,WAqF1B,GAAIC,GAAcjC,KAAKW,gBAAkBX,KAAKS,aAC5CrB,EAAI,EACJ8C,EAAI,EACJC,EAAenC,KAAKW,gBAAkBX,KAAKU,kBAC3C0B,EAAQ,EACRC,EAAOrC,IAET,KADAqC,EAAKzB,6BACAxB,EAAI,EAAGA,EAAIiD,EAAKC,YAAYjD,OAAQD,IAEvC,GAAI6C,EAAcI,EAAKC,YAAYlD,GAAGmD,UAAY,EAEhD,GAAIC,KAAKC,MAAON,EAAgBE,EAAKC,YAAYlD,GAAGmD,UAAY,EAC9DF,EAAKzB,0BAA0B8B,MAC7BpB,aAAgBe,EAAKC,YAAYlD,GAAGkC,aAAaqB,OACjDlB,YAAeY,EAAKC,YAAYlD,GAAGqC,YACnCD,aAAgBa,EAAKC,YAAYlD,GAAGmD,SACpClB,KAAQgB,EAAKC,YAAYlD,GAAGiC,KAC5BuB,aAAgB,SAWlB,KARAP,EAAKzB,0BAA0B8B,MAC7BpB,aAAgBe,EAAKC,YAAYlD,GAAGkC,aAAaqB,OACjDlB,YAAeY,EAAKC,YAAYlD,GAAGqC,YACnCD,aAAgBa,EAAKC,YAAYlD,GAAGmD,SACpClB,KAAQgB,EAAKC,YAAYlD,GAAGiC,KAC5BuB,iBAGGV,EAAI,EAAGA,EAAIG,EAAKC,YAAYlD,GAAGwD,YAAYvD,OAAQ6C,IAClDC,EAAeE,EAAKpC,MAAQoC,EAAKC,YAAYlD,GAAGwD,YAAYV,GAAKG,EAAKC,YAAYlD,GAAGmD,UACtFF,EAAKC,YAAYlD,GAAGwD,YAAYV,GAAKG,EAAKC,YAAYlD,GAAGmD,SAAYF,EAAKlB,eAC3EkB,EAAKzB,0BAA0ByB,EAAKzB,0BAA0BvB,OAAS,GAAGuD,YAAYF,KACpFL,EAAKC,YAAYlD,GAAGwD,YAAYV,GAQ5C,KADAlC,KAAKiB,cAAgB4B,IAChBzD,EAAI,EAAGA,EAAIY,KAAKY,0BAA0BvB,OAAQD,IACrD,IAAK8C,EAAI,EAAGA,EAAIlC,KAAKY,0BAA0BxB,GAAGwD,YAAYvD,OAAQ6C,MAClEE,EACEpC,KAAKiB,cAAgB7B,IACvBY,KAAKiB,cAAgB7B,GAEnBgD,GAAS,IACXpC,KAAKe,qBAAuBmB,EAC5BlC,KAAKc,eAAiB1B,MArIFQ,IAAA,4BAAAoC,MAAA,WAyJ1B,IANA,GAAIc,MACF1D,EAAI,EACJ2D,EAAW/C,KAAKgD,oBAAoBC,MAAM,6BAC1CC,EAAYH,EAAW,EACvBI,EAAUJ,EACVK,KACKhE,EAAIY,KAAKoB,UAAU/B,OAAQD,IAChC8D,EAAY,GAAIG,MAAKN,GACU,QAA3B/C,KAAKoB,UAAUhC,GAAGiC,MACpB6B,EAAUI,SAAS,GACnBJ,EAAUK,QAAQ,GAClBL,EAAUM,SAAS,GACnBN,EAAUO,WAAW,GACrBP,EAAUQ,WAAW,IACe,QAA3B1D,KAAKoB,UAAUhC,GAAGiC,MAC3B6B,EAAUK,QAAQ,GAClBL,EAAUM,SAAS,GACnBN,EAAUO,WAAW,GACrBP,EAAUQ,WAAW,IACe,QAA3B1D,KAAKoB,UAAUhC,GAAGiC,MAC3B6B,EAAUI,SAAS,GAAMJ,EAAUS,WAAa,GAChDT,EAAUK,QAAQ,GAClBL,EAAUM,SAAS,GACnBN,EAAUO,WAAW,GACrBP,EAAUQ,WAAW,IACe,QAA3B1D,KAAKoB,UAAUhC,GAAGiC,MAC3B6B,EAAUK,QAAQL,EAAUU,UAAYV,EAAUW,UAClDX,EAAUM,SAAS,GACnBN,EAAUO,WAAW,GACrBP,EAAUQ,WAAW,IACe,MAA3B1D,KAAKoB,UAAUhC,GAAGiC,MAC3B6B,EAAUM,SAAS,GACnBN,EAAUO,WAAW,GACrBP,EAAUQ,WAAW,GACrBR,GAAa,OACuB,MAA3BlD,KAAKoB,UAAUhC,GAAGiC,OAC3B6B,EAAUM,SAAS,GACnBN,EAAUO,WAAW,GACrBP,EAAUQ,WAAW,IAChB1D,KAAK8D,cAAgBZ,IACxBA,GAAaA,EAAY,QAIzBC,EAAUD,IAGZlD,KAAKoB,UAAUhC,GAAG8D,UAAYA,EAAUa,UACxC/D,KAAKoB,UAAUhC,GAAG+D,QAAUA,EAAQY,UACpCjB,EAAQJ,KAAK1C,KAAKoB,UAAUhC,IAIhC,KADAgE,EAAiB5B,aAAeqB,IAC3BzD,EAAI,EAAGA,EAAIY,KAAKoB,UAAU/B,OAAQD,IACjCoD,KAAKwB,IAAIhE,KAAKoB,UAAUhC,GAAGoC,cAAgBxB,KAAKW,gBAAkBX,KAAKU,oBAAsB0C,EAAiB5B,eAChH4B,EAAiB5B,aAAexB,KAAKoB,UAAUhC,GAAGoC,aAClD4B,EAAiB/B,KAAOrB,KAAKoB,UAAUhC,GAAGkC,aAI9CtB,MAAKa,yBAA2BiC,KA/MNlD,IAAA,qBAAAoC,MAAA,SAmNRiC,GAElB,IAAK,GADD5B,GAAOrC,KACFZ,EAAI,EAAGA,EAAI6E,EAAQ5E,OAAQD,IAAK,CACvC,GAAI8E,GAAMD,EAAQ7E,GAAG+E,gBAAgB9E,OACnC+E,EAAWH,EAAQ7E,IAAM6E,EAAQ7E,GAAGiC,KACpCgD,EAAUJ,GAAWA,EAAQ7E,GAC7BkF,EAAoBjC,EAAKkC,SAAWlC,EAAKkC,QAAQD,qBACnDD,GAAQzB,eACJ0B,EAAkBF,GACpBC,EAAQzB,YAAc0B,EAAkBF,GACvB,IAARF,EACTG,EAAQzB,YAAYF,KAAK2B,EAAQF,gBAAgB,IAChC,IAARD,GACTG,EAAQzB,YAAYF,KAAK2B,EAAQF,gBAAgB,IACjDE,EAAQzB,YAAYF,KAAK2B,EAAQF,gBAAgBD,EAAM,MAEvDG,EAAQzB,YAAYF,KAAK2B,EAAQF,gBAAgB,IACjDE,EAAQzB,YAAYF,KAAKF,KAAKC,MAAM4B,EAAQF,gBAAgBD,EAAM,GAAK,IACvEG,EAAQzB,YAAYF,KAAK2B,EAAQF,gBAAgBD,EAAM,KAG3D,MAAOD,MAxOmBrE,IAAA,kBAAAoC,MAAA,SAiPXwC,EAAGC,GAClB,GAAIC,GACFC,CACuB,KAArBC,UAAUvF,QACZsF,EAAM3E,KAAKgD,oBAAoBC,MAAM,4BACrCyB,EAAQC,EAAMC,UAAU,IACM,IAArBA,UAAUvF,SACnBqF,EAAQE,UAAU,GAClBD,EAAMC,UAAU,IAElB5E,KAAKU,kBAAoBgE,EACzB1E,KAAKW,gBAAkBgE,EACnB3E,KAAK6E,sBACP7E,KAAK6E,qBAAsB,EAC3B7E,KAAKgD,oBAAoBC,MAAM,8BAAgCjD,KAAKU,kBACpEV,KAAKgD,oBAAoBC,MAAM,4BAA8BjD,KAAKW,iBAEpEX,KAAK8E,4BACL9E,KAAK+E,+BAnQqBnF,IAAA,YAAAoC,MAAA,SAgRjBL,GACT3B,KAAK2B,OAASA,KAjRY/B,IAAA,OAAAoC,MAAA,SAuRtBgD,GA8EJ,QAASC,GAAcP,EAAOC,EAAKO,GASjC,GARArG,EAASsG,aAAetG,EAASsG,cAAgB,EAC7CD,IACFrG,EAASuG,sBAAuB,EAChCV,EAAQ7F,EAASwG,WACjBV,EAAM9F,EAASyG,UAEjBzG,EAASwG,WAAaX,EACtB7F,EAASyG,SAAWX,GACf,GAAItB,MAASxE,EAASsG,aAAe,IAKxC,YAJKtG,EAASuG,uBACZvG,EAASuG,sBAAuB,EAChCG,WAAWN,EAAaO,KAAK,KAAM,EAAG,GAAG,KAI7C3G,GAASsG,cAAgB,GAAI9B,MAC7BxE,EAAS4G,gBAAgBf,EAAM,GAAIC,EAAI,GACvC,KAAK,GAAIvF,GAAI,EAAGA,EAAIP,EAAS+B,0BAA0BvB,OAAQD,IAC7D,IAAK,GAAI8C,GAAI,EAAGA,EAAIrD,EAAS+B,0BAA0BxB,GAAGwD,YAAYvD,OAAQ6C,IACvEyC,EAAI,GAAKD,EAAM,IAAQ7F,EAASiF,WAAajF,EAAS4B,aACzD5B,EAASmC,UAAY,MACX2D,EAAI,GAAKD,EAAM,IAAO7F,EAASyD,YAAYlD,GAAGwD,YAAYV,GAAKrD,EAASyD,YAAYlD,GAAGmD,WACjG1D,EAASmC,UAAYnC,EAASyD,YAAYlD,GAAGwD,YAAYV,GAAKrD,EAASyD,YAAYlD,GAAGkC,aAAaqB,OAKpG9D,GAAS6G,YAQZ7G,EAAS6G,aAAc,GAPvB7G,EAAS6G,aAAc,EACvB7G,EAAS8G,QAAQC,UACjB/G,EAASgH,SAASC,MAClBjH,EAASgH,SAASnD,KAAK7D,EAASkH,iBAChClH,EAASmH,kBACTnH,EAASoH,QA/Gb,GAAIpH,GAAWmB,IAKenB,GAAS+B,yBA+GvC,OA9GAoE,IACE,QACA,QACA,WACA,QACA,UACA,cACA,eACA,gBACA,gBACA,sBACA,uBACA,aACA,UACA,gBACA,SACMkB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACA1D,EACA2D,EACAC,EACArC,EACAsC,GACJhI,EAASqH,MAAQA,EACjBrH,EAASsH,MAAQA,EACjBtH,EAASuH,SAAWA,EACpBvH,EAASwH,MAAQA,EACjBxH,EAASyH,QAAUA,EACnBzH,EAAS0H,YAAcA,EACvB1H,EAAS4H,cAAgBA,EACzB5H,EAAS2H,aAAeA,EACxB3H,EAAS6H,cAAgBA,EACzB7H,EAASmE,oBAAsBA,EAC/BnE,EAAS8H,qBAAuBA,EAChC9H,EAAS+H,WAAaA,EACtB/H,EAAS0F,QAAUA,EACnB1F,EAASgI,cAAgBA,KAG7BhI,EAAS8B,gBAAkB9B,EAASmE,oBAAoBC,MAAM,4BAC9DpE,EAAS6B,kBAAoB7B,EAASmE,oBAAoBC,MAAM,8BAChEpE,EAAS4B,aAAe5B,EAASmE,oBAAoBC,MAAM,+BAC3DpE,EAASiF,WAAajF,EAASmE,oBAAoBC,MAAM,6BAEzDpE,EAASiI,UAAYjI,EAASgI,cAAcE,YAAYC,oBACxDnI,EAASiI,UAAYjI,EAASiI,UAAUG,iBAAiB,GAAGC,YAAYC,KACxEtI,EAASiI,UAAYjI,EAASiI,UAAUM,oBACxCvI,EAASiI,UAAYjI,EAASiI,UAAUO,0BACxCxI,EAASyD,YAAczD,EAASyI,mBAAmBzI,EAASiI,WAQ5DjI,EAAS4G,gBAAgB5G,EAAS6B,kBAAmB7B,EAAS8B,iBAC9D9B,EAASgH,YACThH,EAAS0I,eACT1I,EAASqG,MAAO,EAEhBrG,EAASgH,SAASnD,KAAK7D,EAASkH,iBAEhClH,EAASmE,oBAAoBwE,eAAe,6BAA8B,4BAA6BvC,GAwChGpG,KA5YmBe,IAAA,gBAAAoC,MAAA,WA+YX,GACXyF,GACF9B,EACA+B,EACAC,EACAC,EAGAC,EACAC,EACA1I,EACA8C,EACA6F,EACAC,EACAC,EAdaC,EAAAlI,KAMbqC,EAAOrC,KACPmI,IAiEF,KAzDAF,EAAQ,GAAIjI,MAAKE,QAAQG,gBACvB+H,MAAOpI,KAAKoG,SAASgC,MACrB/B,MAAOrG,KAAKqG,MACZO,WAAY5G,KAAK4G,WACjByB,eAAgBrI,KAAKoG,SAASkC,YAGhCb,EAAW,GAAIzH,MAAKE,QAAQqI,yBAC1BH,MAAOpI,KAAKoG,SAASgC,MACrB/B,MAAOrG,KAAKqG,MACZO,WAAY5G,KAAK4G,WACjByB,eAAgBrI,KAAKoG,SAASkC,YAEhCb,EAASe,WACPC,KAAM,OACNC,gBAAiB,IAEnBT,EAAMO,WACJC,KAAM,OACNC,gBAAiB,IAEnB/C,EAAU,GAAI3F,MAAKI,mBACjBgI,MAAOpI,KAAKoG,SAASgC,MACrB/B,MAAOrG,KAAKqG,MACZO,WAAY5G,KAAK4G,WACjByB,eAAgBrI,KAAKoG,SAASkC,YAEhC3C,EAAQ6C,WACNC,KAAM,OACNC,gBAAiB,IAEnBV,EAAgB,GAAIhI,MAAKE,QAAQyI,MAAM,SACrC/B,WAAY5G,KAAK4G,WACjBwB,MAAOpI,KAAKoG,SAASgC,OACpB/F,EAAKkC,QAAQqE,MAAM,iBACtBX,EAAMY,UAAUb,GAChBJ,EAAY,GAAI5H,MAAKE,QAAQ9C,OAAO,OAAO,GACzCgL,MAAOpI,KAAKoG,SAASgC,MACrB/B,MAAOrG,KAAKqG,MACZO,WAAY5G,KAAK4G,WACjByB,eAAgBrI,KAAKoG,SAASkC,WAC7BjG,EAAKkC,QAAQqE,MAAM,eAAeE,qBACnCC,MAAO,WACL1G,EAAKwC,qBAAsB,EAC3BxC,EAAKrB,UAAY,MACjBqB,EAAKoD,gBAAgBpD,EAAK5B,aAAc4B,EAAKyB,aAQ/CkF,SAAU,QAGZvB,EAASoB,UAAUjB,GACdxI,EAAI,EAAGA,EAAIY,KAAKY,0BAA0BvB,OAAQD,IACrD,IAAK8C,EAAIlC,KAAKY,0BAA0BxB,GAAGwD,YAAYvD,OAAS,EAAG6C,GAAK,EAAGA,IACzEiG,EAAWzF,KAAKL,EAAKzB,0BAA0BxB,GAAGwD,YAAYV,GAAKG,EAAKzB,0BAA0BxB,GAAGoC,aAIzGkG,KACA,KAAK,GAAI9H,KAAOI,MAAKkB,oBACnBlB,KAAKkB,oBAAoBtB,GAAKqJ,MAEhC,KAAK,GAlFUC,GAAA,SAkFN9J,GAELyI,EADEzI,IAAMiD,EAAKvB,eACKuB,EAAKtB,qBAELsB,EAAKzB,0BAA0BxB,GAAGwD,YAAYvD,OAAS,CAE3E,KAAK,GAxFQ8J,GAAA,SAwFJjH,GACP,GAAIkH,GAAS/G,EAAKzB,0BAA0BxB,GAAGwD,YAAYV,GAAKG,EAAKzB,0BAA0BxB,GAAGkC,YACzDrD,UAArCiK,EAAKhH,oBAAoBkI,KAC3B1B,EAAoB,GAAIQ,GAAKhI,QAAQ9C,OAAOgM,GAAQ,GAClDhB,MAAOF,EAAK9B,SAASgC,MACrB/B,MAAO6B,EAAK7B,MACZO,WAAYsB,EAAKtB,WACjByB,eAAgBH,EAAK9B,SAASkC,WAC7BjG,EAAKkC,QAAQqE,MAAM,sBAAsBE,qBAC1CC,MAAS,WACP1G,EAAKwC,qBAAsB,EAC3BxC,EAAKrB,UAAYqB,EAAKzB,0BAA0BxB,GAAGwD,YAAYV,GAAKG,EAAKzB,0BAA0BxB,GAAGkC,aACtGwG,EAAYzF,EAAKzB,0BAA0BxB,GAAGwD,YAAYV,GAAKG,EAAKzB,0BAA0BxB,GAAGoC,aACjGa,EAAKoD,gBAAgBqC,IASvBkB,SAAU3G,EAAKzB,0BAA0BxB,GAAGwD,YAAYV,GAAK,IAAMG,EAAKzB,0BAA0BxB,GAAGqC,cAEvGyG,EAAKhH,oBAAoBkI,GAAU1B,GAGrCQ,EAAKhH,oBAAoBkI,GAAQC,OACjC5B,EAASoB,UAAUX,EAAKhH,oBAAoBkI,KA5BrClH,EAAI2F,EAAiB3F,GAAK,EAAGA,IAAKiH,EAAlCjH,IANF9C,EAAIiD,EAAKvB,eAAgB1B,GAAK,EAAGA,IAAK8J,EAAtC9J,EA6CTuI,KAEA,KAAK,GAjIU2B,GAAA,SAiINlK,GACP2I,EAA0B,IAAN3I,EAAWiD,EAAKkC,QAAQqE,MAAM,2BAA6BvG,EAAKkC,QAAQqE,MAAM,qBAClGjB,EAAkBvI,GAAK,GAAI8I,GAAKhI,QAAQ9C,OAAO8K,EAAKrH,yBAAyBzB,GAAGkC,cAAc,GAC5F8G,MAAOF,EAAK9B,SAASgC,MACrB/B,MAAO6B,EAAK7B,MACZO,WAAYsB,EAAKtB,WACjByB,eAAgBH,EAAK9B,SAASkC,WAC7BP,GAAkBe,qBACnBC,MAAS,WACP1G,EAAKwC,qBAAsB,EAC3BxC,EAAKrB,UAAYqB,EAAKxB,yBAAyBzB,GAAGkC,aAClDe,EAAKoD,gBAAgBpD,EAAKxB,yBAAyBzB,GAAG8D,UAAWb,EAAKxB,yBAAyBzB,GAAG+D,UAQpG6F,SAAUd,EAAKrH,yBAAyBzB,GAAGqC,cAE7CgG,EAASoB,UAAUlB,EAAkBvI,KArB9BA,EAAI,EAAGA,EAAIY,KAAKa,yBAAyBxB,OAAQD,IAAKkK,EAAtDlK,EAoCT,OAZAY,MAAKM,YAAYhC,SAAS,cAAe,SAAUiL,EAAGC,EAAGC,EAAKC,EAAGC,EAAGC,EAAMC,GACxE,GAAIC,GAAKP,EAAIG,EAAI,EAAIE,EAAO,EAC1BG,EAAKR,EAAIG,EAAI,EAAIE,EAAO,EACxBI,EAAKR,EAAIG,EAAI,EAAIE,EAAO,EACxBI,EAAKT,EAAIG,EAAI,EAAIE,EAAO,CAE1B,QAAQ,IAAKC,EAAIE,EAAI,IAAKD,EAAIC,EAAI,IAAKD,EAAIE,EAAI,IAAKH,EAAIG,EAAI,OAG9DtE,EAAQuE,aAAajC,GACrBtC,EAAQuE,aAAazC,GACrBzH,KAAK2F,QAAUA,EACRA,KApjBmB/F,IAAA,kBAAAoC,MAAA,WAujBqD,GAE3EmI,GAGF/K,EACAgL,EANaC,EAAgEzF,UAAAvF,OAAA,GAAApB,SAAA2G,UAAA,GAAAA,UAAA,GAA/C5E,KAAKsK,QAASC,EAAiC3F,UAAAvF,OAAA,GAAApB,SAAA2G,UAAA,GAAAA,UAAA,GAAf5E,KAAKwK,SAGnEC,EAAQ,IACRC,EAAS,CAIX,KAAKtL,EAAI,EAAGgL,EAAKpK,KAAK6F,SAASxG,OAAQD,EAAIgL,EAAIhL,IAC7C+K,EAAenK,KAAK6F,SAASzG,GAAG4G,gBAAgBqE,EAAgBE,GAEhEG,GAAUP,EAAaO,OACvB1K,KAAK6F,SAASzG,GAAGqL,MAAQN,EAAaM,MACtCzK,KAAK6F,SAASzG,GAAGsL,OAASP,EAAaO,MAGzC,OADAA,IAAU1K,KAAK2K,SAEbF,MAAOA,EACPC,OAAQA,MAzkBgB9K,IAAA,kBAAAoC,MAAA,WA8kB1B,MAAOhC,MAAK4K,eA9kBchL,IAAA,gBAAAoC,MAAA,WAklB1B,GAAIK,GAAOrC,IACXqC,GAAKsI,QAAU,EACftI,EAAKsE,qBAAqBkE,MACxBxJ,KAAM,WACJ,MAAO,gCAETyJ,IAAK,SAAUxN,GACb,MAAOA,GAAI,IAEb+E,KAAM,WACJ,MAAOA,IAET0I,SAAU,WACR,MAAO,IAETC,OAAQ,SAAU1N,GAChB,MAAOA,GAAI+E,EAAKkC,QAAQyG,SAE1BC,cACEC,KAAM,SAAU5N,GACd,MAAOA,GAAI+E,EAAKkC,QAAQ0G,cAE1BE,WACED,KAAM,SAAU5N,GACd,MAAOA,GAAI+E,EAAKkC,QAAQ6G,eAE1BC,YACEH,KAAM,SAAU5N,GACd,MAAOA,GAAI+E,EAAKkC,QAAQ8G,YAE1BC,YAAa,WACX,GAAI/J,GAASvB,KAAKuL,yBAElB,OADAlJ,GAAKmJ,KAAOxL,KACLqC,EAAK2D,gBAAiB3D,EAAKiI,QAAU/I,EAAOkK,WAAcpJ,EAAKmI,SAAWjJ,EAAOmK,2BAnnBxE9L,IAAA,0BAAAoC,MAAA,SA2nBHuH,EAAGC,EAAGiB,EAAOC,EAAQzC,GAC5C,GAAI0D,GAAM3L,KAAKuH,WAQf,OAPAoE,GAAIpC,EAAIA,EACRoC,EAAInC,EAAIA,EACRmC,EAAIlB,MAAQA,EACZkB,EAAIjB,OAASA,EAEb1K,KAAK4K,YAAc3C,EAEZjI,QApoBmBJ,IAAA,OAAAoC,MAAA,SAuoBtBuH,EAAGC,EAAGiB,EAAOC,EAAQzC,GACzB,GAEEmC,GACAhL,EACAuG,EACAiG,EACAC,EACAC,EACAhC,EACAC,EACAE,EACA8B,EAXExE,EAAcvH,KAAKuH,YACrB1B,EAAW7F,KAAK6F,QAsBlB,IAVA7F,KAAKkF,MAAO,EACZ6G,EAAa/L,KAAKgM,gBAAkBhM,KAAKoG,SAASgC,MAAM6D,MACtDC,OAAU,UACVC,eAAgB,QACfC,UACH7C,EAAUtL,SAANsL,EAAkBhC,EAAYgC,EAAIA,EACtCC,EAAUvL,SAANuL,EAAkBjC,EAAYiC,EAAIA,EACtCiB,EAAkBxM,SAAVwM,EAAsBlD,EAAYkD,MAAQA,EAClDC,EAAoBzM,SAAXyM,EAAuBnD,EAAYmD,OAASA,EACrDzC,EAAkBhK,SAAVgK,EAAsBjI,KAAK4K,YAAc3C,EAC7CwC,GAASC,EACX,IAAKtL,EAAI,EAAGgL,EAAKvE,EAASxG,OAAQD,EAAIgL,EAAIhL,IACxCuG,EAAUE,EAASzG,GACnBuG,EAAQM,KAAKsD,EAAGC,EAAGvB,EAGvBjI,MAAKgM,eAAiBD,EACtBH,EAAa/F,EAAS,GAAGwG,gBAAgB,GAAGT,UAC5C,KAAK,GAAIxM,GAAI,EAAGkN,EAAKV,EAAWvM,OAAQD,EAAIkN,EAAIlN,IAC1CwM,EAAWxM,GAAGmN,SAAWvM,KAAKgB,YAChC6K,EAAeD,EAAWxM,GAAGoN,kBAC7BV,EAAOD,EAAaY,UACpB3C,EAAKgC,EAAKvC,EACVQ,EAAK+B,EAAK/B,GACVE,EAAK6B,EAAK7B,GAEV8B,EAAWW,MACTT,MAAO,IAAKnC,EAAK,GAAKG,EAAK,GAAK,IAAKF,EAAK,GAAKE,EAAK,MAI1DjK,MAAKmB,cAAgBnB,KAAKgD,oBAAoBC,MAAM,sCAAwCjD,KAAKgD,oBAAoBC,MAAM,oCAprBjGxF,IAurB9B,OAAOA","file":"standard-period-selector-es5.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar StandardPeriodSelector = __webpack_require__(2);\n\t\n\twindow.stPS = new StandardPeriodSelector();\n\t\n\t;(function (env, factory) {\n\t  if (( false ? 'undefined' : _typeof(module)) === 'object' && module.exports) {\n\t    module.exports = env.document ? factory(env) : function (win) {\n\t      if (!win.document) {\n\t        throw new Error('Window with document not present');\n\t      }\n\t      return factory(win, true);\n\t    };\n\t  } else {\n\t    env.StandardPeriodSelector = factory(env, true);\n\t  }\n\t})(typeof window !== 'undefined' ? window : undefined, function (_window, windowExists) {\n\t  var FC = _window.FusionCharts;\n\t  FC.register('extension', ['private', 'standard-period-selector', function () {\n\t    FC.registerComponent('extensions', 'standard-period-selector', StandardPeriodSelector({ FusionCharts: FC }));\n\t  }]);\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)(module)))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\n\t\tif(!module.webpackPolyfill) {\n\t\t\tmodule.deprecate = function() {};\n\t\t\tmodule.paths = [];\n\t\t\t// module.parent = undefined by default\n\t\t\tmodule.children = [];\n\t\t\tmodule.webpackPolyfill = 1;\n\t\t}\n\t\treturn module;\n\t}\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Class definition of StandardPeriodSelector\n\t */\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tmodule.exports = function (dep) {\n\t  var StandardPeriodSelector = function () {\n\t    function StandardPeriodSelector() {\n\t      _classCallCheck(this, StandardPeriodSelector);\n\t\n\t      /**\n\t       * @private\n\t       */\n\t      this.ratio = 8;\n\t      this.toolbox = FusionCharts.getComponent('api', 'toolbox');\n\t      this.HorizontalToolbar = this.toolbox.HorizontalToolbar;\n\t      this.ComponentGroup = this.toolbox.ComponentGroup;\n\t      this.SymbolStore = this.toolbox.SymbolStore;\n\t      this.all = 1;\n\t      this.calculatedPeriods = [];\n\t      this.startDataset = 0;\n\t      // this.endDataset = this.globalReactiveModel.model['x-axis-absolute-range-end'];\n\t      this.startActiveWindow = 0;\n\t      this.endActiveWindow = 1;\n\t      this.standardCalculatedPeriods = [];\n\t      this.standardContexualPeriods = [];\n\t      this.startPointUnit = 0;\n\t      this.startPointMultiplier = 0;\n\t      this.clickedId = 'ALL';\n\t      this.noCalcButtons = 0;\n\t      this.calculatedButtonObj = {};\n\t      this.minimumBucket = 1;\n\t      this.tdButtons = [{\n\t        'name': 'YTD',\n\t        'abbreviation': 'YTD',\n\t        'parent': 'year',\n\t        'milliseconds': 31104000000,\n\t        'description': 'Year to Date'\n\t      }, {\n\t        'name': 'QTD',\n\t        'abbreviation': 'QTD',\n\t        'parent': 'month',\n\t        'multiplier': 3,\n\t        'milliseconds': 7776000000,\n\t        'description': 'Quarter to Date'\n\t      }, {\n\t        'name': 'MTD',\n\t        'abbreviation': 'MTD',\n\t        'parent': 'month',\n\t        'milliseconds': 2592000000,\n\t        'description': 'Month to Date'\n\t      }, {\n\t        'name': 'WTD',\n\t        'abbreviation': 'WTD',\n\t        'parent': 'day',\n\t        'multiplier': 7,\n\t        'milliseconds': 604800000,\n\t        'description': 'Week to Date'\n\t      }, {\n\t        'name': 'Y',\n\t        'abbreviation': 'Y',\n\t        'parent': 'day',\n\t        'milliseconds': 86400000,\n\t        'description': 'Yesterday'\n\t      }, {\n\t        'name': 'T',\n\t        'abbreviation': 'T',\n\t        'parent': 'day',\n\t        'milliseconds': 86400000,\n\t        'description': 'Today'\n\t      }];\n\t      this.config = {\n\t        anchorPositions: 'right',\n\t        all: '1',\n\t        contextual: '1',\n\t        calculated: '1',\n\t        tertiaryTimePeriods: {}\n\t      };\n\t    }\n\t\n\t    /**\n\t     * A function to generate the calculated buttons using\n\t     * the active range and the location of the active range\n\t     */\n\t\n\t\n\t    _createClass(StandardPeriodSelector, [{\n\t      key: 'generateCalculatedButtons',\n\t      value: function generateCalculatedButtons() {\n\t        var targetBlock = this.endActiveWindow - this.startDataset,\n\t            i = 0,\n\t            j = 0,\n\t            activeWindow = this.endActiveWindow - this.startActiveWindow,\n\t            count = 0,\n\t            self = this;\n\t        self.standardCalculatedPeriods = [];\n\t        for (i = 0; i < self.timePeriods.length; i++) {\n\t          // checking whether the unit is applicable for the current target block\n\t          if (targetBlock / self.timePeriods[i].interval >= 1) {\n\t            // checking whether the unit is of the higher order and only multiplier 1 is applicable\n\t            if (Math.floor(activeWindow / self.timePeriods[i].interval) < 1) {\n\t              self.standardCalculatedPeriods.push({\n\t                'abbreviation': self.timePeriods[i].abbreviation.single,\n\t                'description': self.timePeriods[i].description,\n\t                'milliseconds': self.timePeriods[i].interval,\n\t                'name': self.timePeriods[i].name,\n\t                'multipliers': [1]\n\t              });\n\t            } else {\n\t              // if the unit is of the order of the target block and calculating the multipliers\n\t              self.standardCalculatedPeriods.push({\n\t                'abbreviation': self.timePeriods[i].abbreviation.single,\n\t                'description': self.timePeriods[i].description,\n\t                'milliseconds': self.timePeriods[i].interval,\n\t                'name': self.timePeriods[i].name,\n\t                'multipliers': []\n\t              });\n\t              // calculating and populating the applicable multpliers of each unit\n\t              for (j = 0; j < self.timePeriods[i].multipliers.length; j++) {\n\t                if (activeWindow / self.ratio < self.timePeriods[i].multipliers[j] * self.timePeriods[i].interval && self.timePeriods[i].multipliers[j] * self.timePeriods[i].interval > self.minimumBucket) {\n\t                  self.standardCalculatedPeriods[self.standardCalculatedPeriods.length - 1].multipliers.push(self.timePeriods[i].multipliers[j]);\n\t                }\n\t              }\n\t            }\n\t          }\n\t        }\n\t        this.noCalcButtons = Infinity;\n\t        for (i = 0; i < this.standardCalculatedPeriods.length; i++) {\n\t          for (j = 0; j < this.standardCalculatedPeriods[i].multipliers.length; j++) {\n\t            ++count;\n\t            if (this.noCalcButtons > i) {\n\t              this.noCalcButtons = i;\n\t            }\n\t            if (count <= 4) {\n\t              this.startPointMultiplier = j;\n\t              this.startPointUnit = i;\n\t            }\n\t          }\n\t        }\n\t\n\t        // this.drawButtonsCalculated(this.standardCalculatedPeriods);\n\t      }\n\t\n\t      /**\n\t       * A function to generate the contextual buttons using\n\t       * the end point of the time-scale\n\t       */\n\t\n\t    }, {\n\t      key: 'generateContextualButtons',\n\t      value: function generateContextualButtons() {\n\t        // generating an array with applicable TD buttons\n\t        var buttons = [],\n\t            i = 0,\n\t            endStamp = this.globalReactiveModel.model['x-axis-absolute-range-end'],\n\t            dateStart = endStamp - 2,\n\t            dateEnd = endStamp,\n\t            relativeTDButton = {};\n\t        for (; i < this.tdButtons.length; i++) {\n\t          dateStart = new Date(endStamp);\n\t          if (this.tdButtons[i].name === 'YTD') {\n\t            dateStart.setMonth(0);\n\t            dateStart.setDate(1);\n\t            dateStart.setHours(0);\n\t            dateStart.setMinutes(0);\n\t            dateStart.setSeconds(0);\n\t          } else if (this.tdButtons[i].name === 'MTD') {\n\t            dateStart.setDate(1);\n\t            dateStart.setHours(0);\n\t            dateStart.setMinutes(0);\n\t            dateStart.setSeconds(0);\n\t          } else if (this.tdButtons[i].name === 'QTD') {\n\t            dateStart.setMonth(11 - dateStart.getMonth() % 4);\n\t            dateStart.setDate(0);\n\t            dateStart.setHours(0);\n\t            dateStart.setMinutes(0);\n\t            dateStart.setSeconds(0);\n\t          } else if (this.tdButtons[i].name === 'WTD') {\n\t            dateStart.setDate(dateStart.getDate() - dateStart.getDay());\n\t            dateStart.setHours(0);\n\t            dateStart.setMinutes(0);\n\t            dateStart.setSeconds(0);\n\t          } else if (this.tdButtons[i].name === 'Y') {\n\t            dateStart.setHours(0);\n\t            dateStart.setMinutes(0);\n\t            dateStart.setSeconds(0);\n\t            dateStart -= 86400000;\n\t          } else if (this.tdButtons[i].name === 'T') {\n\t            dateStart.setHours(0);\n\t            dateStart.setMinutes(0);\n\t            dateStart.setSeconds(0);\n\t            if (+this.endDataset === +dateStart) {\n\t              dateStart = +dateStart - 86400000;\n\t            }\n\t          }\n\t\n\t          if (dateEnd < dateStart) {\n\t            continue;\n\t          } else {\n\t            this.tdButtons[i].dateStart = dateStart.valueOf();\n\t            this.tdButtons[i].dateEnd = dateEnd.valueOf();\n\t            buttons.push(this.tdButtons[i]);\n\t          }\n\t        }\n\t        relativeTDButton.milliseconds = Infinity;\n\t        for (i = 0; i < this.tdButtons.length; i++) {\n\t          if (Math.abs(this.tdButtons[i].milliseconds - (this.endActiveWindow - this.startActiveWindow)) < relativeTDButton.milliseconds) {\n\t            relativeTDButton.milliseconds = this.tdButtons[i].milliseconds;\n\t            relativeTDButton.name = this.tdButtons[i].abbreviation;\n\t          }\n\t        }\n\t\n\t        this.standardContexualPeriods = buttons;\n\t        // this.drawButtonsContextual(this.standardContexualPeriods);\n\t      }\n\t    }, {\n\t      key: 'processMultipliers',\n\t      value: function processMultipliers(timeArr) {\n\t        var self = this;\n\t        for (var i = 0; i < timeArr.length; i++) {\n\t          var len = timeArr[i].possibleFactors.length,\n\t              timeName = timeArr[i] && timeArr[i].name,\n\t              timeObj = timeArr && timeArr[i],\n\t              customMultipliers = self.extData && self.extData.customMultipliers || {};\n\t          timeObj.multipliers = [];\n\t          if (customMultipliers[timeName]) {\n\t            timeObj.multipliers = customMultipliers[timeName];\n\t          } else if (len === 1) {\n\t            timeObj.multipliers.push(timeObj.possibleFactors[0]);\n\t          } else if (len === 2) {\n\t            timeObj.multipliers.push(timeObj.possibleFactors[0]);\n\t            timeObj.multipliers.push(timeObj.possibleFactors[len - 1]);\n\t          } else {\n\t            timeObj.multipliers.push(timeObj.possibleFactors[0]);\n\t            timeObj.multipliers.push(Math.floor(timeObj.possibleFactors[len - 1] / 2));\n\t            timeObj.multipliers.push(timeObj.possibleFactors[len - 1]);\n\t          }\n\t        }\n\t        return timeArr;\n\t      }\n\t\n\t      /**\n\t       * A function to set the active period's\n\t       * start and end point\n\t       * @param  {number} date stamp - A UNIX timestamp to be set as the start point of active period\n\t       * @param  {number} date stamp - A UNIX timestamp to be set as the end point of active period\n\t       */\n\t\n\t    }, {\n\t      key: 'setActivePeriod',\n\t      value: function setActivePeriod(a, b) {\n\t        var start, end;\n\t        if (arguments.length === 1) {\n\t          end = this.globalReactiveModel.model['x-axis-visible-range-end'];\n\t          start = end - arguments[0];\n\t        } else if (arguments.length === 2) {\n\t          start = arguments[0];\n\t          end = arguments[1];\n\t        }\n\t        this.startActiveWindow = start;\n\t        this.endActiveWindow = end;\n\t        if (this.periodButtonClicked) {\n\t          this.periodButtonClicked = false;\n\t          this.globalReactiveModel.model['x-axis-visible-range-start'] = this.startActiveWindow;\n\t          this.globalReactiveModel.model['x-axis-visible-range-end'] = this.endActiveWindow;\n\t        }\n\t        this.generateCalculatedButtons();\n\t        this.generateContextualButtons();\n\t      }\n\t\n\t      /**\n\t       * A function to set the start and end point of the\n\t       * entire time-line\n\t       * @param  {number} date stamp - A UNIX timestamp to be set as the start point of time-line\n\t       * @param  {number} date stamp - A UNIX timestamp to be set as the end point of time-line\n\t       */\n\t\n\t      /**\n\t       * A function to set the object to set the user preferences\n\t       */\n\t\n\t    }, {\n\t      key: 'configure',\n\t      value: function configure(config) {\n\t        this.config = config;\n\t      }\n\t\n\t      /**\n\t       * Fusioncharts life cycle method for extension\n\t       */\n\t\n\t    }, {\n\t      key: 'init',\n\t      value: function init(require) {\n\t        var instance = this,\n\t            i = 0,\n\t            j = 0,\n\t            ii = 0,\n\t            jj = 0,\n\t            standardCalculatedPeriods = instance.standardCalculatedPeriods;\n\t        require(['xAxis', 'yAxis', 'graphics', 'chart', 'dataset', 'PlotManager', 'canvasConfig', 'MarkerManager', 'reactiveModel', 'globalReactiveModel', 'spaceManagerInstance', 'smartLabel', 'extData', 'chartInstance', function (xAxis, yAxis, graphics, chart, dataset, plotManager, canvasConfig, markerManager, reactiveModel, globalReactiveModel, spaceManagerInstance, smartLabel, extData, chartInstance) {\n\t          instance.xAxis = xAxis;\n\t          instance.yAxis = yAxis;\n\t          instance.graphics = graphics;\n\t          instance.chart = chart;\n\t          instance.dataset = dataset;\n\t          instance.plotManager = plotManager;\n\t          instance.markerManager = markerManager;\n\t          instance.canvasConfig = canvasConfig;\n\t          instance.reactiveModel = reactiveModel;\n\t          instance.globalReactiveModel = globalReactiveModel;\n\t          instance.spaceManagerInstance = spaceManagerInstance;\n\t          instance.smartLabel = smartLabel;\n\t          instance.extData = extData;\n\t          instance.chartInstance = chartInstance;\n\t        }]);\n\t        instance.endActiveWindow = instance.globalReactiveModel.model['x-axis-visible-range-end'];\n\t        instance.startActiveWindow = instance.globalReactiveModel.model['x-axis-visible-range-start'];\n\t        instance.startDataset = instance.globalReactiveModel.model['x-axis-absolute-range-start'];\n\t        instance.endDataset = instance.globalReactiveModel.model['x-axis-absolute-range-end'];\n\t        // instance.globalReactiveModel.model['_x-axis-visible-range-start'] += 124416000000;\n\t        instance.timeRules = instance.chartInstance.apiInstance.getComponentStore();\n\t        instance.timeRules = instance.timeRules.getCanvasByIndex(0).composition.impl;\n\t        instance.timeRules = instance.timeRules.getDataAggregator();\n\t        instance.timeRules = instance.timeRules.getAggregationTimeRules();\n\t        instance.timePeriods = instance.processMultipliers(instance.timeRules);\n\t        // instance.minimumBucket = +instance.globalReactiveModel['x-axis-maximum-allowed-ticks'] *\n\t        //   +instance.globalReactiveModel['minimum-consecutive-datestamp-diff;'];\n\t        // minimum-consecutive-datestamp-diff\n\t        // x-axis-maximum-allowed-ticks\n\t        // console.log(instance.globalReactiveModel);\n\t        // console.log(instance.globalReactiveModel.model['x-axis-maximum-allowed-ticks']);\n\t        // console.log(instance.globalReactiveModel.model['minimum-consecutive-datestamp-diff;']);\n\t        instance.setActivePeriod(instance.startActiveWindow, instance.endActiveWindow);\n\t        instance.toolbars = [];\n\t        instance.measurement = {};\n\t        instance.flag = true;\n\t\n\t        instance.toolbars.push(instance.createToolbar());\n\t\n\t        instance.globalReactiveModel.onPropsChange(['x-axis-visible-range-start', 'x-axis-visible-range-end'], propsHandler);\n\t        function propsHandler(start, end, flag) {\n\t          instance.lastDisposed = instance.lastDisposed || 0;\n\t          if (flag) {\n\t            instance.launchedPropsHandler = false;\n\t            start = instance.propsStart;\n\t            end = instance.propsEnd;\n\t          }\n\t          instance.propsStart = start;\n\t          instance.propsEnd = end;\n\t          if (+new Date() - instance.lastDisposed < 400) {\n\t            if (!instance.launchedPropsHandler) {\n\t              instance.launchedPropsHandler = true;\n\t              setTimeout(propsHandler.bind(null, 0, 0, true));\n\t            }\n\t            return;\n\t          }\n\t          instance.lastDisposed = +new Date();\n\t          instance.setActivePeriod(start[1], end[1]);\n\t          for (var _i = 0; _i < instance.standardCalculatedPeriods.length; _i++) {\n\t            for (var _j = 0; _j < instance.standardCalculatedPeriods[_i].multipliers.length; _j++) {\n\t              if (end[1] - start[1] >= instance.endDataset - instance.startDataset) {\n\t                instance.clickedId = 'ALL';\n\t              } else if (end[1] - start[1] >= instance.timePeriods[_i].multipliers[_j] * instance.timePeriods[_i].interval) {\n\t                instance.clickedId = instance.timePeriods[_i].multipliers[_j] + instance.timePeriods[_i].abbreviation.single;\n\t              }\n\t            }\n\t          }\n\t\n\t          if (!instance.cantDispose) {\n\t            instance.cantDispose = true;\n\t            instance.toolbar.dispose();\n\t            instance.toolbars.pop();\n\t            instance.toolbars.push(instance.createToolbar());\n\t            instance.getLogicalSpace();\n\t            instance.draw();\n\t          } else {\n\t            instance.cantDispose = false;\n\t          }\n\t        }\n\t        return instance;\n\t      }\n\t    }, {\n\t      key: 'createToolbar',\n\t      value: function createToolbar() {\n\t        var _this = this;\n\t\n\t        var unigroup,\n\t            toolbar,\n\t            calculatedButtons,\n\t            contextualButtons,\n\t            allButton,\n\t            self = this,\n\t            deductorAr = [],\n\t            startMultiplier,\n\t            deductor,\n\t            i,\n\t            j,\n\t            contextualConfig,\n\t            fromDateLabel,\n\t            group;\n\t        group = new this.toolbox.ComponentGroup({\n\t          paper: this.graphics.paper,\n\t          chart: this.chart,\n\t          smartLabel: this.smartLabel,\n\t          chartContainer: this.graphics.container\n\t        });\n\t\n\t        unigroup = new this.toolbox.UniSelectComponentGroup({\n\t          paper: this.graphics.paper,\n\t          chart: this.chart,\n\t          smartLabel: this.smartLabel,\n\t          chartContainer: this.graphics.container\n\t        });\n\t        unigroup.setConfig({\n\t          fill: '#fff',\n\t          borderThickness: 0\n\t        });\n\t        group.setConfig({\n\t          fill: '#fff',\n\t          borderThickness: 0\n\t        });\n\t        toolbar = new this.HorizontalToolbar({\n\t          paper: this.graphics.paper,\n\t          chart: this.chart,\n\t          smartLabel: this.smartLabel,\n\t          chartContainer: this.graphics.container\n\t        });\n\t        toolbar.setConfig({\n\t          fill: '#fff',\n\t          borderThickness: 0\n\t        });\n\t        fromDateLabel = new this.toolbox.Label('Zoom:', {\n\t          smartLabel: this.smartLabel,\n\t          paper: this.graphics.paper\n\t        }, self.extData.style['label-config']);\n\t        group.addSymbol(fromDateLabel);\n\t        allButton = new this.toolbox.Symbol('ALL', true, {\n\t          paper: this.graphics.paper,\n\t          chart: this.chart,\n\t          smartLabel: this.smartLabel,\n\t          chartContainer: this.graphics.container\n\t        }, self.extData.style['all-config']).attachEventHandlers({\n\t          click: function click() {\n\t            self.periodButtonClicked = true;\n\t            self.clickedId = 'ALL';\n\t            self.setActivePeriod(self.startDataset, self.endDataset);\n\t            // toolbar.dispose();\n\t            // self.toolbars.pop();\n\t            // self.toolbars.push(self.createToolbar());\n\t            // self.getLogicalSpace();\n\t            // self.draw();\n\t            // self._ref.reAllocate(self.parentGroup);\n\t          },\n\t          tooltext: 'ALL'\n\t        });\n\t\n\t        unigroup.addSymbol(allButton);\n\t        for (i = 0; i < this.standardCalculatedPeriods.length; i++) {\n\t          for (j = this.standardCalculatedPeriods[i].multipliers.length - 1; j >= 0; j--) {\n\t            deductorAr.push(self.standardCalculatedPeriods[i].multipliers[j] * self.standardCalculatedPeriods[i].milliseconds);\n\t          }\n\t        }\n\t\n\t        calculatedButtons = {};\n\t        for (var key in this.calculatedButtonObj) {\n\t          this.calculatedButtonObj[key].hide();\n\t        }\n\t\n\t        var _loop = function _loop(_i2) {\n\t          if (_i2 === self.startPointUnit) {\n\t            startMultiplier = self.startPointMultiplier;\n\t          } else {\n\t            startMultiplier = self.standardCalculatedPeriods[_i2].multipliers.length - 1;\n\t          }\n\t\n\t          var _loop3 = function _loop3(_j2) {\n\t            var keyAbb = self.standardCalculatedPeriods[_i2].multipliers[_j2] + self.standardCalculatedPeriods[_i2].abbreviation;\n\t            if (_this.calculatedButtonObj[keyAbb] === undefined) {\n\t              calculatedButtons = new _this.toolbox.Symbol(keyAbb, true, {\n\t                paper: _this.graphics.paper,\n\t                chart: _this.chart,\n\t                smartLabel: _this.smartLabel,\n\t                chartContainer: _this.graphics.container\n\t              }, self.extData.style['calculated-config']).attachEventHandlers({\n\t                'click': function click() {\n\t                  self.periodButtonClicked = true;\n\t                  self.clickedId = self.standardCalculatedPeriods[_i2].multipliers[_j2] + self.standardCalculatedPeriods[_i2].abbreviation;\n\t                  deductor = self.standardCalculatedPeriods[_i2].multipliers[_j2] * self.standardCalculatedPeriods[_i2].milliseconds;\n\t                  self.setActivePeriod(deductor);\n\t                  // toolbar.dispose();\n\t                  // self.toolbars.pop();\n\t                  // self.toolbars.push(self.createToolbar());\n\t                  // self.getLogicalSpace();\n\t                  // self.draw();\n\t                  // self._ref.reAllocate(self.parentGroup);\n\t                  // this.toolbars[this.toolbars.length - 1] = this.createToolbar();\n\t                },\n\t                tooltext: self.standardCalculatedPeriods[_i2].multipliers[_j2] + ' ' + self.standardCalculatedPeriods[_i2].description\n\t              });\n\t              _this.calculatedButtonObj[keyAbb] = calculatedButtons;\n\t            }\n\t            // unigroup.addSymbol(calculatedButtons[i]);\n\t            _this.calculatedButtonObj[keyAbb].show();\n\t            unigroup.addSymbol(_this.calculatedButtonObj[keyAbb]);\n\t          };\n\t\n\t          for (var _j2 = startMultiplier; _j2 >= 0; _j2--) {\n\t            _loop3(_j2);\n\t          }\n\t        };\n\t\n\t        for (var _i2 = self.startPointUnit; _i2 >= 0; _i2--) {\n\t          _loop(_i2);\n\t        }\n\t\n\t        // for (let i = self.startPointUnit; i >= 0; i--) {\n\t        //   for (let j = startMultiplier; j >= 0; j--) {\n\t        //     let keyAbb = self.standardCalculatedPeriods[i].multipliers[j] + self.standardCalculatedPeriods[i].abbreviation;\n\t        //     unigroup.addSymbol(this.calculatedButtonObj[keyAbb]);\n\t        //   }\n\t        // }\n\t\n\t        contextualButtons = [];\n\t\n\t        var _loop2 = function _loop2(_i3) {\n\t          contextualConfig = _i3 === 0 ? self.extData.style['contextual-config-first'] : self.extData.style['contextual-config'];\n\t          contextualButtons[_i3] = new _this.toolbox.Symbol(_this.standardContexualPeriods[_i3].abbreviation, true, {\n\t            paper: _this.graphics.paper,\n\t            chart: _this.chart,\n\t            smartLabel: _this.smartLabel,\n\t            chartContainer: _this.graphics.container\n\t          }, contextualConfig).attachEventHandlers({\n\t            'click': function click() {\n\t              self.periodButtonClicked = true;\n\t              self.clickedId = self.standardContexualPeriods[_i3].abbreviation;\n\t              self.setActivePeriod(self.standardContexualPeriods[_i3].dateStart, self.standardContexualPeriods[_i3].dateEnd);\n\t              // toolbar.dispose();\n\t              // self.toolbars.pop();\n\t              // self.toolbars.push(self.createToolbar());\n\t              // self.getLogicalSpace();\n\t              // self.draw();\n\t              // self._ref.reAllocate(self.parentGroup);\n\t            },\n\t            tooltext: _this.standardContexualPeriods[_i3].description\n\t          });\n\t          unigroup.addSymbol(contextualButtons[_i3]);\n\t        };\n\t\n\t        for (var _i3 = 0; _i3 < this.standardContexualPeriods.length; _i3++) {\n\t          _loop2(_i3);\n\t        }\n\t\n\t        this.SymbolStore.register('textBoxIcon', function (x, y, rad, w, h, padX, padY) {\n\t          var x1 = x - w / 2 + padX / 2,\n\t              x2 = x + w / 2 - padX / 2,\n\t              y1 = y - h / 2 + padY / 2,\n\t              y2 = y + h / 2 - padY / 2;\n\t\n\t          return ['M', x1, y1, 'L', x2, y1, 'L', x2, y2, 'L', x1, y2, 'Z'];\n\t        });\n\t\n\t        toolbar.addComponent(group);\n\t        toolbar.addComponent(unigroup);\n\t        this.toolbar = toolbar;\n\t        return toolbar;\n\t      }\n\t    }, {\n\t      key: 'getLogicalSpace',\n\t      value: function getLogicalSpace() {\n\t        var availableWidth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._pWidth;\n\t        var availableHeight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._pHeight;\n\t\n\t        // availableWidth /= 2;\n\t        var logicalSpace,\n\t            width = 420,\n\t            // width hardcoded; TODO: make it dynamic\n\t        height = 0,\n\t            i,\n\t            ln;\n\t\n\t        for (i = 0, ln = this.toolbars.length; i < ln; i++) {\n\t          logicalSpace = this.toolbars[i].getLogicalSpace(availableWidth, availableHeight);\n\t          // width = Math.max(logicalSpace.width, width);\n\t          height += logicalSpace.height;\n\t          this.toolbars[i].width = logicalSpace.width;\n\t          this.toolbars[i].height = logicalSpace.height;\n\t        }\n\t        height += this.padding;\n\t        return {\n\t          width: width,\n\t          height: height\n\t        };\n\t      }\n\t    }, {\n\t      key: 'getDefaultGroup',\n\t      value: function getDefaultGroup() {\n\t        return this.parentGroup;\n\t      }\n\t    }, {\n\t      key: 'placeInCanvas',\n\t      value: function placeInCanvas() {\n\t        var _self = this;\n\t        _self.padding = 5;\n\t        _self.spaceManagerInstance.add([{\n\t          name: function name() {\n\t            return 'standard-period-selector-ext';\n\t          },\n\t          ref: function ref(obj) {\n\t            return obj['0'];\n\t          },\n\t          self: function self() {\n\t            return _self;\n\t          },\n\t          priority: function priority() {\n\t            return 2;\n\t          },\n\t          layout: function layout(obj) {\n\t            return obj[_self.extData.layout];\n\t          },\n\t          orientation: [{\n\t            type: function type(obj) {\n\t              return obj[_self.extData.orientation];\n\t            },\n\t            position: [{\n\t              type: function type(obj) {\n\t                return obj[_self.extData.posWrtCanvas];\n\t              },\n\t              alignment: [{\n\t                type: function type(obj) {\n\t                  return obj[_self.extData.alignment];\n\t                },\n\t                dimensions: [function () {\n\t                  var parent = this.getParentComponentGroup();\n\t                  _self._ref = this;\n\t                  return _self.getLogicalSpace(_self._pWidth = parent.getWidth(), _self._pHeight = parent.getHeight());\n\t                }]\n\t              }]\n\t            }]\n\t          }]\n\t        }]);\n\t      }\n\t    }, {\n\t      key: 'setDrawingConfiguration',\n\t      value: function setDrawingConfiguration(x, y, width, height, group) {\n\t        var mes = this.measurement;\n\t        mes.x = x;\n\t        mes.y = y;\n\t        mes.width = width;\n\t        mes.height = height;\n\t\n\t        this.parentGroup = group;\n\t\n\t        return this;\n\t      }\n\t    }, {\n\t      key: 'draw',\n\t      value: function draw(x, y, width, height, group) {\n\t        var measurement = this.measurement,\n\t            toolbars = this.toolbars,\n\t            ln,\n\t            i,\n\t            toolbar,\n\t            symbolList,\n\t            boundElement,\n\t            bBox,\n\t            x1,\n\t            x2,\n\t            y2,\n\t            selectLine;\n\t\n\t        this.flag = true;\n\t        selectLine = this.saveSelectLine || this.graphics.paper.path({\n\t          'stroke': '#c95a5a',\n\t          'stroke-width': '2px'\n\t        }).toFront();\n\t        x = x === undefined ? measurement.x : x;\n\t        y = y === undefined ? measurement.y : y;\n\t        width = width === undefined ? measurement.width : width;\n\t        height = height === undefined ? measurement.height : height;\n\t        group = group === undefined ? this.parentGroup : group;\n\t        if (width && height) {\n\t          for (i = 0, ln = toolbars.length; i < ln; i++) {\n\t            toolbar = toolbars[i];\n\t            toolbar.draw(x, y, group);\n\t          }\n\t        }\n\t        this.saveSelectLine = selectLine;\n\t        symbolList = toolbars[0].componentGroups[1].symbolList;\n\t        for (var _i4 = 0, ii = symbolList.length; _i4 < ii; _i4++) {\n\t          if (symbolList[_i4].symbol === this.clickedId) {\n\t            boundElement = symbolList[_i4].getBoundElement();\n\t            bBox = boundElement.getBBox();\n\t            x1 = bBox.x;\n\t            x2 = bBox.x2;\n\t            y2 = bBox.y2;\n\t\n\t            selectLine.attr({\n\t              path: ['M', x1 - 0.5, y2 - 0.5, 'L', x2 + 0.5, y2 - 0.5]\n\t            });\n\t          }\n\t        }\n\t        this.minimumBucket = this.globalReactiveModel.model['minimum-consecutive-datestamp-diff'] * this.globalReactiveModel.model['x-axis-maximum-allowed-ticks'];\n\t      }\n\t    }]);\n\t\n\t    return StandardPeriodSelector;\n\t  }();\n\t\n\t  return StandardPeriodSelector;\n\t};\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// standard-period-selector-es5.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c8b35779f911ed0d4606","'use strict';\nconst StandardPeriodSelector = require('./standard-period-selector');\n\nwindow.stPS = new StandardPeriodSelector();\n\n;(function (env, factory) {\n  if (typeof module === 'object' && module.exports) {\n    module.exports = env.document\n       ? factory(env) : function (win) {\n         if (!win.document) {\n           throw new Error('Window with document not present');\n         }\n         return factory(win, true);\n       };\n  } else {\n    env.StandardPeriodSelector = factory(env, true);\n  }\n})(typeof window !== 'undefined' ? window : this, function (_window, windowExists) {\n  var FC = _window.FusionCharts;\n  FC.register('extension', ['private', 'standard-period-selector', function () {\n    FC.registerComponent('extensions', 'standard-period-selector', StandardPeriodSelector({FusionCharts: FC}));\n  }]);\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tmodule.children = [];\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 1\n// module chunks = 0","'use strict';\n\n/**\n * Class definition of StandardPeriodSelector\n */\n\nmodule.exports = function (dep) {\n  class StandardPeriodSelector {\n    constructor () {\n      /**\n       * @private\n       */\n      this.ratio = 8;\n      this.toolbox = FusionCharts.getComponent('api', 'toolbox');\n      this.HorizontalToolbar = this.toolbox.HorizontalToolbar;\n      this.ComponentGroup = this.toolbox.ComponentGroup;\n      this.SymbolStore = this.toolbox.SymbolStore;\n      this.all = 1;\n      this.calculatedPeriods = [];\n      this.startDataset = 0;\n      // this.endDataset = this.globalReactiveModel.model['x-axis-absolute-range-end'];\n      this.startActiveWindow = 0;\n      this.endActiveWindow = 1;\n      this.standardCalculatedPeriods = [];\n      this.standardContexualPeriods = [];\n      this.startPointUnit = 0;\n      this.startPointMultiplier = 0;\n      this.clickedId = 'ALL';\n      this.noCalcButtons = 0;\n      this.calculatedButtonObj = {};\n      this.minimumBucket = 1;\n      this.tdButtons = [\n        {\n          'name': 'YTD',\n          'abbreviation': 'YTD',\n          'parent': 'year',\n          'milliseconds': 31104000000,\n          'description': 'Year to Date'\n        },\n        {\n          'name': 'QTD',\n          'abbreviation': 'QTD',\n          'parent': 'month',\n          'multiplier': 3,\n          'milliseconds': 7776000000,\n          'description': 'Quarter to Date'\n        },\n        {\n          'name': 'MTD',\n          'abbreviation': 'MTD',\n          'parent': 'month',\n          'milliseconds': 2592000000,\n          'description': 'Month to Date'\n        },\n        {\n          'name': 'WTD',\n          'abbreviation': 'WTD',\n          'parent': 'day',\n          'multiplier': 7,\n          'milliseconds': 604800000,\n          'description': 'Week to Date'\n        },\n        {\n          'name': 'Y',\n          'abbreviation': 'Y',\n          'parent': 'day',\n          'milliseconds': 86400000,\n          'description': 'Yesterday'\n        },\n        {\n          'name': 'T',\n          'abbreviation': 'T',\n          'parent': 'day',\n          'milliseconds': 86400000,\n          'description': 'Today'\n        }\n      ];\n      this.config = {\n        anchorPositions: 'right',\n        all: '1',\n        contextual: '1',\n        calculated: '1',\n        tertiaryTimePeriods: {}\n      };\n    }\n\n    /**\n     * A function to generate the calculated buttons using\n     * the active range and the location of the active range\n     */\n    generateCalculatedButtons () {\n      var targetBlock = this.endActiveWindow - this.startDataset,\n        i = 0,\n        j = 0,\n        activeWindow = this.endActiveWindow - this.startActiveWindow,\n        count = 0,\n        self = this;\n      self.standardCalculatedPeriods = [];\n      for (i = 0; i < self.timePeriods.length; i++) {\n        // checking whether the unit is applicable for the current target block\n        if (targetBlock / self.timePeriods[i].interval >= 1) {\n          // checking whether the unit is of the higher order and only multiplier 1 is applicable\n          if (Math.floor((activeWindow) / self.timePeriods[i].interval) < 1) {\n            self.standardCalculatedPeriods.push({\n              'abbreviation': self.timePeriods[i].abbreviation.single,\n              'description': self.timePeriods[i].description,\n              'milliseconds': self.timePeriods[i].interval,\n              'name': self.timePeriods[i].name,\n              'multipliers': [1]\n            });\n          } else { // if the unit is of the order of the target block and calculating the multipliers\n            self.standardCalculatedPeriods.push({\n              'abbreviation': self.timePeriods[i].abbreviation.single,\n              'description': self.timePeriods[i].description,\n              'milliseconds': self.timePeriods[i].interval,\n              'name': self.timePeriods[i].name,\n              'multipliers': []\n            });\n            // calculating and populating the applicable multpliers of each unit\n            for (j = 0; j < self.timePeriods[i].multipliers.length; j++) {\n              if (activeWindow / self.ratio < self.timePeriods[i].multipliers[j] * self.timePeriods[i].interval &&\n                (self.timePeriods[i].multipliers[j] * self.timePeriods[i].interval) > self.minimumBucket) {\n                self.standardCalculatedPeriods[self.standardCalculatedPeriods.length - 1].multipliers.push(\n                  self.timePeriods[i].multipliers[j]\n                  );\n              }\n            }\n          }\n        }\n      }\n      this.noCalcButtons = Infinity;\n      for (i = 0; i < this.standardCalculatedPeriods.length; i++) {\n        for (j = 0; j < this.standardCalculatedPeriods[i].multipliers.length; j++) {\n          ++count;\n          if (this.noCalcButtons > i) {\n            this.noCalcButtons = i;\n          }\n          if (count <= 4) {\n            this.startPointMultiplier = j;\n            this.startPointUnit = i;\n          }\n        }\n      }\n\n      // this.drawButtonsCalculated(this.standardCalculatedPeriods);\n    }\n\n    /**\n     * A function to generate the contextual buttons using\n     * the end point of the time-scale\n     */\n    generateContextualButtons () {\n      // generating an array with applicable TD buttons\n      var buttons = [],\n        i = 0,\n        endStamp = this.globalReactiveModel.model['x-axis-absolute-range-end'],\n        dateStart = endStamp - 2,\n        dateEnd = endStamp,\n        relativeTDButton = {};\n      for (; i < this.tdButtons.length; i++) {\n        dateStart = new Date(endStamp);\n        if (this.tdButtons[i].name === 'YTD') {\n          dateStart.setMonth(0);\n          dateStart.setDate(1);\n          dateStart.setHours(0);\n          dateStart.setMinutes(0);\n          dateStart.setSeconds(0);\n        } else if (this.tdButtons[i].name === 'MTD') {\n          dateStart.setDate(1);\n          dateStart.setHours(0);\n          dateStart.setMinutes(0);\n          dateStart.setSeconds(0);\n        } else if (this.tdButtons[i].name === 'QTD') {\n          dateStart.setMonth(11 - (dateStart.getMonth() % 4));\n          dateStart.setDate(0);\n          dateStart.setHours(0);\n          dateStart.setMinutes(0);\n          dateStart.setSeconds(0);\n        } else if (this.tdButtons[i].name === 'WTD') {\n          dateStart.setDate(dateStart.getDate() - dateStart.getDay());\n          dateStart.setHours(0);\n          dateStart.setMinutes(0);\n          dateStart.setSeconds(0);\n        } else if (this.tdButtons[i].name === 'Y') {\n          dateStart.setHours(0);\n          dateStart.setMinutes(0);\n          dateStart.setSeconds(0);\n          dateStart -= 86400000;\n        } else if (this.tdButtons[i].name === 'T') {\n          dateStart.setHours(0);\n          dateStart.setMinutes(0);\n          dateStart.setSeconds(0);\n          if (+this.endDataset === +dateStart) {\n            dateStart = +dateStart - 86400000;\n          }\n        }\n\n        if (dateEnd < dateStart) {\n          continue;\n        } else {\n          this.tdButtons[i].dateStart = dateStart.valueOf();\n          this.tdButtons[i].dateEnd = dateEnd.valueOf();\n          buttons.push(this.tdButtons[i]);\n        }\n      }\n      relativeTDButton.milliseconds = Infinity;\n      for (i = 0; i < this.tdButtons.length; i++) {\n        if (Math.abs(this.tdButtons[i].milliseconds - (this.endActiveWindow - this.startActiveWindow)) < relativeTDButton.milliseconds) {\n          relativeTDButton.milliseconds = this.tdButtons[i].milliseconds;\n          relativeTDButton.name = this.tdButtons[i].abbreviation;\n        }\n      }\n\n      this.standardContexualPeriods = buttons;\n      // this.drawButtonsContextual(this.standardContexualPeriods);\n    }\n\n    processMultipliers (timeArr) {\n      var self = this;\n      for (let i = 0; i < timeArr.length; i++) {\n        let len = timeArr[i].possibleFactors.length,\n          timeName = timeArr[i] && timeArr[i].name,\n          timeObj = timeArr && timeArr[i],\n          customMultipliers = self.extData && self.extData.customMultipliers || {};\n        timeObj.multipliers = [];\n        if (customMultipliers[timeName]) {\n          timeObj.multipliers = customMultipliers[timeName];\n        } else if (len === 1) {\n          timeObj.multipliers.push(timeObj.possibleFactors[0]);\n        } else if (len === 2) {\n          timeObj.multipliers.push(timeObj.possibleFactors[0]);\n          timeObj.multipliers.push(timeObj.possibleFactors[len - 1]);\n        } else {\n          timeObj.multipliers.push(timeObj.possibleFactors[0]);\n          timeObj.multipliers.push(Math.floor(timeObj.possibleFactors[len - 1] / 2));\n          timeObj.multipliers.push(timeObj.possibleFactors[len - 1]);\n        }\n      }\n      return timeArr;\n    }\n\n    /**\n     * A function to set the active period's\n     * start and end point\n     * @param  {number} date stamp - A UNIX timestamp to be set as the start point of active period\n     * @param  {number} date stamp - A UNIX timestamp to be set as the end point of active period\n     */\n    setActivePeriod (a, b) {\n      var start,\n        end;\n      if (arguments.length === 1) {\n        end = this.globalReactiveModel.model['x-axis-visible-range-end'];\n        start = end - arguments[0];\n      } else if (arguments.length === 2) {\n        start = arguments[0];\n        end = arguments[1];\n      }\n      this.startActiveWindow = start;\n      this.endActiveWindow = end;\n      if (this.periodButtonClicked) {\n        this.periodButtonClicked = false;\n        this.globalReactiveModel.model['x-axis-visible-range-start'] = this.startActiveWindow;\n        this.globalReactiveModel.model['x-axis-visible-range-end'] = this.endActiveWindow;\n      }\n      this.generateCalculatedButtons();\n      this.generateContextualButtons();\n    }\n\n    /**\n     * A function to set the start and end point of the\n     * entire time-line\n     * @param  {number} date stamp - A UNIX timestamp to be set as the start point of time-line\n     * @param  {number} date stamp - A UNIX timestamp to be set as the end point of time-line\n     */\n\n    /**\n     * A function to set the object to set the user preferences\n     */\n    configure (config) {\n      this.config = config;\n    }\n\n    /**\n     * Fusioncharts life cycle method for extension\n     */\n    init (require) {\n      var instance = this,\n        i = 0,\n        j = 0,\n        ii = 0,\n        jj = 0,\n        standardCalculatedPeriods = instance.standardCalculatedPeriods;\n      require([\n        'xAxis',\n        'yAxis',\n        'graphics',\n        'chart',\n        'dataset',\n        'PlotManager',\n        'canvasConfig',\n        'MarkerManager',\n        'reactiveModel',\n        'globalReactiveModel',\n        'spaceManagerInstance',\n        'smartLabel',\n        'extData',\n        'chartInstance',\n        function (\n              xAxis,\n              yAxis,\n              graphics,\n              chart,\n              dataset,\n              plotManager,\n              canvasConfig,\n              markerManager,\n              reactiveModel,\n              globalReactiveModel,\n              spaceManagerInstance,\n              smartLabel,\n              extData,\n              chartInstance) {\n          instance.xAxis = xAxis;\n          instance.yAxis = yAxis;\n          instance.graphics = graphics;\n          instance.chart = chart;\n          instance.dataset = dataset;\n          instance.plotManager = plotManager;\n          instance.markerManager = markerManager;\n          instance.canvasConfig = canvasConfig;\n          instance.reactiveModel = reactiveModel;\n          instance.globalReactiveModel = globalReactiveModel;\n          instance.spaceManagerInstance = spaceManagerInstance;\n          instance.smartLabel = smartLabel;\n          instance.extData = extData;\n          instance.chartInstance = chartInstance;\n        }\n      ]);\n      instance.endActiveWindow = instance.globalReactiveModel.model['x-axis-visible-range-end'];\n      instance.startActiveWindow = instance.globalReactiveModel.model['x-axis-visible-range-start'];\n      instance.startDataset = instance.globalReactiveModel.model['x-axis-absolute-range-start'];\n      instance.endDataset = instance.globalReactiveModel.model['x-axis-absolute-range-end'];\n      // instance.globalReactiveModel.model['_x-axis-visible-range-start'] += 124416000000;\n      instance.timeRules = instance.chartInstance.apiInstance.getComponentStore();\n      instance.timeRules = instance.timeRules.getCanvasByIndex(0).composition.impl;\n      instance.timeRules = instance.timeRules.getDataAggregator();\n      instance.timeRules = instance.timeRules.getAggregationTimeRules();\n      instance.timePeriods = instance.processMultipliers(instance.timeRules);\n      // instance.minimumBucket = +instance.globalReactiveModel['x-axis-maximum-allowed-ticks'] *\n      //   +instance.globalReactiveModel['minimum-consecutive-datestamp-diff;'];\n      // minimum-consecutive-datestamp-diff\n      // x-axis-maximum-allowed-ticks\n      // console.log(instance.globalReactiveModel);\n      // console.log(instance.globalReactiveModel.model['x-axis-maximum-allowed-ticks']);\n      // console.log(instance.globalReactiveModel.model['minimum-consecutive-datestamp-diff;']);\n      instance.setActivePeriod(instance.startActiveWindow, instance.endActiveWindow);\n      instance.toolbars = [];\n      instance.measurement = {};\n      instance.flag = true;\n\n      instance.toolbars.push(instance.createToolbar());\n\n      instance.globalReactiveModel.onPropsChange(['x-axis-visible-range-start', 'x-axis-visible-range-end'], propsHandler);\n      function propsHandler (start, end, flag) {\n        instance.lastDisposed = instance.lastDisposed || 0;\n        if (flag) {\n          instance.launchedPropsHandler = false;\n          start = instance.propsStart;\n          end = instance.propsEnd;\n        }\n        instance.propsStart = start;\n        instance.propsEnd = end;\n        if (+new Date() - instance.lastDisposed < 400) {\n          if (!instance.launchedPropsHandler) {\n            instance.launchedPropsHandler = true;\n            setTimeout(propsHandler.bind(null, 0, 0, true));\n          }\n          return;\n        }\n        instance.lastDisposed = +new Date();\n        instance.setActivePeriod(start[1], end[1]);\n        for (let i = 0; i < instance.standardCalculatedPeriods.length; i++) {\n          for (let j = 0; j < instance.standardCalculatedPeriods[i].multipliers.length; j++) {\n            if ((end[1] - start[1]) >= (instance.endDataset - instance.startDataset)) {\n              instance.clickedId = 'ALL';\n            } else if ((end[1] - start[1]) >= instance.timePeriods[i].multipliers[j] * instance.timePeriods[i].interval) {\n              instance.clickedId = instance.timePeriods[i].multipliers[j] + instance.timePeriods[i].abbreviation.single;\n            }\n          }\n        }\n\n        if (!instance.cantDispose) {\n          instance.cantDispose = true;\n          instance.toolbar.dispose();\n          instance.toolbars.pop();\n          instance.toolbars.push(instance.createToolbar());\n          instance.getLogicalSpace();\n          instance.draw();\n        } else {\n          instance.cantDispose = false;\n        }\n      }\n      return instance;\n    };\n\n    createToolbar () {\n      var unigroup,\n        toolbar,\n        calculatedButtons,\n        contextualButtons,\n        allButton,\n        self = this,\n        deductorAr = [],\n        startMultiplier,\n        deductor,\n        i,\n        j,\n        contextualConfig,\n        fromDateLabel,\n        group;\n      group = new this.toolbox.ComponentGroup({\n        paper: this.graphics.paper,\n        chart: this.chart,\n        smartLabel: this.smartLabel,\n        chartContainer: this.graphics.container\n      });\n\n      unigroup = new this.toolbox.UniSelectComponentGroup({\n        paper: this.graphics.paper,\n        chart: this.chart,\n        smartLabel: this.smartLabel,\n        chartContainer: this.graphics.container\n      });\n      unigroup.setConfig({\n        fill: '#fff',\n        borderThickness: 0\n      });\n      group.setConfig({\n        fill: '#fff',\n        borderThickness: 0\n      });\n      toolbar = new this.HorizontalToolbar({\n        paper: this.graphics.paper,\n        chart: this.chart,\n        smartLabel: this.smartLabel,\n        chartContainer: this.graphics.container\n      });\n      toolbar.setConfig({\n        fill: '#fff',\n        borderThickness: 0\n      });\n      fromDateLabel = new this.toolbox.Label('Zoom:', {\n        smartLabel: this.smartLabel,\n        paper: this.graphics.paper\n      }, self.extData.style['label-config']);\n      group.addSymbol(fromDateLabel);\n      allButton = new this.toolbox.Symbol('ALL', true, {\n        paper: this.graphics.paper,\n        chart: this.chart,\n        smartLabel: this.smartLabel,\n        chartContainer: this.graphics.container\n      }, self.extData.style['all-config']).attachEventHandlers({\n        click: function () {\n          self.periodButtonClicked = true;\n          self.clickedId = 'ALL';\n          self.setActivePeriod(self.startDataset, self.endDataset);\n          // toolbar.dispose();\n          // self.toolbars.pop();\n          // self.toolbars.push(self.createToolbar());\n          // self.getLogicalSpace();\n          // self.draw();\n          // self._ref.reAllocate(self.parentGroup);\n        },\n        tooltext: 'ALL'\n      });\n\n      unigroup.addSymbol(allButton);\n      for (i = 0; i < this.standardCalculatedPeriods.length; i++) {\n        for (j = this.standardCalculatedPeriods[i].multipliers.length - 1; j >= 0; j--) {\n          deductorAr.push(self.standardCalculatedPeriods[i].multipliers[j] * self.standardCalculatedPeriods[i].milliseconds);\n        }\n      }\n\n      calculatedButtons = {};\n      for (let key in this.calculatedButtonObj) {\n        this.calculatedButtonObj[key].hide();\n      }\n      for (let i = self.startPointUnit; i >= 0; i--) {\n        if (i === self.startPointUnit) {\n          startMultiplier = self.startPointMultiplier;\n        } else {\n          startMultiplier = self.standardCalculatedPeriods[i].multipliers.length - 1;\n        }\n        for (let j = startMultiplier; j >= 0; j--) {\n          let keyAbb = self.standardCalculatedPeriods[i].multipliers[j] + self.standardCalculatedPeriods[i].abbreviation;\n          if (this.calculatedButtonObj[keyAbb] === undefined) {\n            calculatedButtons = new this.toolbox.Symbol(keyAbb, true, {\n              paper: this.graphics.paper,\n              chart: this.chart,\n              smartLabel: this.smartLabel,\n              chartContainer: this.graphics.container\n            }, self.extData.style['calculated-config']).attachEventHandlers({\n              'click': function () {\n                self.periodButtonClicked = true;\n                self.clickedId = self.standardCalculatedPeriods[i].multipliers[j] + self.standardCalculatedPeriods[i].abbreviation;\n                deductor = (self.standardCalculatedPeriods[i].multipliers[j] * self.standardCalculatedPeriods[i].milliseconds);\n                self.setActivePeriod(deductor);\n                // toolbar.dispose();\n                // self.toolbars.pop();\n                // self.toolbars.push(self.createToolbar());\n                // self.getLogicalSpace();\n                // self.draw();\n                // self._ref.reAllocate(self.parentGroup);\n                // this.toolbars[this.toolbars.length - 1] = this.createToolbar();\n              },\n              tooltext: self.standardCalculatedPeriods[i].multipliers[j] + ' ' + self.standardCalculatedPeriods[i].description\n            });\n            this.calculatedButtonObj[keyAbb] = calculatedButtons;\n          }\n          // unigroup.addSymbol(calculatedButtons[i]);\n          this.calculatedButtonObj[keyAbb].show();\n          unigroup.addSymbol(this.calculatedButtonObj[keyAbb]);\n        }\n      }\n\n      // for (let i = self.startPointUnit; i >= 0; i--) {\n      //   for (let j = startMultiplier; j >= 0; j--) {\n      //     let keyAbb = self.standardCalculatedPeriods[i].multipliers[j] + self.standardCalculatedPeriods[i].abbreviation;\n      //     unigroup.addSymbol(this.calculatedButtonObj[keyAbb]);\n      //   }\n      // }\n\n      contextualButtons = [];\n\n      for (let i = 0; i < this.standardContexualPeriods.length; i++) {\n        contextualConfig = (i === 0) ? self.extData.style['contextual-config-first'] : self.extData.style['contextual-config'];\n        contextualButtons[i] = new this.toolbox.Symbol(this.standardContexualPeriods[i].abbreviation, true, {\n          paper: this.graphics.paper,\n          chart: this.chart,\n          smartLabel: this.smartLabel,\n          chartContainer: this.graphics.container\n        }, contextualConfig).attachEventHandlers({\n          'click': function () {\n            self.periodButtonClicked = true;\n            self.clickedId = self.standardContexualPeriods[i].abbreviation;\n            self.setActivePeriod(self.standardContexualPeriods[i].dateStart, self.standardContexualPeriods[i].dateEnd);\n            // toolbar.dispose();\n            // self.toolbars.pop();\n            // self.toolbars.push(self.createToolbar());\n            // self.getLogicalSpace();\n            // self.draw();\n            // self._ref.reAllocate(self.parentGroup);\n          },\n          tooltext: this.standardContexualPeriods[i].description\n        });\n        unigroup.addSymbol(contextualButtons[i]);\n      }\n\n      this.SymbolStore.register('textBoxIcon', function (x, y, rad, w, h, padX, padY) {\n        var x1 = x - w / 2 + padX / 2,\n          x2 = x + w / 2 - padX / 2,\n          y1 = y - h / 2 + padY / 2,\n          y2 = y + h / 2 - padY / 2;\n\n        return ['M', x1, y1, 'L', x2, y1, 'L', x2, y2, 'L', x1, y2, 'Z'];\n      });\n\n      toolbar.addComponent(group);\n      toolbar.addComponent(unigroup);\n      this.toolbar = toolbar;\n      return toolbar;\n    };\n\n    getLogicalSpace (availableWidth = this._pWidth, availableHeight = this._pHeight) {\n      // availableWidth /= 2;\n      var logicalSpace,\n        width = 420, // width hardcoded; TODO: make it dynamic\n        height = 0,\n        i,\n        ln;\n\n      for (i = 0, ln = this.toolbars.length; i < ln; i++) {\n        logicalSpace = this.toolbars[i].getLogicalSpace(availableWidth, availableHeight);\n        // width = Math.max(logicalSpace.width, width);\n        height += logicalSpace.height;\n        this.toolbars[i].width = logicalSpace.width;\n        this.toolbars[i].height = logicalSpace.height;\n      }\n      height += this.padding;\n      return {\n        width: width,\n        height: height\n      };\n    };\n\n    getDefaultGroup () {\n      return this.parentGroup;\n    }\n\n    placeInCanvas () {\n      var self = this;\n      self.padding = 5;\n      self.spaceManagerInstance.add([{\n        name: function () {\n          return 'standard-period-selector-ext';\n        },\n        ref: function (obj) {\n          return obj['0'];\n        },\n        self: function () {\n          return self;\n        },\n        priority: function () {\n          return 2;\n        },\n        layout: function (obj) {\n          return obj[self.extData.layout];\n        },\n        orientation: [{\n          type: function (obj) {\n            return obj[self.extData.orientation];\n          },\n          position: [{\n            type: function (obj) {\n              return obj[self.extData.posWrtCanvas];\n            },\n            alignment: [{\n              type: function (obj) {\n                return obj[self.extData.alignment];\n              },\n              dimensions: [function () {\n                var parent = this.getParentComponentGroup();\n                self._ref = this;\n                return self.getLogicalSpace((self._pWidth = parent.getWidth()), (self._pHeight = parent.getHeight()));\n              }]\n            }]\n          }]\n        }]\n      }]);\n    };\n\n    setDrawingConfiguration (x, y, width, height, group) {\n      var mes = this.measurement;\n      mes.x = x;\n      mes.y = y;\n      mes.width = width;\n      mes.height = height;\n\n      this.parentGroup = group;\n\n      return this;\n    };\n\n    draw (x, y, width, height, group) {\n      var measurement = this.measurement,\n        toolbars = this.toolbars,\n        ln,\n        i,\n        toolbar,\n        symbolList,\n        boundElement,\n        bBox,\n        x1,\n        x2,\n        y2,\n        selectLine;\n\n      this.flag = true;\n      selectLine = this.saveSelectLine || this.graphics.paper.path({\n        'stroke': '#c95a5a',\n        'stroke-width': '2px'\n      }).toFront();\n      x = x === undefined ? measurement.x : x;\n      y = y === undefined ? measurement.y : y;\n      width = width === undefined ? measurement.width : width;\n      height = height === undefined ? measurement.height : height;\n      group = group === undefined ? this.parentGroup : group;\n      if (width && height) {\n        for (i = 0, ln = toolbars.length; i < ln; i++) {\n          toolbar = toolbars[i];\n          toolbar.draw(x, y, group);\n        }\n      }\n      this.saveSelectLine = selectLine;\n      symbolList = toolbars[0].componentGroups[1].symbolList;\n      for (let i = 0, ii = symbolList.length; i < ii; i++) {\n        if (symbolList[i].symbol === this.clickedId) {\n          boundElement = symbolList[i].getBoundElement();\n          bBox = boundElement.getBBox();\n          x1 = bBox.x;\n          x2 = bBox.x2;\n          y2 = bBox.y2;\n\n          selectLine.attr({\n            path: ['M', x1 - 0.5, y2 - 0.5, 'L', x2 + 0.5, y2 - 0.5]\n          });\n        }\n      }\n      this.minimumBucket = this.globalReactiveModel.model['minimum-consecutive-datestamp-diff'] * this.globalReactiveModel.model['x-axis-maximum-allowed-ticks'];\n    };\n  }\n  return StandardPeriodSelector;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/standard-period-selector.js"],"sourceRoot":""}
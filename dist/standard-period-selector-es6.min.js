(function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId]){return installedModules[moduleId].exports}var module=installedModules[moduleId]={exports:{},id:moduleId,loaded:false };modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.loaded=true;return module.exports;}__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.p="";return __webpack_require__(0);})([function(module,exports,__webpack_require__){module.exports=__webpack_require__(1);},function(module,exports,__webpack_require__){'use strict';const StandardPeriodSelector=__webpack_require__(2);window.stPS=new StandardPeriodSelector();window.timePeriods=[{'name':'minute','milliseconds':60000,'startingPoint':0,'abbreviation':'min','description':'MINUTE','parent':'hour','multipliers':[1,15,30]},{'name':'hour','milliseconds':3600000,'startingPoint':0,'abbreviation':'hr','description':'HOUR','parent':'day','multipliers':[1,3,6,12]},{'name':'day','milliseconds':86400000,'startingPoint':0,'abbreviation':'D','description':'DAY','parent':'month','multipliers':[1,7,15]},{'name':'month','milliseconds':2592000000,'startingPoint':0,'abbreviation':'M','description':'MONTH','parent':'year','multipliers':[1,3,6]},{'name':'year','milliseconds':31104000000,'startingPoint':0,'abbreviation':'Y','description':'YEAR','multipliers':[1,3,5]}];},function(module,exports){'use strict';class StandardPeriodSelector{constructor(){this.all=1;this.calculatedPeriods=[];this.startDataset=0;this.endDataset=990019999999;this.startActiveWindow=55000000;this.endActiveWindow=60000000;this.standardCalculatedPeriods=[];this.standardContexualPeriods=[];this.timePeriods=[{'name':'second','milliseconds':1000,'startingPoint':0,'total':60,'abbreviation':'sec','description':'SECOND','parent':'minute','multipliers':[1,5,15,30]},{'name':'minute','milliseconds':60000,'startingPoint':0,'total':60,'abbreviation':'min','description':'MINUTE','parent':'hour','multipliers':[1,5,15,30]},{'name':'hour','milliseconds':3600000,'startingPoint':0,'total':24,'abbreviation':'hr','description':'HOUR','parent':'day','multipliers':[1,3,6,12]},{'name':'day','milliseconds':86400000,'startingPoint':0,'total':30,'abbreviation':'D','description':'DAY','parent':'month','multipliers':[1,7,15]},{'name':'month','milliseconds':2592000000,'startingPoint':0,'total':12,'abbreviation':'M','description':'MONTH','parent':'year','multipliers':[1,3,6]},{'name':'year','milliseconds':31104000000,'startingPoint':0,'abbreviation':'Y','description':'YEAR','multipliers':[1,3,5]}];this.tdButtons=[{'name':'YTD','abbreviation':'YTD','parent':'year','milliseconds':31104000000,'description':'Year to Date'},{'name':'QTD','abbreviation':'QTD','parent':'month','multiplier':3,'milliseconds':7776000000,'description':'Quarter to Date'},{'name':'MTD','abbreviation':'MTD','parent':'month','milliseconds':2592000000,'description':'Month to Date'},{'name':'WTD','abbreviation':'WTD','parent':'day','multiplier':7,'milliseconds':604800000,'description':'Week to Date'},{'name':'Y','abbreviation':'Y','parent':'day','milliseconds':86400000,'description':'Yesterday'},{'name':'T','abbreviation':'T','parent':'day','milliseconds':86400000,'description':'Today'}];this.config={}}generateCalculatedButtons(){var targetBlock=this.endActiveWindow-this.startDataset,i=0,j=0,activeWindow=this.endActiveWindow-this.startActiveWindow;this.standardCalculatedPeriods=[];console.log('activeWindow',activeWindow);for(i=0;i<this.timePeriods.length;i+=1){if(targetBlock/this.timePeriods[i].milliseconds>=1){if(Math.floor((activeWindow)/this.timePeriods[i].milliseconds)<1){this.standardCalculatedPeriods.push({'abbreviation':this.timePeriods[i].abbreviation,'description':this.timePeriods[i].description,'milliseconds':this.timePeriods[i].milliseconds,'multipliers':[1]})}else{this.standardCalculatedPeriods.push({'abbreviation':this.timePeriods[i].abbreviation,'description':this.timePeriods[i].description,'milliseconds':this.timePeriods[i].milliseconds,'multipliers':[]});for(j=0;j<this.timePeriods[i].multipliers.length;j+=1){if(activeWindow/10<this.timePeriods[i].multipliers[j]*this.timePeriods[i].milliseconds){this.standardCalculatedPeriods[this.standardCalculatedPeriods.length-1].multipliers.push(this.timePeriods[i].multipliers[j])}}}}}this.drawButtonsCalculated(this.standardCalculatedPeriods)}generateContextualButtons(){var buttons=[],i=0,endStamp=this.endDataset,dateStart=new Date(endStamp),dateEnd=new Date(endStamp);for(;i<this.tdButtons.length;i+=1){dateStart=new Date(endStamp);if(this.tdButtons[i].name==='YTD'){console.log('YTD');dateStart.setMonth(0);dateStart.setDate(0);dateStart.setHours(0);dateStart.setMinutes(0);dateStart.setSeconds(0)}else if(this.tdButtons[i].name==='MTD'){console.log('MTD');dateStart.setDate(0);dateStart.setHours(0);dateStart.setMinutes(0);dateStart.setSeconds(0)}else if(this.tdButtons[i].name==='QTD'){console.log('QTD');dateStart.setMonth(11-(dateStart.getMonth()%4));dateStart.setDate(0);dateStart.setHours(0);dateStart.setMinutes(0);dateStart.setSeconds(0)}else if(this.tdButtons[i].name==='WTD'){console.log('WTD');dateStart.setDate(dateStart.getDate()-dateStart.getDay());dateStart.setHours(0);dateStart.setMinutes(0);dateStart.setSeconds(0)}else if(this.tdButtons[i].name==='Y'){console.log('Y');dateStart.setHours(0);dateStart.setMinutes(0);dateStart.setSeconds(0);dateStart-=86400000}else if(this.tdButtons[i].name==='T'){console.log('T');dateStart.setHours(0);dateStart.setMinutes(0);dateStart.setSeconds(0)}if(dateEnd<dateStart){continue}else{this.tdButtons[i].dateStart=dateStart.valueOf();this.tdButtons[i].dateEnd=dateEnd.valueOf();buttons.push(this.tdButtons[i])}}this.standardContexualPeriods=buttons;this.drawButtonsContextual(this.standardContexualPeriods)}setActivePeriod(start,end){console.log(start,end);this.startActiveWindow=start;this.endActiveWindow=end;document.getElementById('startActiveRange').innerHTML=new Date(this.startActiveWindow);document.getElementById('endActiveRange').innerHTML=new Date(this.endActiveWindow);this.generateCalculatedButtons()}setTimeline(start,end){console.log(start,end);this.startDataset=start;this.endDataset=end;document.getElementById('startActiveRange').innerHTML=new Date(this.startDataset);document.getElementById('endActiveRange').innerHTML=new Date(this.endDataset);this.generateCalculatedButtons()}drawButtonsCalculated(standardPeriods){var calculatedButtons=document.getElementById('calculated'),btn,i=0,j=0,multiplierValue=0,self=this;calculatedButtons.innerHTML='';for(i=standardPeriods.length-1;i>=0;i-=1){for(j=standardPeriods[i].multipliers.length-1;j>=0;j-=1){btn=document.createElement('BUTTON');btn.id=standardPeriods[i].multipliers[j]+standardPeriods[i].abbreviation;btn.innerHTML=standardPeriods[i].multipliers[j]+standardPeriods[i].abbreviation;multiplierValue=standardPeriods[i].multipliers[j]*standardPeriods[i].milliseconds;btn.multiplierValue=multiplierValue;btn.addEventListener('click',function(event){self.setActivePeriod(self.endActiveWindow-event.srcElement.multiplierValue,self.endActiveWindow);console.log(self.endActiveWindow-event.srcElement.multiplierValue,self.endActiveWindow)});calculatedButtons.appendChild(btn)}}this.standardCalculatedPeriods=[]}drawButtonsContextual(standardPeriods){var contextualButtons=document.getElementById('contextual'),btn,i=0,self=this;contextualButtons.innerHTML='';console.log(standardPeriods);for(i=0;i<standardPeriods.length;i+=1){btn=document.createElement('BUTTON');btn.id=standardPeriods[i].abbreviation;btn.innerHTML=standardPeriods[i].abbreviation;btn.addEventListener('click',eventBtn.bind(this,standardPeriods[i]));contextualButtons.appendChild(btn)}function eventBtn(obj){self.setActivePeriod(obj.dateStart,obj.dateEnd);console.log(obj.dateStart,obj.dateEnd)}this.standardContextualPeriods=[]}drawButtonAll(standardPeriods){var allButtons=document.getElementById('allButton'),btn,self=this;allButtons.innerHTML='';console.log(standardPeriods);btn=document.createElement('BUTTON');btn.id='all';btn.innerHTML='ALL';btn.addEventListener('click',function(event){self.setActivePeriod(self.startDataset,self.endDataset)});allButtons.appendChild(btn)}configure(config){this.config=config}init(require){require('X-Axis','Y-Axis','graphics','chart','extensionData','dateFormatter',function(x,y,graphics,chart,extData,dateFormatter){})}placeInCanvas(){}draw(){}dispose(){}}if(typeof module!=='undefined'&&typeof module.exports!=='undefined'){module.exports=StandardPeriodSelector}else{window.StandardPeriod=StandardPeriodSelector}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAgOWMyMmZjNGVmOTI2Yzk3ZTEwMGMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9zdGFuZGFyZC1wZXJpb2Qtc2VsZWN0b3IuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHVCQUFlO0FBQ2Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7O0FDdENBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUM7O0FBRUQ7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEVBQUMsR0FBRzs7Ozs7OztBQ3hESjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWUsNkJBQTZCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVc7QUFDWCxVQUFTLE9BQU87QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVc7QUFDWDtBQUNBLHNCQUFxQiw0Q0FBNEM7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVSwyQkFBMkI7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsUUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZUFBYyxPQUFPO0FBQ3JCLGVBQWMsT0FBTztBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZUFBYyxPQUFPO0FBQ3JCLGVBQWMsT0FBTztBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGVBQWMsTUFBTTtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBd0MsUUFBUTtBQUNoRCwwREFBeUQsUUFBUTtBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGVBQWMsTUFBTTtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWUsNEJBQTRCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsZUFBYyxNQUFNO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsUUFBTztBQUNQOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxFQUFDO0FBQ0Q7QUFDQSIsImZpbGUiOiJzdGFuZGFyZC1wZXJpb2Qtc2VsZWN0b3ItZXM2Lm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKVxuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuXG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRleHBvcnRzOiB7fSxcbiBcdFx0XHRpZDogbW9kdWxlSWQsXG4gXHRcdFx0bG9hZGVkOiBmYWxzZVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sb2FkZWQgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKDApO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHdlYnBhY2svYm9vdHN0cmFwIDljMjJmYzRlZjkyNmM5N2UxMDBjIiwiJ3VzZSBzdHJpY3QnO1xuY29uc3QgU3RhbmRhcmRQZXJpb2RTZWxlY3RvciA9IHJlcXVpcmUoJy4vc3RhbmRhcmQtcGVyaW9kLXNlbGVjdG9yJyk7XG5cbndpbmRvdy5zdFBTID0gbmV3IFN0YW5kYXJkUGVyaW9kU2VsZWN0b3IoKTtcbndpbmRvdy50aW1lUGVyaW9kcyA9IFt7XG4gICduYW1lJzogJ21pbnV0ZScsXG4gICdtaWxsaXNlY29uZHMnOiA2MDAwMCxcbiAgJ3N0YXJ0aW5nUG9pbnQnOiAwLFxuICAnYWJicmV2aWF0aW9uJzogJ21pbicsXG4gICdkZXNjcmlwdGlvbic6ICdNSU5VVEUnLFxuICAncGFyZW50JzogJ2hvdXInLFxuICAnbXVsdGlwbGllcnMnOiBbMSwgMTUsIDMwXVxufSwge1xuICAnbmFtZSc6ICdob3VyJyxcbiAgJ21pbGxpc2Vjb25kcyc6IDM2MDAwMDAsXG4gICdzdGFydGluZ1BvaW50JzogMCxcbiAgJ2FiYnJldmlhdGlvbic6ICdocicsXG4gICdkZXNjcmlwdGlvbic6ICdIT1VSJyxcbiAgJ3BhcmVudCc6ICdkYXknLFxuICAnbXVsdGlwbGllcnMnOiBbMSwgMywgNiwgMTJdXG59LCB7XG4gICduYW1lJzogJ2RheScsXG4gICdtaWxsaXNlY29uZHMnOiA4NjQwMDAwMCxcbiAgJ3N0YXJ0aW5nUG9pbnQnOiAwLFxuICAnYWJicmV2aWF0aW9uJzogJ0QnLFxuICAnZGVzY3JpcHRpb24nOiAnREFZJyxcbiAgJ3BhcmVudCc6ICdtb250aCcsXG4gICdtdWx0aXBsaWVycyc6IFsxLCA3LCAxNV1cbn0sIHtcbiAgJ25hbWUnOiAnbW9udGgnLFxuICAnbWlsbGlzZWNvbmRzJzogMjU5MjAwMDAwMCxcbiAgJ3N0YXJ0aW5nUG9pbnQnOiAwLFxuICAnYWJicmV2aWF0aW9uJzogJ00nLFxuICAnZGVzY3JpcHRpb24nOiAnTU9OVEgnLFxuICAncGFyZW50JzogJ3llYXInLFxuICAnbXVsdGlwbGllcnMnOiBbMSwgMywgNl1cbn0sIHtcbiAgJ25hbWUnOiAneWVhcicsXG4gICdtaWxsaXNlY29uZHMnOiAzMTEwNDAwMDAwMCxcbiAgJ3N0YXJ0aW5nUG9pbnQnOiAwLFxuICAnYWJicmV2aWF0aW9uJzogJ1knLFxuICAnZGVzY3JpcHRpb24nOiAnWUVBUicsXG4gICdtdWx0aXBsaWVycyc6IFsxLCAzLCA1XVxufV07XG5cbi8vIHZhciBmYyA9IG5ldyBGdXNpb25DaGFydHMoKTtcblxuLyogRnVzaW9uQ2hhcnRzLnJlZ2lzdGVyKCdleHRlbnNpb24nLCBbJ3N0YW5kYXJkLXBlcmlvZC1zZWxlY3RvcicsIGZ1bmN0aW9uIChpZCkge1xuICB2YXIgZ2xvYmFsID0gdGhpcztcbiAgdmFyIGV4dEFQSSA9IGdsb2JhbC5leHRBUEk7XG5cbiAgLy8gdmFyIG90aGVyQVBJID0gRnVzaW9uQ2hhcnRzLmdldEV4dENvbXBvbmVudChpZCwgJ2FwaScsICdsZWdhY3lleHRhcGknKTtcbiAgLy8gdmFyIHRvb2xCb3hBcGkgPSBGdXNpb25DaGFydHMuZ2V0Q29tcG9uZW50KCdhcGknLCAndG9vbGJveCcpO1xuXG4gIHdpbmRvdy5zdFBTID0gbmV3IFN0YW5kYXJkUGVyaW9kU2VsZWN0b3IoKTtcbiAgZXh0QVBJKHdpbmRvdy5zdFBTKTtcbn1dKTsgKi9cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDbGFzcyBkZWZpbml0aW9uIG9mIFN0YW5kYXJkUGVyaW9kU2VsZWN0b3JcbiAqL1xuXG5jbGFzcyBTdGFuZGFyZFBlcmlvZFNlbGVjdG9yIHtcbiAgY29uc3RydWN0b3IgKCkge1xuICAgIC8qKlxuICAgICAqIEBwcml2YXRlXG4gICAgICovXG4gICAgdGhpcy5hbGwgPSAxO1xuICAgIHRoaXMuY2FsY3VsYXRlZFBlcmlvZHMgPSBbXTtcbiAgICB0aGlzLnN0YXJ0RGF0YXNldCA9IDA7XG4gICAgdGhpcy5lbmREYXRhc2V0ID0gOTkwMDE5OTk5OTk5O1xuICAgIHRoaXMuc3RhcnRBY3RpdmVXaW5kb3cgPSA1NTAwMDAwMDtcbiAgICB0aGlzLmVuZEFjdGl2ZVdpbmRvdyA9IDYwMDAwMDAwO1xuICAgIHRoaXMuc3RhbmRhcmRDYWxjdWxhdGVkUGVyaW9kcyA9IFtdO1xuICAgIHRoaXMuc3RhbmRhcmRDb250ZXh1YWxQZXJpb2RzID0gW107XG4gICAgdGhpcy50aW1lUGVyaW9kcyA9IFt7XG4gICAgICAnbmFtZSc6ICdzZWNvbmQnLFxuICAgICAgJ21pbGxpc2Vjb25kcyc6IDEwMDAsXG4gICAgICAnc3RhcnRpbmdQb2ludCc6IDAsXG4gICAgICAndG90YWwnOiA2MCxcbiAgICAgICdhYmJyZXZpYXRpb24nOiAnc2VjJyxcbiAgICAgICdkZXNjcmlwdGlvbic6ICdTRUNPTkQnLFxuICAgICAgJ3BhcmVudCc6ICdtaW51dGUnLFxuICAgICAgJ211bHRpcGxpZXJzJzogWzEsIDUsIDE1LCAzMF1cbiAgICB9LCB7XG4gICAgICAnbmFtZSc6ICdtaW51dGUnLFxuICAgICAgJ21pbGxpc2Vjb25kcyc6IDYwMDAwLFxuICAgICAgJ3N0YXJ0aW5nUG9pbnQnOiAwLFxuICAgICAgJ3RvdGFsJzogNjAsXG4gICAgICAnYWJicmV2aWF0aW9uJzogJ21pbicsXG4gICAgICAnZGVzY3JpcHRpb24nOiAnTUlOVVRFJyxcbiAgICAgICdwYXJlbnQnOiAnaG91cicsXG4gICAgICAnbXVsdGlwbGllcnMnOiBbMSwgNSwgMTUsIDMwXVxuICAgIH0sIHtcbiAgICAgICduYW1lJzogJ2hvdXInLFxuICAgICAgJ21pbGxpc2Vjb25kcyc6IDM2MDAwMDAsXG4gICAgICAnc3RhcnRpbmdQb2ludCc6IDAsXG4gICAgICAndG90YWwnOiAyNCxcbiAgICAgICdhYmJyZXZpYXRpb24nOiAnaHInLFxuICAgICAgJ2Rlc2NyaXB0aW9uJzogJ0hPVVInLFxuICAgICAgJ3BhcmVudCc6ICdkYXknLFxuICAgICAgJ211bHRpcGxpZXJzJzogWzEsIDMsIDYsIDEyXVxuICAgIH0sIHtcbiAgICAgICduYW1lJzogJ2RheScsXG4gICAgICAnbWlsbGlzZWNvbmRzJzogODY0MDAwMDAsXG4gICAgICAnc3RhcnRpbmdQb2ludCc6IDAsXG4gICAgICAndG90YWwnOiAzMCxcbiAgICAgICdhYmJyZXZpYXRpb24nOiAnRCcsXG4gICAgICAnZGVzY3JpcHRpb24nOiAnREFZJyxcbiAgICAgICdwYXJlbnQnOiAnbW9udGgnLFxuICAgICAgJ211bHRpcGxpZXJzJzogWzEsIDcsIDE1XVxuICAgIH0sIHtcbiAgICAgICduYW1lJzogJ21vbnRoJyxcbiAgICAgICdtaWxsaXNlY29uZHMnOiAyNTkyMDAwMDAwLFxuICAgICAgJ3N0YXJ0aW5nUG9pbnQnOiAwLFxuICAgICAgJ3RvdGFsJzogMTIsXG4gICAgICAnYWJicmV2aWF0aW9uJzogJ00nLFxuICAgICAgJ2Rlc2NyaXB0aW9uJzogJ01PTlRIJyxcbiAgICAgICdwYXJlbnQnOiAneWVhcicsXG4gICAgICAnbXVsdGlwbGllcnMnOiBbMSwgMywgNl1cbiAgICB9LCB7XG4gICAgICAnbmFtZSc6ICd5ZWFyJyxcbiAgICAgICdtaWxsaXNlY29uZHMnOiAzMTEwNDAwMDAwMCxcbiAgICAgICdzdGFydGluZ1BvaW50JzogMCxcbiAgICAgICdhYmJyZXZpYXRpb24nOiAnWScsXG4gICAgICAnZGVzY3JpcHRpb24nOiAnWUVBUicsXG4gICAgICAnbXVsdGlwbGllcnMnOiBbMSwgMywgNV1cbiAgICB9XTtcbiAgICB0aGlzLnRkQnV0dG9ucyA9IFtcbiAgICAgIHtcbiAgICAgICAgJ25hbWUnOiAnWVREJyxcbiAgICAgICAgJ2FiYnJldmlhdGlvbic6ICdZVEQnLFxuICAgICAgICAncGFyZW50JzogJ3llYXInLFxuICAgICAgICAnbWlsbGlzZWNvbmRzJzogMzExMDQwMDAwMDAsXG4gICAgICAgICdkZXNjcmlwdGlvbic6ICdZZWFyIHRvIERhdGUnXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnbmFtZSc6ICdRVEQnLFxuICAgICAgICAnYWJicmV2aWF0aW9uJzogJ1FURCcsXG4gICAgICAgICdwYXJlbnQnOiAnbW9udGgnLFxuICAgICAgICAnbXVsdGlwbGllcic6IDMsXG4gICAgICAgICdtaWxsaXNlY29uZHMnOiA3Nzc2MDAwMDAwLFxuICAgICAgICAnZGVzY3JpcHRpb24nOiAnUXVhcnRlciB0byBEYXRlJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ25hbWUnOiAnTVREJyxcbiAgICAgICAgJ2FiYnJldmlhdGlvbic6ICdNVEQnLFxuICAgICAgICAncGFyZW50JzogJ21vbnRoJyxcbiAgICAgICAgJ21pbGxpc2Vjb25kcyc6IDI1OTIwMDAwMDAsXG4gICAgICAgICdkZXNjcmlwdGlvbic6ICdNb250aCB0byBEYXRlJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ25hbWUnOiAnV1REJyxcbiAgICAgICAgJ2FiYnJldmlhdGlvbic6ICdXVEQnLFxuICAgICAgICAncGFyZW50JzogJ2RheScsXG4gICAgICAgICdtdWx0aXBsaWVyJzogNyxcbiAgICAgICAgJ21pbGxpc2Vjb25kcyc6IDYwNDgwMDAwMCxcbiAgICAgICAgJ2Rlc2NyaXB0aW9uJzogJ1dlZWsgdG8gRGF0ZSdcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICduYW1lJzogJ1knLFxuICAgICAgICAnYWJicmV2aWF0aW9uJzogJ1knLFxuICAgICAgICAncGFyZW50JzogJ2RheScsXG4gICAgICAgICdtaWxsaXNlY29uZHMnOiA4NjQwMDAwMCxcbiAgICAgICAgJ2Rlc2NyaXB0aW9uJzogJ1llc3RlcmRheSdcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICduYW1lJzogJ1QnLFxuICAgICAgICAnYWJicmV2aWF0aW9uJzogJ1QnLFxuICAgICAgICAncGFyZW50JzogJ2RheScsXG4gICAgICAgICdtaWxsaXNlY29uZHMnOiA4NjQwMDAwMCxcbiAgICAgICAgJ2Rlc2NyaXB0aW9uJzogJ1RvZGF5J1xuICAgICAgfVxuICAgIF07XG4gICAgdGhpcy5jb25maWcgPSB7fTtcbiAgfVxuXG4gIC8qKlxuICAgKiBBIGZ1bmN0aW9uIHRvIGdlbmVyYXRlIHRoZSBjYWxjdWxhdGVkIGJ1dHRvbnMgdXNpbmdcbiAgICogdGhlIGFjdGl2ZSByYW5nZSBhbmQgdGhlIGxvY2F0aW9uIG9mIHRoZSBhY3RpdmUgcmFuZ2VcbiAgICovXG4gIGdlbmVyYXRlQ2FsY3VsYXRlZEJ1dHRvbnMgKCkge1xuICAgIHZhciB0YXJnZXRCbG9jayA9IHRoaXMuZW5kQWN0aXZlV2luZG93IC0gdGhpcy5zdGFydERhdGFzZXQsXG4gICAgICBpID0gMCxcbiAgICAgIGogPSAwLFxuICAgICAgYWN0aXZlV2luZG93ID0gdGhpcy5lbmRBY3RpdmVXaW5kb3cgLSB0aGlzLnN0YXJ0QWN0aXZlV2luZG93O1xuICAgIHRoaXMuc3RhbmRhcmRDYWxjdWxhdGVkUGVyaW9kcyA9IFtdO1xuICAgIGNvbnNvbGUubG9nKCdhY3RpdmVXaW5kb3cnLCBhY3RpdmVXaW5kb3cpO1xuICAgIGZvciAoaSA9IDA7IGkgPCB0aGlzLnRpbWVQZXJpb2RzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAvLyBjaGVja2luZyB3aGV0aGVyIHRoZSB1bml0IGlzIGFwcGxpY2FibGUgZm9yIHRoZSBjdXJyZW50IHRhcmdldCBibG9ja1xuICAgICAgaWYgKHRhcmdldEJsb2NrIC8gdGhpcy50aW1lUGVyaW9kc1tpXS5taWxsaXNlY29uZHMgPj0gMSkge1xuICAgICAgICAvLyBjaGVja2luZyB3aGV0aGVyIHRoZSB1bml0IGlzIG9mIHRoZSBoaWdoZXIgb3JkZXIgYW5kIG9ubHkgbXVsdGlwbGllciAxIGlzIGFwcGxpY2FibGVcbiAgICAgICAgaWYgKE1hdGguZmxvb3IoKGFjdGl2ZVdpbmRvdykgLyB0aGlzLnRpbWVQZXJpb2RzW2ldLm1pbGxpc2Vjb25kcykgPCAxKSB7XG4gICAgICAgICAgdGhpcy5zdGFuZGFyZENhbGN1bGF0ZWRQZXJpb2RzLnB1c2goe1xuICAgICAgICAgICAgJ2FiYnJldmlhdGlvbic6IHRoaXMudGltZVBlcmlvZHNbaV0uYWJicmV2aWF0aW9uLFxuICAgICAgICAgICAgJ2Rlc2NyaXB0aW9uJzogdGhpcy50aW1lUGVyaW9kc1tpXS5kZXNjcmlwdGlvbixcbiAgICAgICAgICAgICdtaWxsaXNlY29uZHMnOiB0aGlzLnRpbWVQZXJpb2RzW2ldLm1pbGxpc2Vjb25kcyxcbiAgICAgICAgICAgICdtdWx0aXBsaWVycyc6IFsxXVxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2UgeyAvLyBpZiB0aGUgdW5pdCBpcyBvZiB0aGUgb3JkZXIgb2YgdGhlIHRhcmdldCBibG9jayBhbmQgY2FsY3VsYXRpbmcgdGhlIG11bHRpcGxpZXJzXG4gICAgICAgICAgdGhpcy5zdGFuZGFyZENhbGN1bGF0ZWRQZXJpb2RzLnB1c2goe1xuICAgICAgICAgICAgJ2FiYnJldmlhdGlvbic6IHRoaXMudGltZVBlcmlvZHNbaV0uYWJicmV2aWF0aW9uLFxuICAgICAgICAgICAgJ2Rlc2NyaXB0aW9uJzogdGhpcy50aW1lUGVyaW9kc1tpXS5kZXNjcmlwdGlvbixcbiAgICAgICAgICAgICdtaWxsaXNlY29uZHMnOiB0aGlzLnRpbWVQZXJpb2RzW2ldLm1pbGxpc2Vjb25kcyxcbiAgICAgICAgICAgICdtdWx0aXBsaWVycyc6IFtdXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgLy8gY2FsY3VsYXRpbmcgYW5kIHBvcHVsYXRpbmcgdGhlIGFwcGxpY2FibGUgbXVsdHBsaWVycyBvZiBlYWNoIHVuaXRcbiAgICAgICAgICBmb3IgKGogPSAwOyBqIDwgdGhpcy50aW1lUGVyaW9kc1tpXS5tdWx0aXBsaWVycy5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgaWYgKGFjdGl2ZVdpbmRvdyAvIDEwIDwgdGhpcy50aW1lUGVyaW9kc1tpXS5tdWx0aXBsaWVyc1tqXSAqIHRoaXMudGltZVBlcmlvZHNbaV0ubWlsbGlzZWNvbmRzKSB7XG4gICAgICAgICAgICAgIHRoaXMuc3RhbmRhcmRDYWxjdWxhdGVkUGVyaW9kc1t0aGlzLnN0YW5kYXJkQ2FsY3VsYXRlZFBlcmlvZHMubGVuZ3RoIC0gMV0ubXVsdGlwbGllcnMucHVzaChcbiAgICAgICAgICAgICAgICB0aGlzLnRpbWVQZXJpb2RzW2ldLm11bHRpcGxpZXJzW2pdXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy5kcmF3QnV0dG9uc0NhbGN1bGF0ZWQodGhpcy5zdGFuZGFyZENhbGN1bGF0ZWRQZXJpb2RzKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBBIGZ1bmN0aW9uIHRvIGdlbmVyYXRlIHRoZSBjb250ZXh0dWFsIGJ1dHRvbnMgdXNpbmdcbiAgICogdGhlIGVuZCBwb2ludCBvZiB0aGUgdGltZS1zY2FsZVxuICAgKi9cbiAgZ2VuZXJhdGVDb250ZXh0dWFsQnV0dG9ucyAoKSB7XG4gICAgLy8gZ2VuZXJhdGluZyBhbiBhcnJheSB3aXRoIGFwcGxpY2FibGUgVEQgYnV0dG9uc1xuICAgIHZhciBidXR0b25zID0gW10sXG4gICAgICBpID0gMCxcbiAgICAgIGVuZFN0YW1wID0gdGhpcy5lbmREYXRhc2V0LFxuICAgICAgZGF0ZVN0YXJ0ID0gbmV3IERhdGUoZW5kU3RhbXApLFxuICAgICAgZGF0ZUVuZCA9IG5ldyBEYXRlKGVuZFN0YW1wKTtcbiAgICBmb3IgKDsgaSA8IHRoaXMudGRCdXR0b25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICBkYXRlU3RhcnQgPSBuZXcgRGF0ZShlbmRTdGFtcCk7XG4gICAgICBpZiAodGhpcy50ZEJ1dHRvbnNbaV0ubmFtZSA9PT0gJ1lURCcpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ1lURCcpO1xuICAgICAgICBkYXRlU3RhcnQuc2V0TW9udGgoMCk7XG4gICAgICAgIGRhdGVTdGFydC5zZXREYXRlKDApO1xuICAgICAgICBkYXRlU3RhcnQuc2V0SG91cnMoMCk7XG4gICAgICAgIGRhdGVTdGFydC5zZXRNaW51dGVzKDApO1xuICAgICAgICBkYXRlU3RhcnQuc2V0U2Vjb25kcygwKTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy50ZEJ1dHRvbnNbaV0ubmFtZSA9PT0gJ01URCcpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ01URCcpO1xuICAgICAgICBkYXRlU3RhcnQuc2V0RGF0ZSgwKTtcbiAgICAgICAgZGF0ZVN0YXJ0LnNldEhvdXJzKDApO1xuICAgICAgICBkYXRlU3RhcnQuc2V0TWludXRlcygwKTtcbiAgICAgICAgZGF0ZVN0YXJ0LnNldFNlY29uZHMoMCk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMudGRCdXR0b25zW2ldLm5hbWUgPT09ICdRVEQnKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdRVEQnKTtcbiAgICAgICAgZGF0ZVN0YXJ0LnNldE1vbnRoKDExIC0gKGRhdGVTdGFydC5nZXRNb250aCgpICUgNCkpO1xuICAgICAgICBkYXRlU3RhcnQuc2V0RGF0ZSgwKTtcbiAgICAgICAgZGF0ZVN0YXJ0LnNldEhvdXJzKDApO1xuICAgICAgICBkYXRlU3RhcnQuc2V0TWludXRlcygwKTtcbiAgICAgICAgZGF0ZVN0YXJ0LnNldFNlY29uZHMoMCk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMudGRCdXR0b25zW2ldLm5hbWUgPT09ICdXVEQnKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdXVEQnKTtcbiAgICAgICAgZGF0ZVN0YXJ0LnNldERhdGUoZGF0ZVN0YXJ0LmdldERhdGUoKSAtIGRhdGVTdGFydC5nZXREYXkoKSk7XG4gICAgICAgIGRhdGVTdGFydC5zZXRIb3VycygwKTtcbiAgICAgICAgZGF0ZVN0YXJ0LnNldE1pbnV0ZXMoMCk7XG4gICAgICAgIGRhdGVTdGFydC5zZXRTZWNvbmRzKDApO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLnRkQnV0dG9uc1tpXS5uYW1lID09PSAnWScpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ1knKTtcbiAgICAgICAgZGF0ZVN0YXJ0LnNldEhvdXJzKDApO1xuICAgICAgICBkYXRlU3RhcnQuc2V0TWludXRlcygwKTtcbiAgICAgICAgZGF0ZVN0YXJ0LnNldFNlY29uZHMoMCk7XG4gICAgICAgIGRhdGVTdGFydCAtPSA4NjQwMDAwMDtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy50ZEJ1dHRvbnNbaV0ubmFtZSA9PT0gJ1QnKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdUJyk7XG4gICAgICAgIGRhdGVTdGFydC5zZXRIb3VycygwKTtcbiAgICAgICAgZGF0ZVN0YXJ0LnNldE1pbnV0ZXMoMCk7XG4gICAgICAgIGRhdGVTdGFydC5zZXRTZWNvbmRzKDApO1xuICAgICAgfVxuXG4gICAgICBpZiAoZGF0ZUVuZCA8IGRhdGVTdGFydCkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMudGRCdXR0b25zW2ldLmRhdGVTdGFydCA9IGRhdGVTdGFydC52YWx1ZU9mKCk7XG4gICAgICAgIHRoaXMudGRCdXR0b25zW2ldLmRhdGVFbmQgPSBkYXRlRW5kLnZhbHVlT2YoKTtcbiAgICAgICAgYnV0dG9ucy5wdXNoKHRoaXMudGRCdXR0b25zW2ldKTtcbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy5zdGFuZGFyZENvbnRleHVhbFBlcmlvZHMgPSBidXR0b25zO1xuICAgIHRoaXMuZHJhd0J1dHRvbnNDb250ZXh0dWFsKHRoaXMuc3RhbmRhcmRDb250ZXh1YWxQZXJpb2RzKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBBIGZ1bmN0aW9uIHRvIHNldCB0aGUgYWN0aXZlIHBlcmlvZCdzXG4gICAqIHN0YXJ0IGFuZCBlbmQgcG9pbnRcbiAgICogQHBhcmFtICB7bnVtYmVyfSBkYXRlIHN0YW1wIC0gQSBVTklYIHRpbWVzdGFtcCB0byBiZSBzZXQgYXMgdGhlIHN0YXJ0IHBvaW50IG9mIGFjdGl2ZSBwZXJpb2RcbiAgICogQHBhcmFtICB7bnVtYmVyfSBkYXRlIHN0YW1wIC0gQSBVTklYIHRpbWVzdGFtcCB0byBiZSBzZXQgYXMgdGhlIGVuZCBwb2ludCBvZiBhY3RpdmUgcGVyaW9kXG4gICAqL1xuICBzZXRBY3RpdmVQZXJpb2QgKHN0YXJ0LCBlbmQpIHtcbiAgICBjb25zb2xlLmxvZyhzdGFydCwgZW5kKTtcbiAgICB0aGlzLnN0YXJ0QWN0aXZlV2luZG93ID0gc3RhcnQ7XG4gICAgdGhpcy5lbmRBY3RpdmVXaW5kb3cgPSBlbmQ7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N0YXJ0QWN0aXZlUmFuZ2UnKS5pbm5lckhUTUwgPSBuZXcgRGF0ZSh0aGlzLnN0YXJ0QWN0aXZlV2luZG93KTtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZW5kQWN0aXZlUmFuZ2UnKS5pbm5lckhUTUwgPSBuZXcgRGF0ZSh0aGlzLmVuZEFjdGl2ZVdpbmRvdyk7XG4gICAgdGhpcy5nZW5lcmF0ZUNhbGN1bGF0ZWRCdXR0b25zKCk7XG4gIH1cblxuICAvKipcbiAgICogQSBmdW5jdGlvbiB0byBzZXQgdGhlIHN0YXJ0IGFuZCBlbmQgcG9pbnQgb2YgdGhlXG4gICAqIGVudGlyZSB0aW1lLWxpbmVcbiAgICogQHBhcmFtICB7bnVtYmVyfSBkYXRlIHN0YW1wIC0gQSBVTklYIHRpbWVzdGFtcCB0byBiZSBzZXQgYXMgdGhlIHN0YXJ0IHBvaW50IG9mIHRpbWUtbGluZVxuICAgKiBAcGFyYW0gIHtudW1iZXJ9IGRhdGUgc3RhbXAgLSBBIFVOSVggdGltZXN0YW1wIHRvIGJlIHNldCBhcyB0aGUgZW5kIHBvaW50IG9mIHRpbWUtbGluZVxuICAgKi9cbiAgc2V0VGltZWxpbmUgKHN0YXJ0LCBlbmQpIHtcbiAgICBjb25zb2xlLmxvZyhzdGFydCwgZW5kKTtcbiAgICB0aGlzLnN0YXJ0RGF0YXNldCA9IHN0YXJ0O1xuICAgIHRoaXMuZW5kRGF0YXNldCA9IGVuZDtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3RhcnRBY3RpdmVSYW5nZScpLmlubmVySFRNTCA9IG5ldyBEYXRlKHRoaXMuc3RhcnREYXRhc2V0KTtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZW5kQWN0aXZlUmFuZ2UnKS5pbm5lckhUTUwgPSBuZXcgRGF0ZSh0aGlzLmVuZERhdGFzZXQpO1xuICAgIHRoaXMuZ2VuZXJhdGVDYWxjdWxhdGVkQnV0dG9ucygpO1xuICB9XG5cbiAgLyoqXG4gICAqIEEgZnVuY3Rpb24gdG8gZHJhdyB0aGUgY2FsY3VsYXRlZCBidXR0b25zIGluIHRoZSBjYW52YXNcbiAgICogQHBhcmFtICB7YXJyYXl9IGFycmF5IG9mIG9iamVjdHMgLSBBbiBhcnJheSBvZiBvYmplY3RzIHdpdGggdGhlIHN0YW5kYXJkIHBlcmlvZHMgdG8gYmUgZHJhd24gaW5mb3JtYXRpb25cbiAgICovXG4gIGRyYXdCdXR0b25zQ2FsY3VsYXRlZCAoc3RhbmRhcmRQZXJpb2RzKSB7XG4gICAgdmFyIGNhbGN1bGF0ZWRCdXR0b25zID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NhbGN1bGF0ZWQnKSxcbiAgICAgIGJ0bixcbiAgICAgIGkgPSAwLFxuICAgICAgaiA9IDAsXG4gICAgICBtdWx0aXBsaWVyVmFsdWUgPSAwLFxuICAgICAgc2VsZiA9IHRoaXM7XG4gICAgY2FsY3VsYXRlZEJ1dHRvbnMuaW5uZXJIVE1MID0gJyc7XG4gICAgZm9yIChpID0gc3RhbmRhcmRQZXJpb2RzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgICBmb3IgKGogPSBzdGFuZGFyZFBlcmlvZHNbaV0ubXVsdGlwbGllcnMubGVuZ3RoIC0gMTsgaiA+PSAwOyBqLS0pIHtcbiAgICAgICAgYnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnQlVUVE9OJyk7XG4gICAgICAgIGJ0bi5pZCA9IHN0YW5kYXJkUGVyaW9kc1tpXS5tdWx0aXBsaWVyc1tqXSArIHN0YW5kYXJkUGVyaW9kc1tpXS5hYmJyZXZpYXRpb247XG4gICAgICAgIGJ0bi5pbm5lckhUTUwgPSBzdGFuZGFyZFBlcmlvZHNbaV0ubXVsdGlwbGllcnNbal0gKyBzdGFuZGFyZFBlcmlvZHNbaV0uYWJicmV2aWF0aW9uO1xuICAgICAgICBtdWx0aXBsaWVyVmFsdWUgPSBzdGFuZGFyZFBlcmlvZHNbaV0ubXVsdGlwbGllcnNbal0gKiBzdGFuZGFyZFBlcmlvZHNbaV0ubWlsbGlzZWNvbmRzO1xuICAgICAgICBidG4ubXVsdGlwbGllclZhbHVlID0gbXVsdGlwbGllclZhbHVlO1xuICAgICAgICBidG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICBzZWxmLnNldEFjdGl2ZVBlcmlvZChzZWxmLmVuZEFjdGl2ZVdpbmRvdyAtIGV2ZW50LnNyY0VsZW1lbnQubXVsdGlwbGllclZhbHVlLCBzZWxmLmVuZEFjdGl2ZVdpbmRvdyk7XG4gICAgICAgICAgY29uc29sZS5sb2coc2VsZi5lbmRBY3RpdmVXaW5kb3cgLSBldmVudC5zcmNFbGVtZW50Lm11bHRpcGxpZXJWYWx1ZSwgc2VsZi5lbmRBY3RpdmVXaW5kb3cpO1xuICAgICAgICB9KTtcbiAgICAgICAgY2FsY3VsYXRlZEJ1dHRvbnMuYXBwZW5kQ2hpbGQoYnRuKTtcbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy5zdGFuZGFyZENhbGN1bGF0ZWRQZXJpb2RzID0gW107XG4gIH1cblxuICAvKipcbiAgICogQSBmdW5jdGlvbiB0byBkcmF3IHRoZSBjb250ZXh0dWFsIGJ1dHRvbnMuXG4gICAqIEBwYXJhbSAge2FycmF5fSBhcnJheSBvZiBvYmplY3RzIC0gQW4gYXJyYXkgb2Ygb2JqZWN0cyB3aXRoIHRoZSBzdGFuZGFyZCBwZXJpb2RzIHRvIGJlIGRyYXduIGluZm9ybWF0aW9uXG4gICAqL1xuICBkcmF3QnV0dG9uc0NvbnRleHR1YWwgKHN0YW5kYXJkUGVyaW9kcykge1xuICAgIHZhciBjb250ZXh0dWFsQnV0dG9ucyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb250ZXh0dWFsJyksXG4gICAgICBidG4sXG4gICAgICBpID0gMCxcbiAgICAgIHNlbGYgPSB0aGlzO1xuICAgIGNvbnRleHR1YWxCdXR0b25zLmlubmVySFRNTCA9ICcnO1xuICAgIGNvbnNvbGUubG9nKHN0YW5kYXJkUGVyaW9kcyk7XG4gICAgZm9yIChpID0gMDsgaSA8IHN0YW5kYXJkUGVyaW9kcy5sZW5ndGg7IGkrKykge1xuICAgICAgYnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnQlVUVE9OJyk7XG4gICAgICBidG4uaWQgPSBzdGFuZGFyZFBlcmlvZHNbaV0uYWJicmV2aWF0aW9uO1xuICAgICAgYnRuLmlubmVySFRNTCA9IHN0YW5kYXJkUGVyaW9kc1tpXS5hYmJyZXZpYXRpb247XG4gICAgICBidG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBldmVudEJ0bi5iaW5kKHRoaXMsIHN0YW5kYXJkUGVyaW9kc1tpXSkpO1xuICAgICAgY29udGV4dHVhbEJ1dHRvbnMuYXBwZW5kQ2hpbGQoYnRuKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZXZlbnRCdG4gKG9iaikge1xuICAgICAgc2VsZi5zZXRBY3RpdmVQZXJpb2Qob2JqLmRhdGVTdGFydCwgb2JqLmRhdGVFbmQpO1xuICAgICAgY29uc29sZS5sb2cob2JqLmRhdGVTdGFydCwgb2JqLmRhdGVFbmQpO1xuICAgIH1cbiAgICB0aGlzLnN0YW5kYXJkQ29udGV4dHVhbFBlcmlvZHMgPSBbXTtcbiAgfVxuXG4gIC8qKlxuICAgKiBBIGZ1bmN0aW9uIHRvIGRyYXcgdGhlIEFMTCBidXR0b24uXG4gICAqIEBwYXJhbSAge2FycmF5fSBhcnJheSBvZiBvYmplY3RzIC0gQW4gYXJyYXkgb2Ygb2JqZWN0cyB3aXRoIHRoZSBzdGFuZGFyZCBwZXJpb2RzIHRvIGJlIGRyYXduIGluZm9ybWF0aW9uXG4gICAqL1xuICBkcmF3QnV0dG9uQWxsIChzdGFuZGFyZFBlcmlvZHMpIHtcbiAgICB2YXIgYWxsQnV0dG9ucyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhbGxCdXR0b24nKSxcbiAgICAgIGJ0bixcbiAgICAgIHNlbGYgPSB0aGlzO1xuICAgIGFsbEJ1dHRvbnMuaW5uZXJIVE1MID0gJyc7XG4gICAgY29uc29sZS5sb2coc3RhbmRhcmRQZXJpb2RzKTtcbiAgICBidG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdCVVRUT04nKTtcbiAgICBidG4uaWQgPSAnYWxsJztcbiAgICBidG4uaW5uZXJIVE1MID0gJ0FMTCc7XG4gICAgYnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICBzZWxmLnNldEFjdGl2ZVBlcmlvZChzZWxmLnN0YXJ0RGF0YXNldCwgc2VsZi5lbmREYXRhc2V0KTtcbiAgICB9KTtcbiAgICBhbGxCdXR0b25zLmFwcGVuZENoaWxkKGJ0bik7XG4gIH1cblxuICAvKipcbiAgICogQSBmdW5jdGlvbiB0byBzZXQgdGhlIG9iamVjdCB0byBzZXQgdGhlIHVzZXIgcHJlZmVyZW5jZXNcbiAgICovXG4gIGNvbmZpZ3VyZSAoY29uZmlnKSB7XG4gICAgdGhpcy5jb25maWcgPSBjb25maWc7XG4gIH1cblxuICAvKipcbiAgICogRnVzaW9uY2hhcnRzIGxpZmUgY3ljbGUgbWV0aG9kIGZvciBleHRlbnNpb25cbiAgICovXG4gIGluaXQgKHJlcXVpcmUpIHtcbiAgICByZXF1aXJlKCdYLUF4aXMnLCAnWS1BeGlzJywgJ2dyYXBoaWNzJywgJ2NoYXJ0JywgJ2V4dGVuc2lvbkRhdGEnLCAnZGF0ZUZvcm1hdHRlcicsXG4gICAgICBmdW5jdGlvbiAoeCwgeSwgZ3JhcGhpY3MsIGNoYXJ0LCBleHREYXRhLCBkYXRlRm9ybWF0dGVyKSB7XG5cbiAgICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEZ1c2lvbmNoYXJ0cyBsaWZlIGN5Y2xlIG1ldGhvZCBmb3IgZXh0ZW5zaW9uXG4gICAqL1xuICBwbGFjZUluQ2FudmFzICgpIHt9XG5cbiAgLyoqXG4gICAqIEZ1c2lvbmNoYXJ0cyBsaWZlIGN5Y2xlIG1ldGhvZCBmb3IgZXh0ZW5zaW9uXG4gICAqL1xuICBkcmF3ICgpIHtcbiAgICAvLyBkcmF3aW5nIG9mIHRoZSBzdGFuZGFyZCB0aW1lIHBlcmlvZHMgaGFwcGVucyBoZXJlXG4gIH1cblxuICAvKipcbiAgICogRnVzaW9uY2hhcnRzIGxpZmUgY3ljbGUgbWV0aG9kIGZvciBleHRlbnNpb25cbiAgICovXG4gIGRpc3Bvc2UgKCkge31cbn1cblxuaWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBtb2R1bGUuZXhwb3J0cyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSBTdGFuZGFyZFBlcmlvZFNlbGVjdG9yO1xufSBlbHNlIHtcbiAgd2luZG93LlN0YW5kYXJkUGVyaW9kID0gU3RhbmRhcmRQZXJpb2RTZWxlY3Rvcjtcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL3N0YW5kYXJkLXBlcmlvZC1zZWxlY3Rvci5qc1xuLy8gbW9kdWxlIGlkID0gMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXX0=